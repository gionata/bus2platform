#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass univpmphdthesis
\begin_preamble
%%%
%\usepackage[ruled,vlined,lined,boxed,linesnumbered,algochapter]{algorithm2e}
\usepackage[lined,boxed,commentsnumbered,algochapter]{algorithm2e}
\renewcommand{\listalgorithmcfname}{Elenco degli algoritmi}%
\renewcommand{\algorithmcfname}{Algoritmo}%
\renewcommand{\algocf@typo}{}%
\renewcommand{\@algocf@procname}{Procedura}
\renewcommand{\@algocf@funcname}{Funzione}
%%%
\usepackage[x11names, rgb]{xcolor}
\usepackage{tikz}
\usetikzlibrary{snakes,arrows,shapes}
\usepackage{pgfplots}
%\pgfplotsset{compat=1.5.1}
\newcommand*\circled[1]{\tikz[baseline=(char.base)]{%
            \node[shape=circle,draw,inner sep=2pt] (char) {#1};}}

\usepackage{ifpdf}
\end_preamble
\options lof,lot,a4print
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\pdf_author "Gionata Massi <g.massi@univpm.it>"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout PhD School
Scuola di Dottorato di Ricerca in Scienze dell'Ingegneria
\end_layout

\begin_layout PhD Faculty
Facoltà di Ingegneria
\end_layout

\begin_layout PhD Curriculum
Curriculum in Ingegneria Informatica, Gestionale e dell'Automazione
\end_layout

\begin_layout PhD Title
Allocazione dinamica e pianificazione delle risorse nella gestione di una
 autostazione
\end_layout

\begin_layout PhD Author
Gionata Massi
\end_layout

\begin_layout PhD Advisor
Prof.
\begin_inset space ~
\end_inset

Ferdinando Pezzella
\end_layout

\begin_layout PhD CurriculumAdvisor
Prof.
\begin_inset space ~
\end_inset

Sauro Longhi
\end_layout

\begin_layout PhD Cycle
10
\end_layout

\begin_layout PhD Location
Ancona
\end_layout

\begin_layout PhD Time
Gennaio 2012
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Desidero ringraziare il Prof.
 Ferdinando Pezzella per la disponibilità, la fiducia e l'aiuto e le opportunità
 che mi ha offerto in questi anni.
 I suoi insegnamenti mi hanno introdotto nell'affascinate mondo della Ricerca
 Operativa ed egli mi ha trasmesso curosità e passione per questa disciplina.
\end_layout

\begin_layout PhD Thesis Acknowledge
Un ringraziamento a Fabrizio Marinelli per l'esempio di rigore metodologico.
\end_layout

\begin_layout PhD Thesis Acknowledge
Un sentito grazie a Luigi De Giovanni.
\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie a Gianluca Morganti, per l'amicizia, il sostegno, la pazienza e le
 serate trascorse insieme.
\end_layout

\begin_layout PhD Thesis Acknowledge
Voglio ringraziare anche i miei genitori, che si ritrovano un figlio che
 ad oltre trent'anni s'ostina a fare lo studente.
\end_layout

\begin_layout PhD Thesis Acknowledge
Un ringraziamento speciale a Lucilla.
\end_layout

\begin_layout PhD Thesis Acknowledge
Altro grazie ai tesisti che hanno scritto la tesi in questi anni in laboratorio
 di Ricerca Operativa ed Ottimizzazione: Alberto, Angelo, Marco e Tulliola.
\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie a Ludovico, compagno di corso, di progetti e di dottorato.
\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie a Simone, amico con cui ho alternato discorsi tecnici, esperienze
 enogastronomiche e fantastici bagni al mare.
\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie a Roberto, con cui ho frequentato insieme le scuole superiori e ho
 ritrovato in quest'esperienza di dottorato.
\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie agli amici sempre più internazionali della 
\begin_inset Quotes eld
\end_inset

Tana del Bianconiglio
\begin_inset Quotes erd
\end_inset

: Andrea, Antonio, Carlo, Elena, Carlo, Emanuele, Francesco, Manuela, Massimo,
 Serena, Viola.
 
\end_layout

\begin_layout PhD Thesis Abstract
Uno dei maggiori problemi che si presenta nella gestione operativa di un’autosta
zione è l’assegnamento dei bus alle piattaforme disponibili.
 Tale problema è noto in letteratura come Gate Assignment Problem e consiste
 nel determinare il miglior assegnamento ammissibile dei bus alle piattaforme
 basato su certi criteri di preferenza, nota la tabella oraria giornaliera
 dei bus.
 Affinché una soluzione sia ammissibile devono essere soddisfatti almeno
 due vincoli: ogni bus deve essere assegnato a una e una sola piattaforma
 e due bus i cui intervalli temporali di occupazione della piattaforma si
 sovrappongono non possono essere assegnati alla stessa piattaforma.
\end_layout

\begin_layout PhD Thesis Abstract
Problemi simili all’assegnamento delle piattaforme nelle autostazioni nascono
 nella gestione di aeroporti, stazioni ferroviarie, porti, interporti e
 così via.
 Ci sono anche forti somiglianze con il problema dell’assegnamento dei registri
 nei processori di segnale digitale (DSP).
 Nel caso dell’autostazione il gestore può richiedere che gli assegnamenti
 bus-piattaforme siano tali da occupare il minor numero di piattaforme nell’oriz
zonte di pianificazione.
 Per questo problema si propone una formulazione innovativa come problema
 di restricted-coloring di un grafo d’intervallo e un modello di programmazione
 lineare intera per la sua risoluzione.
\end_layout

\begin_layout PhD Thesis Abstract
Situazioni di mancato rispetto della tabella oraria, quali arrivi in anticipo
 o ritardo e partenze in ritardo, sono piuttosto frequenti nella gestione
 quotidiana di un’autostazione e spesso fanno sì che non sia possibile assegnare
 i bus coinvolti alla piattaforma prevista.
 Per questo motivo si è considerato un modello di programmazione matematica
 per aumentare la robustezza delle soluzioni minimizzando la probabilità
 che i bus assegnati alla stessa piattaforma siano “in conflitto”.
\end_layout

\begin_layout PhD Thesis Abstract
Per finire, allo scopo di generare una buona soluzione in un tempo di calcolo
 ragionevole, si propone anche un algoritmo euristico basato sull’idea di
 risolvere il problema mediante una suddivisione in sottoproblemi più piccoli
 utilizzando un controllo a orizzonte recessivo, e una successiva ricostruzione
 della soluzione completa.
\end_layout

\begin_layout PhD Thesis Abstract
Sono stati svolti esperimenti computazionali su una autostazione esistente
 con 24 piattaforme e più di duecento corse che hanno dimostrato l’efficacia
 dell’approccio.
\end_layout

\begin_layout PhD TOC
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash
clearpage
\backslash
pdfbookmark[0]{Elenco degli algoritmi}{Elenco degli algoritmi}
\backslash
listofalgorithms
\backslash
clearpage%
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Allocazione delle piattaforme in un'autostazione
\begin_inset Note Note
status open

\begin_layout Plain Layout
Problem setting
\end_layout

\end_inset


\end_layout

\begin_layout Section
L'autostazione
\end_layout

\begin_layout Standard
Un'
\emph on
autostazione
\emph default
 (bus terminal) è un'infrastruttura di trasporto in cui convergono veicoli
 adibiti al trasporto pubblico di persone ed è il luogo dove i passeggeri
 aspettano, salgono a bordo e scendono dagli autobus.
 Le dimensioni sono maggiori rispetto a quelle di una 
\emph on
fermata
\emph default
 dell'autobus, che può essere un'area sul ciglio della strada sufficientemente
 ampia per permettere ad un autobus di fermarsi.
 Essa può essere una 
\emph on
stazione terminale
\emph default
 in cui hanno inizio e fine alcuni percorsi di linea, o una 
\emph on
stazione di transito
\emph default
 in cui i percorsi non hanno termine ma possono proseguire in direzione
 di altre fermate.
 L'infrastruttura ha lo scopo di permettere ai passeggeri di effettuare
 facilmente il cambio di mezzo di trasporto o di percorso e può fornire
 loro servizi quali tabelloni informativi, sale d'aspetto, bar, servizi
 igienici, deposito bagagli, posteggi di taxi e biglietterie.
 Deve, altresì, facilitare le operazioni di manovra dei veicoli, deve poter
 fungere da scalo per le corse in transito e da capolinea per quelle terminali.
\end_layout

\begin_layout Standard
I passeggeri salgono e scendono dagli autobus in zone dette 
\emph on
piattaforme 
\emph default
o anche 
\emph on
gate
\emph default
 (platform o anche bus loading area o berth).
 Le piattaforme possono essere disposte secondo vari schemi che influenzano
 sia l'accessibilità da parte dei veicoli di varie tipologie che il tempo
 minimo in cui un veicolo occupa la piattaforma.
 Questo tempo è diverso per veicoli che iniziano o terminano il servizio
 nell'autostazione e per veicoli che sono in transito.
 Le piattaforme possono essere assegnate in maniera fissa alle linee o alle
 singole corse, oppure possono essere assegnate in modo flessibile se l'autostaz
ione ha un sistema dinamico di informazione che permetta agli utenti (passeggeri
 e conducenti) di conoscere in anticipo la piattaforma in cui fermerà l'autobus.
 Siccome le piattaforme sono risorse scarse e costose è preferibile la seconda
 modalità di utilizzo che richiede un minor numero di piattaforme in quanto
 permette un utilizzo più efficiente del piazzale (un numero maggiore di
 servizi di trasporto, a parità di piattaforme disponibili) ma non fornisce
 al passeggero e al conducente la comodità di conoscere la piattaforma con
 largo anticipo e richiede di decidere gli assegnamenti fermata-piattaforma.
 La piattaforma di arrivo o partenza del veicolo è soggetta a variazioni
 dinamiche rispetto al servizio programmato dovute alle caratteristiche
 stocastiche dei tempi di arrivo e partenza degli autobus, e a eventi anomali
 come la cancellazione di corse, la creazione di nuove corse o situazioni
 di avaria di veicoli o altri eventi imprevedibili.
\end_layout

\begin_layout Standard
Il problema affrontato in questa tesi è quello di determinare assegnamenti
 delle fermate delle corse alle piattaforme, che possono essere definite
 in anticipo in base alle tabelle orarie delle corse in un certo periodo
 di tempo e possono essere riassegnate in modo dinamico avvalendosi, possibilmen
te, dei dati in tempo reale sulla posizione dei veicoli.
 Gli assegnamenti di un veicolo ad una piattaforma possono essere soggetti
 a vari vincoli di compatibilità.
 La gestione manuale dei processi della stazione risulta sempre più complessa
 al crescere del numero di servizi di trasporto e di piattaforme da gestire
 fino a diventare impraticabile per un operatore umano e una politica di
 assegnamento non corretta può comportare forte disagi ai passeggeri ed
 agli autisti, compromettendo il buon funzionamento dell'autostazione.
\end_layout

\begin_layout Standard
Il caso di studio su cui sono state effettuate le prove numeriche deriva
 dai dati di una giornata di operazioni dell'Autostazione di Bologna.
\end_layout

\begin_layout Standard
L'Autostazione di Bologna è un importante nodo di smistamento della mobilità
 su autobus extraurbani, nazionali e internazionali, situato in prossimità
 della Stazione Centrale.
 La struttura venne inaugurata nel 1967 ed è tuttora la più importante in
 Italia per funzionalità ed ampiezza, paragonabile alle grandi stazioni
 attive in molti Paesi europei e americani.
 Oltre 90.000 utenti, tra viaggiatori o semplici passanti, transitano in
 Autostazione nel corso di una settimana, con punte massime giornaliere
 di quasi 15.000 persone.
 La sua superficie complessiva è di 17.000 m
\begin_inset Formula $^{2}$
\end_inset

 divisi in un piazzale di manovra, un edificio che ospita uffici ed attività
 commerciali e un'atrio antistante l'edificio.
 Il piazzale di manovra e movimentazione dei pullman ospita un marciapiede
 arrivi, di oltre 170 m, un marciapiede partenze diviso in 24 piattaforme,
 un marciapiede centrale destinato alla movimentazione e sosta degli autobus
 turistici, un marciapiede per i passeggeri con panchine e salette d'attesa,
 servizi igienici e tabelloni informativi.
 I marciapiedi sono coperti da estese tettoie in modo da garantire riparo
 ai passeggeri.
 È presente inoltre un servizio deposito bagagli.
 Il piazzale è automatizzato e il sistema di segnalazione può disciplinare
 fino a 1400 partenze giornaliere.
 La gestione 
\begin_inset Quotes eld
\end_inset

manuale
\begin_inset Quotes eld
\end_inset

 dei processi del terminal è stata sostituita, negli ultimi anni, da un
 sistema avanzato di gestione automatica per ottenere un maggior controllo
 e rendimento dell'autostazione.
 Un modulo di questo sistema è quello di ottimizzazione della gestione delle
 piattaforme di partenza, che ha lo scopo di minimizzare il numero complessivo
 di piattaforme impegnate in una giornata.
 L'applicazione formula dei piani a partire dall'orario schedulato e deve
 anche gestire in real-time le anomalie quali ritardi o cancellazioni di
 corse.
\end_layout

\begin_layout Section
Le modalità di erogazione dei servizi di trasporto
\end_layout

\begin_layout Standard
Una 
\emph on
linea
\emph default
 (line) è un servizio di trasporto operato su uno specifico percorso, che
 collega un capolinea di partenza ad un capolinea di destinazione passando
 per delle fermate intermedie, o su più percorsi.
 Una linea ha definita la frequenza delle corse, per ogni fascia oraria,
 e i tempi di partenza dal capolinea e di passaggio presso ogni fermata
 sono espansi nella tabella oraria.
\end_layout

\begin_layout Standard
I servizi di trasporto di una linea sono operati da una 
\emph on
compagnia di trasporto
\emph default
.
\end_layout

\begin_layout Standard
Una 
\emph on
corsa
\emph default
 (trip o run) è il movimento di un veicolo dall'inizio di una linea o percorso
 alla fine di esso.
 
\end_layout

\begin_layout Standard
Una 
\emph on
fermata
\emph default
 (bus stop o bus stand) può disporre di pensilina e posti a sedere e di
 tabelloni o pannelli per fornire informazioni di servizio come le tabelle
 orarie ed eventualmente i dati in tempo reale sui veicoli in arrivo.
\end_layout

\begin_layout Standard
La 
\emph on
tabella oraria
\emph default
 (schedule) definisce per ogni corsa il tempo di partenza dal capolinea
 d'inizio, il tempo di passaggio presso ogni fermata intermedia e il tempo
 di arrivo al capolinea di fine corsa.
\end_layout

\begin_layout Standard
La tabella oraria specifica quali servizi saranno garantiti in un dato 
\emph on
periodo 
\emph default
che ha una data di inizio e di fine e che specifica precisi giorni della
 settimana.
 L'orario delle corse può subire modifiche rispetto alla pianificazione
 del 
\emph on
periodo
\emph default
 per far fronte richieste particolari in alcuni 
\emph on
giorni
\emph default
.
\end_layout

\begin_layout Standard
Vi sono diverse 
\emph on
tipologie di veicoli
\emph default
 che meglio si adattano a svolgere alcuni servizi.
 Ogni corsa ha definita una lista di tipologie di veicolo compatibili.
\end_layout

\begin_layout Standard
Le piattaforme di una autostazione, e l'autostazione stessa, possono non
 essere disponibili in determinate fasce orarie di un periodo o di un giorno
 particolare.
\end_layout

\begin_layout Standard
Nel prosieguo utilizzeremo il termine 
\emph on
fermata
\emph default
 per indicare l'intervallo temporale in cui una piattaforma deve essere
 considerata occupata dal veicolo che esegue una corsa.
 Tale intervallo deve includere gli istanti di arrivo e di ripartenza del
 veicolo, che saranno distanti almeno quanto il tempo minimo di servizio
 dei passeggeri più il tempo necessario ad impegnare e disimpegnare la piattafor
ma, e un buffer temporale per permettere ai mezzi di operare in sicurezza.
 Più tale buffer è ampio e più il sistema di gestione delle piattaforme
 sarà in grado di far fronte agli scostamenti dei tempi di fermata programmati
 che si verificano durante l'esercizio.
 L'ampiezza dei buffer temporali, in alcune soluzioni, è scelto in funzione
 della fascia oraria, in quanto il numero di passeggeri da servire e di
 autobus in fermata nell'autostazione varia rispetto al tempo e presenta
 in genere due picchi in concomitanza delle ore di punta (peak hours), la
 mattina e il tardo pomeriggio.
 L'intervallo temporale in cui la piattaforma deve essere considerata occupata
 dal sistema di gestione delle piattaforme è funzione del tempo minimo necessari
o al veicolo per effettuare l'imbarco e lo sbarco dei passeggeri, del tempo
 necessario ad occupare e liberare la piattaforma e della fascia oraria.
 Una fermata è compatibile solo con alcune piattaforme e ciò dipende da
 vari motivi quali la capacità del gate o le politiche del gestore dell'autostaz
ione.
\end_layout

\begin_layout Standard
I problemi di assegnamento delle fermate dei bus alle piattaforme che si
 presentano l'uno durante la fase di pianificazione e l'altro durante l'esercizi
o.
 Il primo problema consiste nel decidere a quale piattaforma deve essere
 assegnato un autobus in arrivo, partenza o fermata temporanea noto l’orario
 delle corse.
 L'altro problema consiste nel variare alcuni assegnamenti durante l’esercizio
 per far fronte a eventi imprevisti che rendono il piano inattuabile.
 
\end_layout

\begin_layout Standard
Problemi simili sono noti nella letteratura scientifica come Gate Assignment
 Problem (GAP) e consistono nel determinare un assegnamento ammissibile
 di mezzi a gate che sia il migliore possibile in base a dei criteri di
 preferenza.
 Affinché il problema sia ammissibile devono essere soddisfatti almeno due
 vincoli: ogni fermata di un mezzo deve essere assegnata ad un gate e due
 mezzi i cui intervalli temporali di occupazione del gate (fermata) si sovrappon
gano non possono essere assegnati ad uno stesso gate.
\end_layout

\begin_layout Standard
Il problema del GAP viene di norma affrontato in due fasi.
 La prima fase consiste nella pianificazione degli assegnamenti, basata
 sugli orari schedulati di partenza ed arrivo dei mezzi ed eventualmente
 di relazioni di compatibilità fra mezzo e gate.
 I dati sono fissati e la pianificazione viene detta 
\begin_inset Quotes eld
\end_inset

statica
\begin_inset Quotes erd
\end_inset

.
 I piani statici possono essere generati 
\begin_inset Quotes eld
\end_inset

off-line
\begin_inset Quotes erd
\end_inset

, in tempi di elaborazione che possono protrarsi anche per ore.
 Le istanze del problema consistono nella lista dei mezzi che dovranno fermare
 nell'autostazione comprensiva dell'intervallo di occupazione del gate,
 nella lista dei gate ed eventualmente nelle compatibilità ed anche nelle
 preferenze espresse delle compagnie di trasporto rispetto ai gate.
 La soluzione consiste in un assegnamento ammissibile che soddisfi tutti
 i vincoli e che sia 
\begin_inset Quotes eld
\end_inset

buono
\begin_inset Quotes erd
\end_inset

 rispetto agli obiettivi stabiliti.
 La seconda fase avviene durante l'esercizio e consiste nel modificare l'assegna
mento prodotto dalla pianificazione statica per far fronte alle variazioni
 degli intervalli temporali delle fermate dei bus o alla creazione di corse
 aggiuntive.
 Il sistema di riassegnamento deve reagire in tempi di, al massimo, pochi
 secondi.
\end_layout

\begin_layout Standard
Il problema può avere molti criteri di preferenza, sia relativamente alla
 stessa autostazione che per autostazioni con politiche di assegnamento
 diversi, perciò risulta difficile stabilire una o più funzioni obiettivo
 generali che permettano di verificare l'ottimalità di una soluzione.
 Un software per il supporto alle decisioni per tale problema deve determinare
 una soluzione che sia di compromesso fra i differenti obiettivi e che soddisfi
 tutti i vincoli del problema.
 Da un punto di vista pratico uno dei requisiti più importanti è che il
 piano di assegnamento deve essere poco sensibile a piccoli cambiamenti
 dei dati in ingresso.
 L'incertezza sui dati in ingresso è causata da una serie di possibili eventi,
 come ad esempio l'arrivo in ritardo di un bus che causa uno spostamento
 del tempo di fermata in avanti.
 Se i bus che devono arrivare sullo stessa stessa piattaforma non sono sufficien
temente lontani nel tempo ed un bus arriva in ritardo si può verificare
 una catena di ritardi di tutte le fermate dei bus che erano stati assegnati
 a quella piattaforma.
 Questo fatto è del tutto indesiderabile perché comporta disagi ai passeggeri
 ed agli autisti, che devono spostarsi su altri gate e possono subire ritardi,
 ed al capostazione che deve effettuare una rischedulazione degli assegnamenti.
 Assegnamenti poco robusti sono molto sensibili agli incidenti durante l'eserciz
io ed i piani di assegnamento possono diventare inammissibili anche per
 anticipi o ritardi di pochi minuti, rendendo necessaria la generazione
 di un nuovo piano di assegnamento in tempo reale.
 Un piano di assegnamento robusto dovrebbe invece dare luogo ad un numero
 minore di situazioni che richiedono riassegnamenti e dà la possibilità
 al capostazione di intervenire prontamente per effettuare piccole modifiche
 sul piano.
 Si ritiene che un piano robusto dovrebbe avere un forte impatto sull'efficienza
 dell'autostazione e sulla soddisfazione dei passeggeri.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Il problema consiste nel determinare la piattaforma di una autostazione
 in cui deve fermare un veicolo, nel rispetto di vincoli di varia natura.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il decisore è il capostazione, il quale deve valutare attentamente i criteri
 di assegnamento fermata-piattaforma in quanto tale scelta influenza notevolment
e la qualità del servizio offerto.
\end_layout

\begin_layout Standard
Scelte mal ponderate procurano insoddisfazione e proteste da parte dei passegger
i, che si troveranno costretti a spostarsi da una parte all'altra dell'autostazi
one, e da parte delle compagnie di trasporto, che possono subire ritardi
 in conseguenza alla congestione provocata dalla mancanza di un assegnamento
 corretto.
\end_layout

\begin_layout Standard
L'assegnamento deve sottostare a vincoli di diversa natura e pertanto in
 generale si possono effettuare solo alcuni assegnamenti di un veicolo in
 fermata ad una piattaforma fra tutti i possibili.
\end_layout

\begin_layout Standard
Le piattaforme sono compatibili sono con alcuni mezzi o servizi.
 Ad esempio alcune piattaforme potrebbero essere riservate a servizi internazion
ali, altre potrebbero essere riservate a servizi di linea ed altre ancora
 destinate al parcheggio temporaneo.
\end_layout

\begin_layout Standard
I mezzi o servizi sono compatibili sono con alcune piattaforme che rispettano
 particolari requisiti, ad esempio alcuni servizi devono essere associati
 a piattaforme con particolari caratteristiche come l'accessibilità per
 utenti disabili ed i mezzi di dimensioni maggiori devono essere assegnati
 a piattaforme con sufficiente spazio di manovra (questa considerazione
 si applica ad esempio al caso di mezzi snodati).
 Una fermata inoltre deve effettuarsi su una piattaforma che sia abilitata
 nell'intervallo temporale della fermata stessa.
\end_layout

\begin_layout Standard
Un ulteriore complicazione si verifica quando le piattaforme potrebbero
 essere in numero in numero non sufficiente ad accogliere tutte le corse
 in fermata (piattaforme come risorsa scarsa) e occorre decidere il sottoinsieme
 di corse che devono essere assegnate.
\end_layout

\begin_layout Standard
La qualità del piano di assegnamento si può misurare in base alle preferenze
 espresse dalle compagnie di trasporto determinate dalle esigenze dei loro
 utenti o ad altri fattori.
 Ad esempio gli utenti di servizi a lunga percorrenza potrebbero gradire
 che la piattaforma sia prossima a servizi igienici o servizi accessori
 quali punti di ristoro mentre gli utenti in transito che devono effettuare
 un'altra corsa potrebbero voler che la piattaforma della partenza del mezzo
 da prendere sia vicina a quella in cui sono scesi.
 Si potrebbe volere che le corse bis siano posizionate su piattaforme adiacenti,
 oppure che i servizi offerti da una certa compagnia partano solo da un
 gruppo di piattaforme.
 Per evitare un affollamento eccessivo sui marciapiedi si potrebbe voler
 far partire servizi a lunga percorrenza da piattaforme non adiacenti.
 Per consentire altre operazioni si potrebbe imporre di non utilizzare una
 piattaforma in determinate fasce orarie.
\end_layout

\begin_layout Standard
Fra i possibili piani generalmente è da preferire quello che sia suscettibile
 del minor numero di variazioni degli assegnamenti per far fronte al verificarsi
 di eventi non pianificati quali ritardi o anticipi di servizi o creazione
 di nuove corse.
 
\end_layout

\begin_layout Section
Il problema considerato
\end_layout

\begin_layout Standard
Certe compagnie di trasporto preferiscono che i lovo veicoli siano assegnati
 a certe aree del piazzale, se possibile, in modo che sia conveniente per
 loro gestire le operazioni e allocare il personale.
 Questo, ad esempio, perché potrebbero disporre di una biglietteria dislocata
 vicino alle piattaforme.
 Operatori che in gestiscono servizi che meglio si prestano ai trasporti
 operati da certe compagnie potrebbero preferire che le corse delle compagnie
 stesse siano allocate in piattaforme vicine al luogo in cui eroga il servizio.
 Un gestore di un bar, ad esempio, potrebbe desiderare che le corse internaziona
li, per cui sono previsti tempi di attesa maggiori e frequenti ritardi,
 fermino in piattaforme prossime al bar.
\end_layout

\begin_layout Standard
Durante le ore di picco, quando un gran numero di veicoli arriva o parte
 più o meno contemporaneamente, possono verificarsi congestioni del traffico
 nel piazzale se le piattaforme assegnate sono vicine tra loro e un veicolo
 potrebbe restare in attesa di un veicolo che deve liberare la propria piattafor
ma.
\end_layout

\begin_layout Standard
Un buon assegnamento, quindi, non solo deve essere ammissibile ma deve inoltre
 essere predisposto in modo da risultare comodo per i passeggeri, deve soddisfar
e i richieste delle compagnie e degli operatori del terminal, deve ridurre
 la congestione per facilitare le operazioni e deve essere robusto rispetto
 a piccole variazioni delle corse.
\end_layout

\begin_layout Standard
Il problema di assegnare i veicoli schedulati in arrivo e partenza alle
 piattaforme disponibili è uno dei problemi più importanti nella gestione
 delle operazioni di un terminal.
 Nella pratica, i gestori di un'autostazione devono affrontare due tipi
 di assegnamento: uno in fase di pianificazione degli assegnamenti ed un
 di riassegnamento in tempo reale.
\end_layout

\begin_layout Standard
Dato l'orario delle corse di ciascuna delle compagnie di trasporto operanti
 nell'autostazione, il gestore deve definire quali veicoli assegnare a quali
 piattaforme in un dato giorno, che in genere è un periodo compreso tra
 le 12 e le 24 ore, e la pianificazione viene realizzata ogni qualvolta
 cambiano gli orari delle linee operanti nell'autostazione.
 Questa è la fase di pianificazione degli assegnamenti e avviene su base
 stagionale per le corse urbane di linea.
 Ci possono essere però molti veicoli di diverse compagnie operanti presso
 l'autostazione che effettuano trasporti con cambi di programma frequenti,
 così la necessità di ripianificare l'uso di alcuni servizi può essere più
 frequente, e si possono verificare casi straordinari che determinano l'arrivo
 e la partenza di un alto numero di veicoli, percui la pianificazione può
 essere effettuata con cadenze più ravvicinate.
 Il fatto che la preparazione si effettui poche volte fa sì che il tempo
 per l'esecuzione del programma di assegnamento delle piattaforme possa
 protarsi anche per ore.
\end_layout

\begin_layout Standard
Un altro tipo assegmanento delle piattaforme è quello da effettuarsi in
 tempo reale per far fronte alle variazioni degli orari di arrivo e partenza
 dei veicoli che si verificano durante l'esercizo, cioè di modificare l'assegmen
to a causa dei cambiamenti rispetto agli orari schedulati.
 Ricostruire gli assegnamenti in tempo reale è un compito impegnativo per
 il gestore dell'autostazione, perché l'assegnamento originale è già stato
 prodotto e i cambiamenti ddgli orari di arrivo o di partenza posso rendere
 il piano originale irrealizzabbile o, se fattibile, può influenzare molti
 altri veicoli che dovranno usare la stessa piattaforma, soprattutto quando
 gli orari dei mezzo sono vicini tra loro.
 Gli obiettivi del riassegnamento sono quelle di produrre una schedula degli
 assegnamenti che sia quanto più prossima a quella pianificata.
 
\end_layout

\begin_layout Standard
La letterarura scientifica ha proposto, ad oggi, pochi lavori sul real-time
 recovery degli assegnamenti, ad eccezione di 
\begin_inset CommandInset citation
LatexCommand cite
key "Blanco2003,Tang2010"

\end_inset

.
\end_layout

\begin_layout Section
Le difficoltà di predisposizione di buon assegnamento
\end_layout

\begin_layout Standard
Sono state propost molte metodologie per risolvere problemi analoghi a quello
 presentato, come modelli di Programmazione Lineare Intera Mista (PLIM)
 e Sistemi Esperti basati sulla conoscenza.
 Ognuna di queste metodologie ha i propri vantaggi e le probrie difficoltà
 nella realizzazione pratica.
 Risolvere questi problemi in modo efficace ed efficiente è un problema
 complesso e i problemi di ottimizzazione formulati appartengono alla classe
 dei problemi 
\begin_inset Formula $\mathcal{NP}$
\end_inset

-hard.
\end_layout

\begin_layout Standard
Negli ultimi anni si sono realizzati enormi progressi nella soluzione esatta
 di modelli di Programmazione Intera di problemi pratici con differenti
 metodologie, spesso integrando tecniche impiegate in settori di ricerca
 distinti.
 Tecniche, anche molto recenti, per la risoluzione di problemi di PLIM sono
 rese disponibili da sofisticati pacchetti software per la risoluzione di
 problemi di programmazione matematica e alcuni di questi sono stati resi
 disponibili gratuitamente.
 Lo sviluppo di questi pacchetti permette di risolvere direttamente problemi
 pratici impiegando direttamente il modello di programmazione matematica.
 Per alcuni problemi come quello presentato, però, i modelli matematici
 non si riescono a risolvere all'ottimo in tempi di calcolo ragionevolie
 per questo è necessaria ulteriore ricerca sul tema.
\end_layout

\begin_layout Standard
In realtà, ogni autostazione ha criteri propri sugli assegnamenti veicolo-piatta
forma che sono determinati dagli interessi degli stackholders dell'autostazione
 e predisporre un'applicazione che possa contemplare le esigenze specifiche
 di tutti è un'impresa ardua.
 Alcune autostazioni, ad esempio, richiedono che certe linee siano assegnate
 a un'insieme specifico di piattaforme, se possibile, mentre altre non considera
no tali restrizioni.
 A causa delle varie considerazioni e del layout dell'autostazione i vincoli
 sugli assegnamenti sono numerosi ed eterogenei e devono essere modellati
 specificamente per ogni autostazione.
 Come conseguenza il numero di parametri e di vincoli di un modello di PLIM
 di un'istanza di un problema reale è solitamente troppo grande per essere
 risolto con tecniche esatte basate direttamente sulla risoluzione del modello
 matematico.
 In aggiunta, un piano di assegnamento deve essere prodotto in un ragionevole
 tempo di elaborazione e ciò è ancor più vero quando l'assegnamento deve
 essere modificato in tempo reale per far fronte ad eventi imprevisti che
 si realizzano nel corso delle operazioni del terminal.
 Se il tempo di risoluzione dei modelli di PLIM risulta troppo irraggionevole,
 allora la risoluzione esatta del modello non risulta applicabile in pratica
\end_layout

\begin_layout Standard
Molti ricercatori hanno fatto ricorso alle tecniche di programmazione matematica
, sviluppando modelli e metodologie per la risoluzione e/o hanno affidato
 a tecniche metaeuristiche la risoluzione di istanze reali per migliorare
 ridurre i tempi di elaborazione.
 Un altro fattore che rende difficile l'uso di tecniche di PLIM è che la
 modellizzazione del problema con gli strumenti della programmazione matematica
 esigenze specifiche conoscenze di metodologie di modellazione di ricerca
 operativa e di risoluzione dei problemi di ottimizzazione combinatoria.
 Di conseguenza i Sistemi Esperti o i sistemi basati sulla conoscenza, che
 sono metodologie tipiche dell'intelligenza artificiale, sono stati proposti
 ed impiegati per risolvere il problema di determinare gli assegnamenti
 giornalieri volo-gate negli aeroporti, ad esempio 
\begin_inset CommandInset citation
LatexCommand cite
key "Adenso-Diaz2005,Blanco2003,Brazile1988,cheng1997kba,gosling1990des,hamzawi1986map,Su1993123"

\end_inset

.
 I Sistemi Esperti sono stati applicati con successo a molti problemi che
 presentano un numero combinatorio di soluzioni ammissibili per ottenere
 una più rapida generazione delle soluzioni.
 Essi si rivelano particolarmente adatti quando l'uso di euristiche per
 generare una soluzione soddisfacente risulta appropriato.
 Molti ricercatori, invece di usare metodologie di ottimizzazione, hanno
 proposto tecniche in grado di generare velocemente soluzioni ammissibili
 e appetibili per il committente con l'uso di euristiche.
 
\end_layout

\begin_layout Standard
I Sistemi Esperti, tuttavia, sono utilizzati per la ricerca di soluzioni
 soddisfacenti, ma non necessariamente ottimali, come affermato da 
\begin_inset CommandInset citation
LatexCommand cite
key "srihari1991esm"

\end_inset

.
 Se il problema è visto come problema di ottimizzazione e non come problema
 di ammissibilità, non c'è alcuna garanzia che i sistemi esperti possono
 evitare di essere intrappolati ottimo locale.
 È difficile dire quanto la soluzione soddisfacente è da ottimalità.
 La parte più difficile del problema è nell'individuare le regole per guidare
 il processo di assegnazione, a causa del gran numero di fattori da prendere
 in considerazione come sottolineato da 
\begin_inset CommandInset citation
LatexCommand cite
key "Su1993123"

\end_inset

.
 Questi fattori possono rendere la ricerca euristica difficile e questo
 può a sua volta influenzare la qualità della soluzione.
\end_layout

\begin_layout Section
Piano della tesi
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Chapter
Rassegna bibliografica: modelli e stato dell'arte degli algoritmi
\begin_inset CommandInset label
LatexCommand label
name "chap:Rassegna-bibliografica"

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Literature review: models and state-of-the-art algorithms
\end_layout

\end_inset


\end_layout

\begin_layout Section
Sistemi di supporto alle decisioni per la gestione delle piattaforme delle
 autostazioni
\end_layout

\begin_layout Subsection*
GatePlanner
\end_layout

\begin_layout Standard
Il software GatePlanner, prodotto dalla società Pluservice, è lo stumento
 che pianifica in automatico l'assegnamento statico delle fermate delle
 corse alle piattaforme utilizzando un algoritmo costruttivo senza backtracking.
 
\end_layout

\begin_layout Standard
Le corse sono raggruppate in sottoinsimi aventi una validità comune, che
 si definiscce come 
\emph on
giorno tipo
\emph default
.
 La pianificazione viene effettuata per ogni giorno tipo, considerando il
 tempo di partenza della corsa 
\begin_inset Formula $t_{p}$
\end_inset

, il tempo di anticipo rispetto all'orario di partenza a partire da cui
 la piattaforma deve risultare occupata 
\begin_inset Formula $t_{1}$
\end_inset

 e il tempo di ritardo rispetto all'orario di partenza fino a cui la piattaforma
 deve risultare occupata 
\begin_inset Formula $t_{2}$
\end_inset

.
 La finestra temporale di occupazione della piattaforma è dunque 
\begin_inset Formula $[t_{p}-t_{1},\, t_{p}+t_{2}]$
\end_inset

.
 Siano 
\begin_inset Formula $a=t_{p}-t_{1}$
\end_inset

 e 
\begin_inset Formula $d=t_{p}+t_{2}$
\end_inset

.
 L'algortimo considera occupata della piattaforma per tutto l'intervallo
 
\begin_inset Formula $[a,d]$
\end_inset

, come rappresentato in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tempo-di-occupazione"

\end_inset

.
 Tali tempi 
\begin_inset Formula $t_{1}$
\end_inset

 e 
\begin_inset Formula $t_{2}$
\end_inset

 non sono necessariamente costanti ma variano al variare dell'ora di partenza
 della corsa alla quale si riferiscono.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{img/occupazione_piattaforma}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tempo di occupazione della piattaforma
\begin_inset CommandInset label
LatexCommand label
name "fig:Tempo-di-occupazione"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le corse sono suddivise fra corse da pianificare in automatico, ossia quelle
 per cui l'algoritmo di assegnamento statico cercherà una piattaforma, e
 in corse da assegnare manualmente, che saranno assegnate da un operatore.
 Il software permette di gestire gruppi di 
\emph on
corse bis
\emph default
, ossia raggruppamenti di corse che percorrono la stessa tratta in orari
 che differiscono, al più, di pochi minuti, istituite per far fronte ad
 una domanda maggiore della capacità di un singolo veicolo.
 Raggruppamenti di corse bis sono detti 
\emph on
gruppi bis
\emph default
.
 Essendo le piattaforme adiacenti le une alle altre, come mostrato in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Disposizione-delle-piattaforme"

\end_inset

.
 Le piattaformesono disposte in linea e risulta quindi conveniente che gli
 assegnamenti delle corse bis siano a piattaforme adiacenti.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/layout_piattaforme.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Disposizione delle piattaforme
\begin_inset CommandInset label
LatexCommand label
name "fig:Disposizione-delle-piattaforme"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le corse possono essere: di linea, di linea effettuate da veicoli snodati
 e appartenenti a gruppi bis.
 Le piattaforme sono disponibili o disabilitate in una determinate fasce
 orarie e possono essere riservate escluvimanete ad alcune linee.
 L'algoritmo di pianificazione di GatePlanner produce una soluzione che
 che rispetta i vincoli di collocazione di ogni corsa e di non occupazione
 simultanea di uno stessa piattaforma.
 Considera inoltre altri vincoli aggiuntivi.
 
\end_layout

\begin_layout Enumerate
Il primo è un vincolo sul posizionamento delle 
\begin_inset Quotes eld
\end_inset

corse bis
\begin_inset Quotes erd
\end_inset

 su piattaforme adiacenti; in particolare le corse di un gruppo bis sono
 posizionate su piattaforme adiacenti in ordine inverso rispetto all'orario
 di partenza.
 Tale vincolo serve a migliorare la qualità del sevizio offerto ai clienti
 e agevola le operazioni di manovra.
 È trattato come un vincolo hard.
 
\end_layout

\begin_layout Enumerate
Il secondo vincolo aggiuntivo obbliga il posizionamento delle corse appartenenti
 a linee che includono almeno un veicolo snodato a essere assegnate alle
 piattaforme che accettano mezzi snodati.
 Se una corsa con snodati ha delle corse bis allora tutte le corse del gruppo
 bis sono considerate come corse con snodati.
 Tale vincolo serve a garantire la realizzabilità della soluzione proposta.
\end_layout

\begin_layout Enumerate
Un terzo vincolo hard permette di associare una linea esclusivamente ad
 un sottoinsieme di piattaforme, cioè tutte le corse della linea devono
 partire da un insieme di piattaforme predefinite.
\end_layout

\begin_layout Enumerate
Un quarto vincolo, in un certo modo simmetrico al precedente, impone una
 piattaforma sia compatibile sono con le linee che possono partire da essa.
\end_layout

\begin_layout Enumerate
L'uso di una piattaforma, infine, può essere interdetto in determinate fasce
 orarie della giornata.
\end_layout

\begin_layout Standard
L'obiettivo perseguito è quello di ridurre al minimo il numero di piattaforme
 che siano occupate in almeno un intervallo di tempo durante il giorno tipo
 cui si riferisce la pianificazione, prediligendo l'occupazione delle piattaform
e più vicine all'ingresso e rappresentate con numeri minori.
\end_layout

\begin_layout Standard
L'algoritmo euristico per la minimizzazione del numero di piattaforme, da
 quanto emerge dal manuale operativo del software, dovrebbe essere schematizzabi
le come in alg.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg:gateplanner"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
seguenti passi:
\end_layout

\begin_layout Enumerate
partiziona le corse negli insiemi:
\end_layout

\begin_deeper
\begin_layout Enumerate
corse appartenenti ai gruppi bis effettuate da mezzi snodati (vincoli 1.
 e 2.),
\end_layout

\begin_layout Enumerate
corse appartenenti a gruppi bis (vincolo 1.),
\end_layout

\begin_layout Enumerate
corse effettuate da mezzi snodati, e non appartenenti a gruppi bis (vincolo
 2.),
\end_layout

\begin_layout Enumerate
corse presenti nella lista delle linee associate ad un sottoinsieme di piattafor
me,
\end_layout

\begin_layout Enumerate
tutte le corse non presenti nei precedenti insiemi;
\end_layout

\end_deeper
\begin_layout Enumerate
ordina le piattaforme per numero in modo crescente;
\end_layout

\begin_deeper
\begin_layout Enumerate
L'algoritmo poi assegna nell'ordine le corse alla prima piattaforma disponibile
 in quell'intervallo di tempo.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{L'insieme delle fermate $F$ e quello delle piattaforme $P$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Un assegnamento $mathcal{A}$ fermata-piattaforma completo o parziale}
 %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	$n 
\backslash
leftarrow |F|$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$m 
\backslash
leftarrow |P|$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i 
\backslash
leftarrow 1$ 
\backslash
KwTo $n$}{
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{Fermata non assegnata}
\end_layout

\begin_layout Plain Layout

		$mathcal{A}_i 
\backslash
leftarrow -1$
\backslash
;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Partiziona $F$ in sottoinsiemi} %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_1$ devono soddisfare i vincoli 1.
 e 2.} %
\end_layout

\begin_layout Plain Layout

	$F_1 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ gruppi bis, mezzi snodati$
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$F 
\backslash
leftarrow F 
\backslash
setminus F_1$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_2$ devono soddisfare solo il vincolo 1.} %
\end_layout

\begin_layout Plain Layout

	$F_2 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ gruppi bis$
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$F 
\backslash
leftarrow F 
\backslash
setminus F_2$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_3$ devono soddisfare solo il vincolo 2.} %
\end_layout

\begin_layout Plain Layout

	$F_3 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ mezzi snodati $
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$F 
\backslash
leftarrow F 
\backslash
setminus F_3$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_4$ devono soddisfare il vincolo 3.} %
\end_layout

\begin_layout Plain Layout

	$F_4 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ piattaforme riservate$
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_5$ non sono presenti nei precedenti insiemi} %
\end_layout

\begin_layout Plain Layout

	$F_5 
\backslash
leftarrow F 
\backslash
setminus F_4$
\backslash
;
\end_layout

\begin_layout Plain Layout

%	$F_{5}=F
\backslash
setminus
\backslash
ensuremath{{
\backslash
displaystyle 
\backslash
bigcup_{i=1}^{4}}F_{i})}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	Sia $
\backslash
mathcal{P}$ il vettore delle piattaforme
\backslash
;
\end_layout

\begin_layout Plain Layout

	Ordina $
\backslash
mathcal{P}$ per numero in modo crescente
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i
\backslash
leftarrow 1$ 
\backslash
KwTo $5$}{
\end_layout

\begin_layout Plain Layout

		Sia $
\backslash
mathcal{F}_i$ il vettore delle fermate
\backslash
;
\end_layout

\begin_layout Plain Layout

		Ordina $
\backslash
mathcal{F}_i$ per ora di partenza non decrescente
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{f 
\backslash
in 
\backslash
mathcal{F}_i}{
\end_layout

\begin_layout Plain Layout

			
\backslash
For{$k
\backslash
leftarrow 1$ 
\backslash
KwTo $m$}{
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$f$ compatibile con $
\backslash
mathcal{P}_k$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
If{$f$ non sovrapposto a fermate assegnate a $
\backslash
mathcal{P}_k$}{
\end_layout

\begin_layout Plain Layout

						
\backslash
tcc{Assegna $f$ a $P$}
\end_layout

\begin_layout Plain Layout

						$
\backslash
mathcal{A}_f 
\backslash
leftarrow k
\backslash
;
\end_layout

\begin_layout Plain Layout

						$n 
\backslash
leftarrow n - 1$
\backslash
;
\end_layout

\begin_layout Plain Layout

					}
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
If{$n 
\backslash
neq 0$}{
\end_layout

\begin_layout Plain Layout

		
\backslash
emph{Assegnamento non completo}%
\backslash
;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
mathcal{A}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Algoritmo di pianificazione di GatePlanner}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:gateplanner}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tale algoritmo assomiglia a quello First Fit per problemi di Bin Packing
 che ha l'obiettivo di minimizzare il numero di piattaforme utilizzate.
 L'algoritmo euristico non garantisce l'ottimalità della soluzione trovata
 neanche di essere in grado di determinare una soluzione ammissibie su alcune
 istanze che invece ne hanno.
\end_layout

\begin_layout Subsection*
Sistema in uso nell'autostazione di Oviedo
\end_layout

\begin_layout Standard
Il sistema di supporto alle decisioni realizzato per la gestione dell'autostazio
ne di Oviedo, in Spagna, è trattato in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citet
key "Adenso-Diaz2005"

\end_inset

.
 L'autostazione è composta di 44 piattaforme e gestisce circa 1100 servizi
 al giorno.
 Il sistema utilizzato per l'assegnamento delle piattaforme è composto da
 due moduli, uno 
\begin_inset Quotes eld
\end_inset

off-line
\begin_inset Quotes erd
\end_inset

 per la pianificazione statica e l'altro 
\begin_inset Quotes eld
\end_inset

on-line
\begin_inset Quotes erd
\end_inset

 per far fronte al caso dinamico.
 La pianificazione statica viene generata da un sistema Rule-Based che implement
a due tipologie di regole.
 Le prime, dette 
\emph on
direct rules
\emph default
, rappresentano i vincoli che devono essere necessariamente soddisfatti
 dalla soluzione (
\emph on
hard constraints
\emph default
) mentre le seconde, dette 
\emph on
approximate rules
\emph default
, rappresentano le preferenze che il capostazione attribuisce all'assegnamento
 di un servizio ad una piattaforma.
 Le preferenze possono indicare ad esempio quanto è utile assegnare un bus
 ad una piattaforma in base alla provenienza o alla destinazione, alla compagnia
 che effettua il servizio, alla dimensione dell'autobus o al tempo di fermata.
 Questo secondo gruppo di regole può essere usato, inoltre, per tentare
 di lasciare disimpegnate le piattaforme adiacenti a quelle da cui partono
 bus a lunga percorrenza.
 Il capostazione stabilisce le regole da introdurre nel sistema e la loro
 utilità (espressa con un numero intero compreso fra 1 e 9).
 L'algoritmo proposto genera il piano di assegnamento che massimizza la
 somma dei pesi delle regole scelte.
 Le istanze reali dell'autostazione di Oviedo vengono risolte in circa 10'
 su un Pentium III.
 Il caso dinamico viene affrontato sempre con un sistema a regole che ha
 per input il piano e le regole.
 Quando uno degli assegnamenti del piano statico non può essere attuato
 allora il sistema rende inammissibile l'assegnamento e aggiunge la regola
 di trovare un assegnamento del bus da riallocare che sia il più vicino
 possibile alla piattaforma precedentemente programmata.
\end_layout

\begin_layout Section
Rassegna bibliografica
\end_layout

\begin_layout Standard
La letteratura scientifica propone molte pubblicazioni sul trasporto su
 gomma e sulle autostazioni ma generalmente gli studi sono funzionali alla
 quantificazione della qualità dei servizi offerti ed alla progettazione
 dei layout.
 Scarso è, invece, il contributo sui problemi di ottimizzazione o di soddisfacim
ento dei vincoli emergenti nei terminal del trasporto su gomma.
 Le pubblicazioni scientifiche che trattano della gestione delle piattaforme
 all'interno delle autostazioni, per quanto emerge dalle ricerche effettuate,
 si limitano al già citato
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citet
key "Adenso-Diaz2005"

\end_inset

.
 La ricognizione della letteratura è stata pertanto orientata a problematiche
 analoghe che emergono in contesti differenti.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Definizione degli aspetti generali per l'individuazione di problematiche
 simili
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Problematiche simili a quella di assegnare le fermate alle piattaforme delle
 autostazioni emergono nella gestione dei terminal aeroportuali, nelle stazioni
 ferroviarie, e nei porti, interporti o altre strutture adibite allo stoccaggio
 temporaneo e al caricamento di veicoli.
 Forti sono le analogie anche con il problema di allocazione dei registri
 di DSP (Digital Signal Processor) e con il problema di ottimizzazione dell'uso
 dei registri di un processore durante il processo di compilazione.
 Elemento comune nei vari problemi sono la presenza di un luogo fisico in
 cui vengono convogliate persone, beni da trasportare o dati (in inglese
 spesso definito terminal o hub nel caso di problemi di trasporto, register
 nel caso di dati), un insieme di veicoli o unità di informazione (aircraft,
 train, truck, o variable
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ldots{}
\end_layout

\end_inset

) ed un insieme di risorse spaziali che non possono essere occupate nello
 stesso tempo da più di un veicolo o dato (platform, gate, track, register);
 inoltre i tempi di fermata dei veicoli (per le effettuare le operazioni
 di carico e scarico dei passeggeri o delle merci) o i tempi di vita dei
 dati sono fissate (scheduled, o ideal, arrival e departure time, oppure
 lifetime) e durante l'esercizio potrebbero essere soggette a variazioni
 per il verificarsi di eventi non prevedibili a priori (ritardi, interruzioni\SpecialChar \ldots{}
).
 Altra caratteristica comune è quella per cui gli assegnamenti potrebbero
 essere soggetti a vincoli 
\begin_inset Quotes eld
\end_inset

locali
\begin_inset Quotes erd
\end_inset

, che coinvolgano le compatibilità fra operazioni da assegnare e risorsa
 o fra due o operazioni.
 Ad esempio nel contesto dell'ottimizzazione dell'uso di piattaforme queste
 sono compatibili solo alcuni tipi di veicoli per ragioni geometriche e
 di spazi di manovra mentre nel caso dell'ottimizzazione del codice macchina
 il problema definito come 
\emph on
register assignment
\emph default
 consiste nel determinare l'assegnamento variabile-registro in un processore
 avente registri eterogenei: alcuni registri possono eseguire solo alcune
 alcune istruzioni.
 A causa della struttura del processore e del flusso di dati, stabiliti
 dal tipo di istruzione, dal flusso di istruzioni e dallo scheduler del
 compilatore, una variabile può essere associata solo ad alcuni registri
 ed i tempi di permanenza sono fissati.
 Altro aspetto comune è che il tempo di occupazione dipende dalla risorsa
 o anche dall'assegnamento stesso: il tempo di carico e scarico di merci
 o passeggeri dipende infatti sia dal tipo di veicolo e che dalla piattaforma
 così come il tempo di esecuzione di un'istruzione può estendersi per un
 numero diverso di cicli di clock rispetto ad altre istruzioni o in base
 a quale unità di calcolo stia eseguendo la stessa istruzione.
\begin_inset Note Note
status open

\begin_layout Plain Layout
e di estensioni temporali diverse fra loro (non modellabili con grafo unit
 interval).
\end_layout

\end_inset

 
\end_layout

\begin_layout Section
Airport Gate Assignment
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
AGAP
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema che emerge nel caso aeroportuale consiste nell'assegnare i velivoli
 ai gate dell'aeroporto in modo da utilizzare in modo efficiente le porte
 d'imbarco/sbarco.
 Il problema è noto come 
\emph on
Aircraft Gate Assignment Problem
\emph default
 o 
\emph on
Airport Gate Assignment Problem
\emph default
 (AGAP).
 L'analogia con il problema nel caso delle autostazioni è immediata: basta
 sostituire velivolo ad autobus e gate a piattaforma e il problema può assumere
 gli stessi obiettivi e gli stessi vincoli.
\end_layout

\begin_layout Standard
Una rassegna recente sui modelli e sullo stato dell'arte degli algoritmi
 per l'AGAP è presentata in 
\begin_inset CommandInset citation
LatexCommand citet
key "Dorndorf2007fgs"

\end_inset

.
 Gli autori identificano i vincoli a cui deve sottostare un assegnamento
 ben costruito:
\end_layout

\begin_layout Itemize
un gate può servire un solo velivolo alla volta;
\end_layout

\begin_layout Itemize
devono essere rispettate delle richieste di servizio e devono essere considerate
 delle restrizioni sull'utilizzo di gate adiacenti a quelli occupati;
\end_layout

\begin_layout Itemize
un tempo minimo di occupazione del gate è da tenere in considerazione e
 deve essere garantito un altro tempo minimo prima che il prossimo velivolo
 possa occupare il gate.
\end_layout

\begin_layout Standard
Oltre a questi vincoli possono emergerne degli altri, ad esempio l'assegnamento
 di un velivolo grande ad un gate particolare può implicare che i gate vicini
 posssano servire solo velivoli piccoli, o addirittura essere completamente
 disabilitati.
\end_layout

\begin_layout Standard
Gli obiettivi tipici considerati in letteratura sono:
\end_layout

\begin_layout Itemize
minimizzare il numero di velivoli non assegnati a gate (nel caso in cui
 i gate sono una risorsa scarsa);
\end_layout

\begin_layout Itemize
massimizzare le preferenze degli assegnamenti velivolo-gate;
\end_layout

\begin_layout Itemize
minimizzare la distanza percorsa a piedi dai passeggeri per spostarsi dal
 terminal al gate (passeggeri in arrivo o partenza) e tra gate e gate (passegger
i in transito);
\end_layout

\begin_layout Itemize
minimizzare le deviazioni tra l'assegnamento effettivo durante l'esercizio
 rispetto a quello di riferimento in modo da ridurre i disagi ai passeggeri;
\end_layout

\begin_layout Itemize
minimizzare il numero di movimentazioni dei velivoli a terra per effettuare
 le operazioni di manutenzione.
\end_layout

\begin_layout Standard
L'esistenza di criteri così eterogenei e in constrasto fra loro rende difficile
 la determinazione di un buon compromesso fra i differenti obiettivi e la
 soluzione ottima di un modello che considera un solo obiettivo o una somma
 pesata di questi potrebbe potrebbe rivelarsi poco attraente per l'operatore
 aeroportuale.
 I vincoli specifici rendono inoltre complessa la risoluzione dei problemi
 di ottimizzazione che si possono costruire.
 Gli autori evidenziano che probabilmente uno dei problemi più rilevanti
 dal punto di vista pratico ma scarsamente investigato dalla letteratura
 scientifica è quello della costruzione di assegnamenti 
\emph on
robusti
\emph default
 (detti anche 
\emph on
stabili
\emph default
), che possono essere non ottimi rispetto agli obiettivi stabiliti ma che
 si avvicinano ad essi in termini di prestazioni assolute e che permettono
 di tenere in conto possibili perturbazioni dei dati d'ingresso garantendo
 che la soluzione non sarà totalmente compromessa.
\end_layout

\begin_layout Standard
I modelli proposti in letteratura possono essere classificati a seconda
 della tipologia di modello, della funzione obiettivo e del modo di considerare
 la variabile temporale.
\end_layout

\begin_layout Standard
Il tempo può essere gestito con delle finestre temporali, singole o multiple.
 Nel caso singolo si considera un gruppo di velivoli che arriva in quel
 periodo di tempo e si assegna ogni velivolo ad un solo gate.
 Il modello deve essere quindi risolto, indipendentemente l'uno dall'altro,
 per ogni finestra temporale.
 Nel caso multiplo l'intero intervallo temporale di pianificazione si divide
 in più finestre di dimensione fissa e si risolve un modello multiperiodo.
 La determinazione dell'ampiezza dell'intervallo deve essere scelta accuratament
e in quanto influenza le dimensioni dei problemi da risolvere e il livello
 di utilizzo dei gate.
\end_layout

\begin_layout Standard
Gli obiettivi possono essere divisi in due grandi macrocategorie: quella
 degli obiettivi orientati al comfort dei passeggeri e quella orientata
 all'efficienza del terminal.
\end_layout

\begin_layout Standard
Molti dei modelli proposti per l'AGAP sono modelli di assegnamento quadratico,
 problema notoriamente 
\begin_inset Formula $\mathcal{NP}$
\end_inset

-hard, dove il costo di assegnare 
\begin_inset Formula $n$
\end_inset

 aerei ad 
\begin_inset Formula $n$
\end_inset

 gate dipende dagli altri assegnamenti e dal flusso di passeggeri fra i
 gate.
 Il problema, nel caso di singole finestre temporali, può essere decritto
 da un modello di programmazione intera che fa uso di variabili a due indici
 per modellizzare l'assegnamento volo-gate, che diventano quattro quando
 la funzione obiettivo e i vincoli sono linearizzati.
 Nel caso di finestre temporali multiple si deve aggiungere un indice alle
 variabili per indicare in quale intervallo temporale avviene l'assegnamento.
 
\end_layout

\begin_layout Standard
Gli autori propongono un nuovo modello basato sul multi-mode resource constraint
 project scheduling problem che considera le attività di arrivo, parcheggio
 e partenza di un velivolo nel tempo, le iterazioni fra voli e voli e voli
 e gate e una funzione obiettivo che è combinazione lineare convessa di
 più funzioni lineari che identificano distinti indici di prestazione del
 sistema.
 L'algoritmo proposto per la soluzione è una procedura Branch&Bound troncata.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tradurre paragrafo 4.
\end_layout

\begin_layout Plain Layout
Le formulazioni proposte considerano come obiettivo la minimizzazione del
 percorso effettuato dai passeggeri all'interno del terminal, modellato
 come un “Quadratic Assignment Problem” (QAP).
 Il QAP a grandi dimensioni è un problema di difficile soluzione e spesso
 viene affrontato mediante tecniche euristiche.
 Altri modelli matematici fanno ricorso alla programmazione lineare intera
 (PLI) e all'ottimizzazione su rete.
 I modelli di PLI vengono risolti in modo esatto per problemi di piccole
 dimensioni, utilizzando particolari tecniche di Branch&Bound e, nel caso
 di problemi reali, attraverso l'impiego di tecniche meta-euristiche, quale
 la tabu search, la simulated annealing e gli algoritmi genetici.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Per la soluzione del GAP in letteratura sono state proposte anche tecniche
 che fanno riferimento ai Sistemi Esperti e ai Sistemi Rule Based quali
 strumenti di pianificazione.
 Alcuni autori hanno sviluppato modelli e framework di simulazione del processo
 di arrivo e partenza degli aerei nel terminal per valutare la bontà dei
 piani proposti.
 Altri autori, infine, fanno ricorso a tecniche di ottimizzazione stocastica.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I primi contributi scientifici sull'argomento sono dei primi anni '70 del
 secolo passato.
 Fra i primi tentativi di utilizzare metodi quantitativi sviluppati per
 aumentare l'efficienza dell'utilizzo dei gate e per di ridurre al minimo
 le distanze percorse all'interno del terminal aeroportuale di Toronto sono
 presentati in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "braaksma1971improving,braaksma1977reducing"

\end_inset

, i quali propongono come progettare i terminal aeroportuali.
 Su questo filone il lavoro
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wirasinghe1987airport"

\end_inset

 propone un metodo per calcolare la distanza percorsa a piedi dai passeggeri
 in un terminal multi-molo.
 Tale lavoro presenta, inoltre, un metodo per valutare la geometria ottimale
 per un aeroporto nel caso in cui si voglia minimizzare la distanza percorsa
 dai passeggeri all'interno del terminal.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Robuste1991143,Robuste1991159"

\end_inset

 si considera sia il costo di trasferimento dei passeggeri che quello dei
 bagagli.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Bandara199259"

\end_inset

 viene esteso il lavoro
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wirasinghe1987airport"

\end_inset

 indoducendo altri tipi di terminal e sono proposte alcune linee guida per
 la progettazione dei terminal aeroportuali.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Bandara199259"

\end_inset

 si propongono dei modi per valutare l'idoneità dei terminal aeroportuali.
 
\end_layout

\begin_layout Standard
In parallelo si sono sviluppati lavori, quali
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "babic1984aircraft,mangoubi1985oga"

\end_inset

 che forniscono dei tentativi di risoluzione del AGAP utilizzando i metodi
 della ricerca operativa e della modellazione con programmi interi.
 In questi approcci la distanza percorsa nel terminal è studiata in funzione
 dei flussi di arrivo e partenza dei passeggeri, i flussi dei passeggeri
 in transito, le distanze fra gate e gate, le distanze fra i gate e le sale
 di recupero dei bagagli, le distanze fra il banco di check-in e il gate
 e un costo di assegnamento aereo-gate, dato un certo layout del terminal.
 Nella modellizzazione del problema, il the costo associato all'assegnamento
 dell'velivolo al gate depends dalle distanze dalle strutture di servizio
 principali quali i gate, il banco di check-in e l'area di recupero bagagli.
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "babic1984aircraft"

\end_inset

 il problema viene ridotto ad un problema di Programmazione Lineare Intera
 0/1 in cui si considerano gli assegnamenti pesati in base ai flussi dei
 passeggeri in arrivo e in partenza e il calcolo di una soluzione ottima
 del modello viene effettuato con un algoritmo di branch
\backslash
&bound.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "mangoubi1985oga"

\end_inset

 il problema viene formulato con un modello di assegnamento quadratico che
 viene quindi linearizzato.
 Gli autori usano un rilassamento lineare e un'euristica greedy per risolvere
 il modello e fanno notare che la risoluzione esatta di un modello di un
 assegnamento quadratico linearizzato è difficile da risolvere e non propongono
 algoritmi per risolvere direttamente il modello proposto.
\end_layout

\begin_layout Standard
In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "haghani1998oga"

\end_inset

 viene proposto un modello quadratico PLI linearizzato in cui i flussi di
 trasferimento sono dati noti.
 In questo modo la complessità del problema aumenta notevolmente rispetto
 a quella del problema proposto in 
\begin_inset CommandInset citation
LatexCommand cite
key "mangoubi1985oga"

\end_inset

 e gli autori devono ricorrere ad un algoritmo di risoluzione euristico,
 che consiste nel generare varie soluzioni ammissibili per il problema di
 programmazione intera e nello scegliere quella cui corrisponde la miglior
 soluzione (distanza minima).
 Il modello matematico proposto viene risolto solo per problemi di piccola
 dimensione, con meno di 10 voli e 5 gate, per poter determinare la qualità
 della soluzione determinata dell'algoritmo euristico rispetto alla soluzione
 ottima.
\end_layout

\begin_layout Standard
---------------------------------------------------
\end_layout

\begin_layout Standard
In 
\begin_inset CommandInset citation
LatexCommand cite
key "yan2001omo"

\end_inset

 Yan e Huo (2001).
 Nel loro modello hanno introdotto diverse scelte di ritardo per ogni volo.
 Le scelte di ritardo sono dati a ciascun aeromobile in modo che sia possibile
 un volo per essere assegnato ad un cancello in momenti diversi.
 Il tempo di partenza di ogni volo per usare il cancello è flessibile.
 Queste scelte ritardo sono modellate come variabili diverse per ogni volo.
 Per ogni volo ci sono diverse variabili di decisione corrispondente.
 Oltre a ridurre al minimo la distanza a piedi dei passeggeri, riducendo
 al minimo il ritardo totale per tutti i voli è inoltre incluso come parte
 dell'obiettivo.
 Quando ci sono abbastanza numeri cancello per l'assegnazione, le scelte
 di ritardo per i voli non sono necessari.
 Tuttavia, quando ci sono porte sufficienti, le scelte di ritardo può essere
 utile nel fornire tempo di buffer per i voli da assegnare alla porte.
 Per risolvere efficacemente problemi su larga scala, in pratica, il metodo
 ponderato, l'approccio generazione colonna, il metodo simplex e la tecnica
 branch-and-bound vengono utilizzati per sviluppare un algoritmo di soluzione,
 che viene applicato nel caso di studio riguardanti l'esercizio di Taiwan
 Chiang Kai-Shek aeroporto.
\end_layout

\begin_layout Standard
Vanderstraetan e Bergeron (1988) 
\begin_inset CommandInset citation
LatexCommand cite
key "Vanderstraeten198815"

\end_inset

, Gosling (1990) 
\begin_inset CommandInset citation
LatexCommand cite
key "gosling1990des"

\end_inset

, e Muthukrishnan e Srihari (1991)
\begin_inset CommandInset citation
LatexCommand cite
key "Srihari1991esm"

\end_inset

 ha lavorato per risolvere il problema assegnazione cancello utilizzando
 sistemi esperti.
 Un sistema esperto è una strutturata basata sulla conoscenza del sistema.
 L'aereo-to-gate simula la procedura di assegnazione basato sulla logica
 procedura di assegnazione cancello da parte di esperti con esperienza in
 aeroporto.
 Invece di trovare una soluzione ottimale, è utilizzato per trovare una
 soluzione fattibile e soddisfacente per i complicati problemi su larga
 scala.
 Cheng (1997) 
\begin_inset CommandInset citation
LatexCommand cite
key "cheng1997kba"

\end_inset

 ha proposto una basata sulla conoscenza cancello sistema aeroportuale assegnazi
one che è integrata con la programmazione matematica.
 Si tratta di un processo di utilizzare il modello matematico per cercare
 una soluzione fattibile dando un maggiore controllo per le autorità aeroportual
i di cambiare l'importanza dei criteri.
\end_layout

\begin_layout Standard
Altri lavori basati sulla simulazione si possono trovare, ad esempio, Yan,
 Sheih e Chen (2002) 
\begin_inset CommandInset citation
LatexCommand cite
key "yan2002sfe"

\end_inset

.
 Mentre la maggior parte del focus opera per migliorare le prestazioni di
 incarichi porta statica, simulazione può essere utilizzato per analizzare
 le interrelazioni tra la cancello assegnazione statica e dei fattori che
 può influenzare.
 Nel lavoro di Yan, Sheih e Chen (2002)
\begin_inset CommandInset citation
LatexCommand cite
key "yan2002sfe"

\end_inset

, un framework di simulazione è stata proposta che non solo in grado di
 analizzare gli effetti dei ritardi dei voli stocastici su incarichi cancello
 statico, ma anche in grado di valutare i tempi di buffer flessibile e in
 tempo reale le regole di assegnazione che il cancello dell'autorità aeroportual
e usi.
 Una simulazione basata sulle operazioni aeroportuali a Chiang Kai-Shek
 aeroporto è utilizzato anche per valutare le prestazioni assegnazione cancello.
\end_layout

\begin_layout Standard
Dal momento che il problema è NP-hard 
\begin_inset CommandInset citation
LatexCommand cite
key "yan1998nmg"

\end_inset

 (Yan e Chang (1998)), molti ricercatori cercarono approcci euristici diversi
 per facilitare il processo di risoluzione.
 Haghani e Chen (1998)
\begin_inset CommandInset citation
LatexCommand cite
key "haghani1998oga"

\end_inset

 ha proposto una euristica che assegna i voli con passeggeri relativamente
 di più per avere porte più piccole coefficienti di distanza a piedi quando
 non c'è sovrapposizione del tempo a terra dei voli.
 Xu e Bailey (2001)
\begin_inset CommandInset citation
LatexCommand cite
key "xu2001airport"

\end_inset

 forniscono una ricerca Tabu per il problema assegnazione cancello.
 Il loro algoritmo sfrutta le particolari proprietà di diversi tipi di mosse
 quartiere, e adotta una strategia efficace di lista dei candidati.
\end_layout

\begin_layout Standard
Come un sacco di lavoro è stato focalizzato sul problema AGAP con l'obiettivo
 di minimizzare piedi del passeggero totale, ci non è abbastanza enfasi
 sul processo di gestione dei bagagli, la richiesta speciale dalle compagnie
 aeree, il taxi-way congestione del traffico, e le interruzioni programma
 .
 Un'analisi approfondita e dettagliata delle operazioni all'aeroporto è
 necessario aumentare lo standard di servizio per l'aeroporto non solo i
 passeggeri ma anche le compagnie aeree e fornitori di servizi a terra,
 che sono stati inclusi nel nostro lavoro per il problema.
\end_layout

\begin_layout Standard
----
\end_layout

\begin_layout Standard
Il problema nel caso degli aeroporti è stato affrontato a partire dalla
 metà degli anni 1980 e l'obiettivo considerato principale è minimizzare
 la distanza totale percorsa a piedi dai passeggeri nel terminal.
 In In 
\begin_inset CommandInset citation
LatexCommand citet
key "mangoubi1985oga"

\end_inset

 si propone una tecnica di soluzione esatta che fa uso di un modello di
 programmazione lineare intera, di cui risolvono il rilassamento lineare,
 e di un'euristica greedy.
 Le istanze provengono dalle operazioni del Toronto International Airport
 e includono anche i.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "hamzawi1986map"

\end_inset

 viene presentato uno dei primi lavori che fa uso di calcolatori elettronici
 per la pianificazione dei gate e in
\begin_inset CommandInset citation
LatexCommand citet
key "Brazile1988"

\end_inset

 è proposto un sistema esperto 
\begin_inset Note Note
status open

\begin_layout Plain Layout
realizzato in Prolog 
\end_layout

\end_inset

 che opera in due fasi.
 La prima fase consiste nel generare quotidianamente i piani di assegnamento.
 La seconda fase consiste nel modificare i piani in tempo reale cercando
 di effettuare il minor numero di riassegnamenti.
 Con
\begin_inset CommandInset citation
LatexCommand citet
key "gosling1990des"

\end_inset

 si introduce un'altra delle prime applicazioni in questo settore.
 In
\begin_inset CommandInset citation
LatexCommand citet
key "srihari1991esm"

\end_inset

 si presenta una rassegna sui sistemi esperti.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "cheng1997kba"

\end_inset

 si presenta l'integrazione di un sistema rule-based con una procedura euristica
 di assegnamento.
 
\begin_inset CommandInset citation
LatexCommand citet
key "yan1998nmg"

\end_inset

 utilizzano invece un modello di ottimizzazione su rete.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "haghani1998oga"

\end_inset

 e in 
\begin_inset CommandInset citation
LatexCommand citet
key "bolat2000ppr"

\end_inset

 il GAP è modellato come un QAP.
 In
\begin_inset CommandInset citation
LatexCommand citet
key "yan2001omo"

\end_inset

 si considerano in funzione obiettivo anche i tempi di attesa dei passeggeri,
 attraverso una formulazione di programmazione zero-uno multi-obiettivo.
 Si presenta un framework di simulazione, testato sui dati dell'aeroporto
 di Taipei, che analizza gli effetti dei ritardi stocastici dei voli.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "lim2005ags"

\end_inset

 viene introdotto il concetto di finestre temporali nella modellazione del
 GAP.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Lim2005"

\end_inset

 viene formulato un modello matematico che considera la robustezza del piano
 di assegnamento definendo una probabilità di conflitto fra due aerei che
 occupano lo stesso gate.
 Gli autori propongono un algoritmo euristico ibrido che impiega una tabu
 search ed una ricerca locale.
\end_layout

\begin_layout Standard
Gli assegnamenti robusti sono considerati da Bolat 2000 
\begin_inset CommandInset citation
LatexCommand cite
key "bolat2000ppr"

\end_inset

, 
\end_layout

\begin_layout Section
Modelli AGAP
\end_layout

\begin_layout Standard
The basic AGAP IP model was proposed by Babi et al.
 in 1984.
 The objective in the model is to minimize the total walking distance for
 arrival and departure passengers.
 The modeling of the problem is based on the following information and assumptio
ns:
\end_layout

\begin_layout Itemize
The flight schedule indicating the aircraft arrival and departure time,
 which is assumed to be fixed;
\end_layout

\begin_layout Itemize
The number of gates, which is assumed to be enough for any time slot of
 the planning horizon;
\end_layout

\begin_layout Itemize
The number of passengers for each flight, including both arriving and departing
 passengers;
\end_layout

\begin_layout Itemize
The airport terminal layout which indicates the walking distance from any
 gate to the baggage claim areas and the walking distance from the check-in
 point to any gate.
\end_layout

\begin_layout Standard
Il modello è:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & z=\sum_{i}\sum_{j}\left(P_{i}^{a}D_{j}^{a}+P_{i}^{d}D_{j}^{d}\right)x_{ij}\label{eq:min_gates_pesati-3}\\
\sum_{j\in V}x_{ij}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0-3}\\
\sum_{i^{\prime}\in I_{i}}x_{i^{\prime}j}+x_{ij}\leq1 &  & \forall i\in V\,\forall j\in V\label{eq:vincolo_compatibilita_bus_0-3}\\
x_{ij}\in\{0,\,1\} &  & \forall i\in V,\,\forall j\in V\label{eq:x_ik_dominio-3}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
The cost in the objective function is the walking distance for both arrival
 and departure passengers.
 This is based on the fact that for any aircraft occupying the gate there
 is a certain number of arrival passengers when the aircraft arrives at
 the gate and a certain number of departure passengers when the aircraft
 departs from the gate.
 Thus “flight”, which is i in the model, in fact stands for the “flight
 ground leg”, which includes the arrival of the aircraft at the gate and
 the departure of the aircraft from the gate.
 
\end_layout

\begin_layout Standard
There are two basic constraints in the model.
 The first Constraint (2.1) is the “Single Assignment Constraint”, which
 indicates that for each flight there is one and only one gate assigned
 to it.
 The second Constraint (2.2) is the “Ground Time Conflict Constraint”, which
 indicates that there should not be more than one aircraft assigned to the
 same gate if they have overlapping ground time.
 
\end_layout

\begin_layout Standard
In this model, passengers transfer is not considered, which complicates
 the problem.
 To avoid excessive computation time, many researchers proposed their work
 based on this basic model, thus ignoring the transfer passengers.
 However, for large international hub airports where there is a sizeable
 portion of transfer passengers, this approximation will lead to a bias
 of the solution that favors the arrival and departure passengers only.
 
\end_layout

\begin_layout Standard
Linearized Quadratic Airport Gate Assignment Models
\end_layout

\begin_layout Standard
To include the consideration of the transfer passengers, Haghani and Chen
 (1998) proposed a heuristic to solve the following linearized quadratic
 IP model for the gate assignment problem:
\end_layout

\begin_layout Section
Altri problemi analoghi
\end_layout

\begin_layout Paragraph
Train Platforming Problem 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TPP
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema nel caso ferroviario consiste nell'assegnare i treni ai binari
 di una stazione ferroviaria in modo da avere degli assegnamenti compatibili
 con l'istradamento dei treni.
 Il problema viene identificato come Train Platforming Problem (TPP) e survey
 recenti sono
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "caprara2007passenger"

\end_inset

 e, di carattere più generale,
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "lusby-railway"

\end_inset

.
\end_layout

\begin_layout Standard
Alcuni autori modellano il TPP come un problema di Graph Coloring su grafi
 di conflitto, altri usano tecniche tradizionali della ricerca operativa
 e altri la programmazione per vincoli.
\end_layout

\begin_layout Paragraph
Dock Assignment Problem 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
DAP o Dock-to-door assignment
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema nel caso di caricamento di camion o altri veicoli da magazzini
 è classificato come Dock Assignment Problem (DAP).
 Il problema appare poco studiato e molte soluzioni sono mutate dal GAP.
\end_layout

\begin_layout Paragraph
Register-assignment
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Register-assignment
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I problemi di Register-assignment o Register-allocation sono descritti in
 
\begin_inset CommandInset citation
LatexCommand cite
key "pereira2008survey"

\end_inset

.
 La tendenza attuale predilige metodi euristici che impiegano poca memoria
 e poco tempo di calcolo, ma quando l'ottimizzazione del codice è importante
 si ricorre frequentemente a tecniche di coloring.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Zeitlhofer20031411"

\end_inset

 l'assegnamento dei registri diviene un problema decisionale di restricted-color
ing (list-coloring nel titolo scelto degli autori), la cui soluzione determina
 un assegnamento che richiede al massimo tanti registri quanti disponibili,
 se tale soluzione esiste.
 Essi descrivono il caso di processori con varie unità funzionali in grado
 di eseguire un sottoinsieme di istruzioni.
 Lo scheduling delle istruzioni è definito e esse possono essere elaborate
 solo da un sottoinsieme di registri.
 Benché il restricted-coloring sia un problema NP-hard, Zeitlhofer and Wess
 sfruttano alcune proprietà dei grafi d'intervallo per determinare soluzioni
 in tempi ragionevoli, evitando di esplorare l'intero albero di ricerca.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Itemize
Analisi della letteratura di rescheduling
\end_layout

\begin_layout Itemize
Aircraft Rescheduling Problem
\end_layout

\begin_deeper
\begin_layout Itemize
Railway Rescheduling Problem (RRP)
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Chapter
Nuove formulazioni e modelli
\begin_inset CommandInset label
LatexCommand label
name "chap:Nuove-formulazioni"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
New formulations and models
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema di assegnare fermate a piattaforme può essere formulato in vari
 modi, ognuno dei quali si presta meglio alla ottimizzazione di un determinata
 funzione obiettivo.
 In particolare verranno proposte delle formulazioni su grafi.
\end_layout

\begin_layout Standard
Si ricorda che un grafo 
\begin_inset Formula $G$
\end_inset

 è una coppia ordinata di insiemi 
\begin_inset Formula $(V,\, E)$
\end_inset

 dove 
\begin_inset Formula $V$
\end_inset

 è un insieme detto insieme dei vertici ed 
\begin_inset Formula $E$
\end_inset

 è un insieme detto insieme degli archi o dei lati, tali che gli elementi
 di 
\begin_inset Formula $E$
\end_inset

 siano coppie di elementi di 
\begin_inset Formula $V$
\end_inset

, ovvero 
\begin_inset Formula $|E|\leq|V|^{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Un arco è una coppia 
\begin_inset Formula $(v,w)$
\end_inset

 di vertici in 
\begin_inset Formula $V$
\end_inset

, cioè 
\begin_inset Formula $v\in V$
\end_inset

 e 
\begin_inset Formula $w\in V$
\end_inset

.
 I vertici 
\begin_inset Formula $u$
\end_inset

 e 
\begin_inset Formula $v$
\end_inset

 si dicono adiacenti se sono connessi da un arco.
\end_layout

\begin_layout Standard
Il grafo si dice orientato se 
\begin_inset Formula $E$
\end_inset

 è una relazione binaria tra vertici mentre un grafo è non orientato se
 l'insieme 
\begin_inset Formula $E$
\end_inset

 è costituito da coppie non ordinate di vertici.
\end_layout

\begin_layout Standard
In un grafo orientato, un arco 
\begin_inset Formula $(w,v)$
\end_inset

 si dice incidente da 
\begin_inset Formula $w$
\end_inset

 in 
\begin_inset Formula $v$
\end_inset

.
 Un vertice 
\begin_inset Formula $w$
\end_inset

 si dice adiacente a 
\begin_inset Formula $v$
\end_inset

 se e solo se 
\begin_inset Formula $(v,w)\in E$
\end_inset

.
\end_layout

\begin_layout Standard
In un grafo non orientato il grado di un vertice è il numero di archi che
 da esso si dipartono
\end_layout

\begin_layout Standard
In un grafo orientato il grado entrante (uscente) di un vertice è il numero
 di archi incidenti in (da) esso.
\end_layout

\begin_layout Standard
In un grafo orientato il grado di un vertice è la somma del suo grado entrante
 e del suo grado uscente.
\end_layout

\begin_layout Standard
In alcuni casi ogni arco ha un peso (o costo) associato.
 Il costo può essere determinato tramite una funzione di costo, 
\begin_inset Formula $c:E\rightarrow\mathbb{R}$
\end_inset

, dove 
\begin_inset Formula $\mathbb{\mathbb{R}}$
\end_inset

 è l’insieme dei numeri reali (o interi).
\end_layout

\begin_layout Standard
Un sottografo di 
\begin_inset Formula $G$
\end_inset

 è un grafo 
\begin_inset Formula $H=(V^{*},E^{*})$
\end_inset

 tale che 
\begin_inset Formula $V^{*}\subseteq V$
\end_inset

 e 
\begin_inset Formula $E^{*}\subseteq E$
\end_inset

 ed essendo 
\begin_inset Formula $H$
\end_inset

 un grafo deve valere che 
\begin_inset Formula $E^{*}\subseteq V^{*}\times V^{*}$
\end_inset


\end_layout

\begin_layout Standard
Il sottografo di 
\begin_inset Formula $G$
\end_inset

 indotto da 
\begin_inset Formula $V^{*}$
\end_inset

 e il sottografo 
\begin_inset Formula $H=(V^{*},E^{*})$
\end_inset

 tale che 
\begin_inset Formula $E^{*}={(w,v)\in E|w,v\in V^{*}}$
\end_inset

.
\end_layout

\begin_layout Standard
Un grafo completo è un grafo che ha un arco tra ogni coppia di vertici.
 Il numero di archi di un grafo completo è 
\begin_inset Formula $|E|=\frac{|V|^{2}-|V|}{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Una cricca è un insieme
\begin_inset Formula $V$
\end_inset

 di vertici tale che il sottografo indotto da 
\begin_inset Formula $V$
\end_inset

 è un grafo completo.
 La dimensione di una cricca è il numero di vertici che contiene.
 Una cricca è massimale se non esiste nessun altra cricca in cui è contenuta.
 Una cricca massima è quella cricca che ha dimensione massima.
 Il numero di cricca 
\begin_inset Formula $\omega(G)$
\end_inset

 è il numero di vertici di una cricca massima del grafo 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Una decomposizione in cricche di dimensione 
\begin_inset Formula $k$
\end_inset

 è una partizione dei vertici 
\begin_inset Formula $V=V_{1}\cup V_{2}\cup\ldots\cup V_{k}$
\end_inset

 tale che ogni 
\begin_inset Formula $V_{i}$
\end_inset

 sia una cricca, i 
\begin_inset Formula $V_{i}$
\end_inset

 siano insiemi disgiunti e ogni arco di 
\begin_inset Formula $G$
\end_inset

 sia presente in almeno uno dei sottografi completi indotti.
 Il numero di partizione in cricche di 
\begin_inset Formula $G$
\end_inset

, indicato con 
\begin_inset Formula $k(G)$
\end_inset

, è la dimensione della più piccola decomposizione in cricche di 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Un insieme stabile, o insieme indipendente, è un sottoinsieme 
\begin_inset Formula $X$
\end_inset

 di vertici tali che nessuno dei quali sia adiacente agli altri.
 Il numero di elementi dell'insieme di cardinalità massima è detto numero
 di stabilità e si indica con 
\begin_inset Formula $\alpha(G)$
\end_inset

.
\end_layout

\begin_layout Standard
Una buona 
\begin_inset Formula $c$
\end_inset

-colorazione è una partizione dei vertici 
\begin_inset Formula $V=X_{1}+X_{2}+\ldots+X_{c}$
\end_inset

 tale che ogni 
\begin_inset Formula $X_{i}$
\end_inset

 sia un insieme stabile (il simbolo 
\begin_inset Formula $+$
\end_inset

 indica l'unione di insiemi disgiunti).
\end_layout

\begin_layout Standard
Il numero cromatico di 
\begin_inset Formula $G$
\end_inset

, indicato con 
\begin_inset Formula $\chi(G)$
\end_inset

 è il più piccolo 
\begin_inset Formula $c$
\end_inset

 per cui esista una buona colorazione di 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Standard
Il grafo complementare di 
\begin_inset Formula $G$
\end_inset

 è il grafo 
\begin_inset Formula $\overline{G}=(V,\overline{E})$
\end_inset

 dove 
\begin_inset Formula $\overline{E}=\{(x,y)\in V\times V|x\neq y\wedge(x,y)\notin E\}$
\end_inset

.
\end_layout

\begin_layout Standard
Un grafo non orientato 
\begin_inset Formula $G=(V,E)$
\end_inset

) è bipartito se i suoi vertici possono essere partizionati in due insiemi
 disgiunti 
\begin_inset Formula $V_{1}$
\end_inset

 e 
\begin_inset Formula $V_{2}$
\end_inset

 tali che ogni vertice è incidente in un nodo di un inseme e l'altro è incidente
 ad un vertice dell'altro insieme.
 Un grafo bipartito viene indicato con 
\begin_inset Formula $G=(V_{1},V_{2},E)$
\end_inset

.
 Un grafo bipartito è 2-colorabile.
\end_layout

\begin_layout Standard
In generale per un grafo valgono le disequazioni
\begin_inset Formula $\omega(G)\leq\chi(G)$
\end_inset

 e 
\begin_inset Formula $\alpha(G)\leq k(G)$
\end_inset

.
 Per il grafo complementare vale che 
\begin_inset Formula $\omega(G)=\alpha(\overline{G})$
\end_inset

 e 
\begin_inset Formula $\chi(G)=k(\overline{G})$
\end_inset

.
\end_layout

\begin_layout Standard
Il grafo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 si dice perfetto se per ogni grafo indotto 
\begin_inset Formula $G^{*}=(V^{*},\, E^{*})$
\end_inset

 vale 
\begin_inset Formula $\omega(G^{*})=\chi(G^{*})$
\end_inset

.
 
\end_layout

\begin_layout Section
Minimizzazione del numero di gate utilizzati
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Problema
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il gestore di un'autostazione potrebbe richiedere che il piano di assegnamento
 fermate-piattaforme occupi durante l'orizzonte di pianificazione il numero
 minimo possibile di piattaforme.
 Una politica di gestione che considera questo obiettivo permette di ridurre
 le spese di gestione ed eventualmente di produrre ulteriore profitto.
 Il maggiore profitto si può ottenere accogliendo un numero maggiore di
 servizi fino a saturare la capacità dell'autostazione o con l'affitto le
 piattaforme inutilizzate ad altri operatori di trasporto.
 Tale politica di gestione permette di utilizzare al massimo l'area del
 piazzale dell'autostazione, aumentando la densità di servizi, ma la soluzione
 prodotta potrebbe essere poco robusta.
 Il software GatePlanner di Pluservice, infatti, considera l'obiettivo quello
 di minimizzare il numero di piattaforme in uso durante una giornata.
 La scelta di tale obiettivo è motivata, inoltre, dal fatto che l'eventuale
 se ci sono piattaforme non utilizzate esse possono essere impigate per
 scali di servizi e soste di veicoli.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Approccio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per questo obiettivo proponiamo:
\end_layout

\begin_layout Itemize
la formulazione del problema come problema di restricted-coloring di un
 grafo d'intervallo;
\end_layout

\begin_layout Itemize
un modello matematico, che per quanto noto agli autori è innovativo, per
 la risoluzione del problema di restricted-coloring;
\end_layout

\begin_layout Itemize
un algoritmo esatto ed efficiente (tratto da
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Zeitlhofer20031411"

\end_inset

 con l'aggiunta di vincoli locali sulle corse 
\begin_inset Quotes eld
\end_inset

bis
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Subsection
Formulazione del problema
\end_layout

\begin_layout Standard
Il problema decisionale del restricted coloring di un grafo degli intervalli
 è il seguente:
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Dati
\end_layout

\begin_layout Itemize
un grafo d'intervallo 
\begin_inset Formula $G=(V,E)$
\end_inset

,
\end_layout

\begin_layout Itemize
un insieme di colori 
\begin_inset Formula $C$
\end_inset

,
\end_layout

\begin_layout Itemize
una famiglia di insiemi (liste di compatibilità) 
\begin_inset Formula $\left\{ L(i)\right\} _{i\in V}$
\end_inset

 e
\end_layout

\begin_layout Itemize
un numero positivo 
\begin_inset Formula $\chi_{r}$
\end_inset


\end_layout

\begin_layout Plain Layout
determinare il colore di ogni vertice 
\begin_inset Formula $i\in V$
\end_inset

 tale che
\end_layout

\begin_layout Itemize
nessuna coppia di vertici adiacenti sia dello stesso colore (colorazione
 propria),
\end_layout

\begin_layout Itemize
il colore assegnato ad ogni nodo 
\begin_inset Formula $i\in V$
\end_inset

 sia presente nella lista di compatibilità 
\begin_inset Formula $L(i)$
\end_inset

 e
\end_layout

\begin_layout Itemize
il numero di colori usati sia minore o uguale a 
\begin_inset Formula $\chi_{r}$
\end_inset

 .
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per modellare il problema si considerino l'insieme delle piattaforme 
\begin_inset Formula $C=\{c_{1},\,\ldots,\, c_{m}\}$
\end_inset

, l'insieme delle fermate dei bus da pianificare 
\begin_inset Formula $V=\{v_{1},\,\ldots,\, v_{n}\}$
\end_inset

, e, per ogni fermata 
\begin_inset Formula $v_{i}$
\end_inset

, i tempi 
\begin_inset Formula $a_{i}$
\end_inset

 tempo di inizio fermata schedulato del bus 
\begin_inset Formula $i$
\end_inset

 (scheduled arriving time) e 
\begin_inset Formula $d_{i}$
\end_inset

 tempo di fine fermata schedulato del bus 
\begin_inset Formula $i$
\end_inset

 (scheduled departured time) e la lista 
\begin_inset Formula $L(v_{i})$
\end_inset

 delle piattaforme compatibili con la fermata 
\begin_inset Formula $v_{i}$
\end_inset

.
 L'intervallo 
\begin_inset Formula $(a_{i},\, d_{i})$
\end_inset

 definisce l'intervallo di occupazione di una piattaforma da parte della
 fermata 
\begin_inset Formula $v_{i}$
\end_inset

.
 Due fermate 
\begin_inset Formula $v_{i}$
\end_inset

 e 
\begin_inset Formula $v_{j}$
\end_inset

 i cui intervalli temporali di occupazione del gate si sovrappongono necessariam
ente non possono essere assegnati alla stessa piattaforma.
 Sia 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 il grafo di interferenza delle fermate, avente 
\begin_inset Formula $V$
\end_inset

 insieme dei nodi e 
\begin_inset Formula $E$
\end_inset

 insieme degli archi, costruito in modo che esiste un arco da ogni fermata
 ad ogni altra fermata tale che gli intervalli temporali abbiano intersezione
 non vuota.
 Il grafo non è orientato e gli archi 
\begin_inset Formula $(v_{i},\, v_{j})\in E$
\end_inset

 sono le coppie non ordinate 
\begin_inset Formula $v_{i}\in V,\, v_{j}\in V\,:\,(a_{i},\, d_{i})\cap(a_{j},\, d_{j})\neq\emptyset$
\end_inset

.
 Tale grafo è una rappresentazione di un insieme di intervalli e appartiene
 alla classe dei grafi d'intervallo.
 Si ricorda che un grafo d'intervallo è un grafo perfetto per cui il numero
 cromatico 
\begin_inset Formula $\chi$
\end_inset

 è uguale alla dimensione della cricca massima 
\begin_inset Formula $\omega$
\end_inset

.
 Sia 
\begin_inset Formula $\mathcal{Q}=[Q_{1},Q_{2},\ldots,Q_{r}]$
\end_inset

 una decomposizione in cricche massimali costruito in modo che la matrice
 delle cricche sia ordinata secondo la consecutive one property (C1P).
 L'ordinamento può essere sfruttato efficientemente per potare l'albero
 di ricerca in modo da evitare l'esplorazione di stati 
\begin_inset Note Note
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
delle spazio di ricerca
\end_layout

\end_inset

 già esplorati.
 Ogni elemento 
\begin_inset Formula $Q_{t}$
\end_inset

 contiene l'insieme delle fermate incompatibili fra loro e per la modellazione
 e risoluzione del problema è possibile non considerare gli insiemi di cardinali
tà 1 (nodi isolati).
 Le componenti e l'ordinamento del vettore 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 possono essere determinate in tempo polinomiale 
\begin_inset Formula $O(n\log n)$
\end_inset

 usando algoritmi come quello di 
\begin_inset CommandInset citation
LatexCommand cite
key "Wang1994"

\end_inset

.
 Il problema di assegnamento dei veicoli alle piattaforme è esprimibile
 come problema di restricted-coloring definito sul grafo d'intervallo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 con compatibilità 
\begin_inset Formula $L\,:\, V\rightarrow2^{C}$
\end_inset

, dove 
\begin_inset Formula $V$
\end_inset

 rappresenta l'insieme dei vertici, 
\begin_inset Formula $C$
\end_inset

 l'insieme dei colori, e 
\begin_inset Formula $L(v_{i})$
\end_inset

 la lista di compatibilità la fermata rappresentata dal vertice 
\begin_inset Formula $v_{i}$
\end_inset

 e le piattaforme.
 Ogni fermata corrisponde ad un vertice, ogni piattaforma ad un colore.
\end_layout

\begin_layout Standard
Risolvere il problema di produrre un assegnamento fermate-piattaforme di
 costo viene ricondotto al problema di cercare una colorazione propria dei
 nodi del grafo in cui il colore assegnato al nodo sia compatibile col nodo
 stesso.
\end_layout

\begin_layout Paragraph
Esempio
\end_layout

\begin_layout Standard
Si consideri, ad esempio, di dover assegnare alle sette fermate dei servizi
 in tab.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:fermate_e_compatibilita"

\end_inset

, in cui i numeri identificanti i servizi sono ordinati per tempo di inizio
 dell'intervallo di fermata.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\color black
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Servizio
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arrivo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Partenza
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compatibilità
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
1
\color inherit
, 
\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
1
\color inherit
, 
\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
1
\color inherit
, 
\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:fermate_e_compatibilita"

\end_inset

Orari delle fermate e compatibilità con le piattaforme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nella fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intervalli-temporali"

\end_inset

 sono rappresentati i sette intervalli temporali delle fermate come barre
 rettangolari di lunghezza proporzionale alla durata dell'intervallo.
 Le bare sono disposte su quattro livelli in modo che su ogni livello non
 siano presenti sovrapposizioni.
 La disposizione sui livelli rappresenterebbe una possibile soluzione al
 problema se tutte le fermate fossero compatibili con tutte le piattaforme.
 A partire dagli intervalli è possibile costruire un grafo in cui ogni intervall
o corrisponde un vertice ed esiste un lato se due intervalli hanno intersezione
 non vuota.
 Il grafo 
\begin_inset Formula $G=(V,E)$
\end_inset

 è un grafo d'intervallo: rappresenta l'intersezione di un multiinsieme
 di intervalli definiti sulla retta reale.
 Ogni intervallo del multiinsieme corrisponde ad un vertice e due vertici
 sono connessi da un lato se e solo se gli intervalli corrispondenti hanno
 intersezione non vuota.
 Il numero minimo di livelli necessari e sufficienti per disegnare gli intervall
i senza sovrapposizioni corrisponde alla dimensione della cricca massima.
 Sia 
\begin_inset Formula $\mathcal{Q}_{G}$
\end_inset

 l'insieme di tutte le cricca massimali distinte.
 Il grafo si può esprimere come il grafo unione delle cricca massimali:
 
\begin_inset Formula $G=\cup_{Q\in\mathcal{Q}_{G}}Q$
\end_inset

 .
 Si noti che il numero di cricca massimali di un grafo d'intervallo è minore
 o uguale alla cardinalità dell'insieme dei nodi.
 Il problema della ricerca di tutte le cricca massimali di un grafo d'intervallo
 è un problema polinomiale.
\end_layout

\begin_layout Standard
Dato un grafo d'intervallo con 
\begin_inset Formula $n$
\end_inset

 intervalli, sia la sequenza ordinata degli estremi 
\begin_inset Formula $d_{1},d_{2},\ldots,d_{2n}$
\end_inset

 con 
\begin_inset Formula $d_{i}<d_{j}$
\end_inset

 per 
\begin_inset Formula $1\leq i<j\leq2n$
\end_inset

.
 Tutti gli intervalli che hanno intersezione non nulla con l'intervallo
 aperto 
\begin_inset Formula $(d_{i},d_{i+l})$
\end_inset

 formano una cricca massimale se e solo se 
\begin_inset Formula $d_{i}$
\end_inset

 è un estremo sinistro e 
\begin_inset Formula $d_{i+l}$
\end_inset

 è un estremo destro, non necessariamente dello stesso intervallo.
\end_layout

\begin_layout Standard
I grafi d'intervallo appartengono alla classe più generale dei cosidetti
 grafi perfetti, grafi per cui vale che il numero di cricca è uguale al
 numero cromatico (
\begin_inset Formula $\omega(G)=\chi(G)$
\end_inset

) e il numero di stabilità è uguale a quello di partizioni in cricche 
\begin_inset Formula $\alpha(G)=k(G)$
\end_inset

..
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering{
\backslash
input{img/intervals_and_graph}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Intervalli-temporali"

\end_inset

Intervalli temporali e grafo d'intervallo corrispondente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
Nella fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:Grafo-intervallo"

\end_inset

 sono rappresentati il grafo d'intervallo, le liste di compatibilità, le
 cricche massimali ed una soluzione ammissibile del problema di restricted-color
ing.
 Si noti che i vertici sono numerati secondo un 
\emph on
ordine perfetto
\emph default
.
 Le liste di colori ammissibili per ogni vertice sono elencate vicino al
 vertice stesso.
 Le cricche massimali sono evidenziate dalle linee tratteggiate.
 Si noti che il numero cromatico (il grafo è 4-colorabile) coincide con
 il numero di cricca, che vale 4, e questo permette di dedurre che la soluzione
 è ottima.
 Le cricche massimali sono {1,2,3}, {2,3,4,5}, {4,5,6} e {5,6,7}.
 I vertici {2,3,4,5,6} sono presenti su più di una cricca massimale e per
 questo sono chiamati vertici d'interfaccia, mentre i rimanenti vertici
 {1, 7} formano una cricca con tutti i loro vicini e sono detti vertici
 simpliciali.
 Una volta colorati i vertici d'interfaccia è possibile determinare una
 colorazione univoca dei vertici rimanenti, ad esempio scegliendo il primo
 colore disponibile.
 Ciò permette di non esplorare soluzioni ridondanti.
 
\end_layout

\begin_layout Standard
Si ricorda che un vertice 
\begin_inset Formula $v$
\end_inset

 di 
\begin_inset Formula $G=(V,E)$
\end_inset

 è simpliciale se l'insieme dei nodi adiacenti 
\begin_inset Formula $N(v)$
\end_inset

 induce un sottografo completo di 
\begin_inset Formula $G$
\end_inset

.
 Un ordinamento dei vertici 
\begin_inset Formula $\sigma=[v_{1},v_{2},\ldots,v_{n}]$
\end_inset

 tale per cui 
\begin_inset Formula $X_{i}=\left\{ v_{j}\in N(v_{i})|j>i\right\} $
\end_inset

è un grafo competo è detta sequenza di eleminazione perfetta.
 Si noti come i nodi del grafo in figura siano numerati secondo una sequenza
 di eliminazione perfetta.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering{
\backslash
input{img/interval_graph}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Grafo-intervallo"

\end_inset

Istanza di restricted-coloring e una sua soluzione
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se si definisce nel domino dei numeri reali la funzione 
\begin_inset Formula $f(x)$
\end_inset

, che assume come valore la differenza tra il numero di estremi sinistri
 e destri presenti nella retta reale prima di 
\begin_inset Formula $x$
\end_inset

.
 Per ogni punto reale 
\begin_inset Formula $x$
\end_inset

 è quindi definita una cricca e per ogni cricca esiste un numero reale 
\begin_inset Formula $x$
\end_inset

 che la definisce.
 Il valore della massima cricca è dato da 
\begin_inset Formula $\chi=\max f(x)$
\end_inset

.
 Per colorare il grafo d'intervallo nel caso di graph coloring basta ordinare
 i valori 
\begin_inset Formula $d_{i}$
\end_inset

 e scandirli dal minimo al massimo.
 In un passo generico dell’algoritmo i colori utilizzatio sono marcati e
 quelli disponibili sono non marcati.
 Inzialmente nessun colore è marcato.
 Si può notare che i massimi locali di 
\begin_inset Formula $f(x)$
\end_inset

 forniscono le cricche massimali.
 Nell’esempio ce ne sono quattro, che sono anche massime in questo caso.
 Il massimo locale è determinato dall’estremo destro di un intervallo.
 Si veda la fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Grafo-intervallo-fx"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering{
\backslash
input{img/interval_graph_fx}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Grafo-intervallo-fx"

\end_inset

Funzione che conta gli intervalli sovrapposti
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
 Per modellare ulteriori restrizioni sulle soluzioni ammissibili, quali
 quelli sulle corse bis o sull'incompatibilità di fermate sullo stesso gate,
 occorre aggiungere vincoli o vincoli locali sui colori, come nei problemi
 noti come precoloring extension.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Calcolo della limitazione inferiore
\end_layout

\begin_layout Standard
Al fine di certificare l'ottimalità di una soluzione trovata e dunque risparmiar
e tempo computazionale in un algoritmo di enumerazione delle soluzioni deve
 essere stimato il numero minimo di piattaforme necessarie ad accogliere
 tutte le fermate.
 Una stima per difetto del numero di piattaforme permette, inoltre, di capire
 immediatamente se un insieme di fermate è sicuramente non gestibile dall'autost
azione.
 Il numero minimo di piattaforme è il numero di colori soluzione del problema
 di restricted-coloring, il quale numero è maggiore o uguale al numero cromatico
 del problema di graph-coloring definito sullo stesso grafo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

.
 Il problema di determinare il numero cromatico è infatti un rilassamento
 del problema di restricted-coloring in cui sono stati eliminati i vincoli
 di compatibilità.
 Il grafo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 appartiene alla classe dei grafi perfetti quindi il numero cromatico è
 uguale al numero di cricca e determinare il numero di clique di un grafo
 d'intervallo è risolubile in tempo polinomiale.
 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
`E}
\end_layout

\end_inset

 sufficiente, ad esempio calcolare la cardinalità massima degli insiemi
 
\begin_inset Formula $Q_{r}$
\end_inset

 determinati in alg.
\begin_inset CommandInset ref
LatexCommand ref
reference "cliques_interferenti"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{La lista ordinata $T$ degli estremi temporali degli intervalli di
 fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{L'insieme delle lista di fermate che interferiscono $
\backslash
mathcal{Q}$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	Poni $r = 1$
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $
\backslash
mathcal{Q} = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $Q_{r} = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $prec = arrival$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni istante temporale
\backslash
ldots} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$t 
\backslash
in T$}{%
\end_layout

\begin_layout Plain Layout

		Poni $i = t.fermata$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{se l'istante corrente rappresenta un arrivo}%
\end_layout

\begin_layout Plain Layout

			
\backslash
If{$t.type = arrival$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{la fermata 
\backslash
`e nel gruppo di interferenti}%
\end_layout

\begin_layout Plain Layout

				Poni $Q_r = Q_r 
\backslash
cup i$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

				Poni $prec = arrival$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

			} 
\backslash
Else {%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$prec = arrival 
\backslash
, 
\backslash
wedge 
\backslash
, |Q| > 1$}{%
\end_layout

\begin_layout Plain Layout

					Poni $
\backslash
mathcal{Q} = 
\backslash
mathcal{Q} 
\backslash
cup Q_r$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

				Poni $Q_{r+1} = Q_r 
\backslash
setminus i$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				Poni $r=r+1$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				Poni $prec = departure$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

			} %
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

%	}
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
mathcal{Q}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Insiemi di fermate interferenti (clique massimali)}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{cliques_interferenti}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un altro modo di determinare tale valore consiste nel contare il numero
 massimo di intervalli temporali che si sovrappongono.
 L'algoritmo richiede la lista ordinata degli istanti temporali di arrivo
 e partenza delle fermate e deve poter determinare se si tratta di un arrivo
 o di una partenza ed è formalizzato in alg.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "bp_lb"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{La lista ordinata $T$ degli estremi temporali degli intervalli di
 fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Il numero massimo di sovrapposizioni delle fermate $s$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	Poni $s = 0$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $s
\backslash
_correnti = 0$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $prec = arrival$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni istante temporale} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$t 
\backslash
in T$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{se l'istante corrente rappresenta un arrivo}%
\end_layout

\begin_layout Plain Layout

		
\backslash
If{$t.type = arrival$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{si sovrappone un nuovo intervallo}%
\end_layout

\begin_layout Plain Layout

			Poni $s
\backslash
_correnti = s
\backslash
_correnti+1$
\backslash
;
\end_layout

\begin_layout Plain Layout

			Poni $prec = arrival$
\backslash
;%
\end_layout

\begin_layout Plain Layout

		} 
\backslash
Else { %
\end_layout

\begin_layout Plain Layout

			%
\backslash
If{$prec = arrival$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$s < s
\backslash
_correnti$} {Poni $s = s
\backslash
_correnti$ 
\backslash
; }
\end_layout

\begin_layout Plain Layout

			%}
\end_layout

\begin_layout Plain Layout

			Poni $s
\backslash
_correnti = s
\backslash
_correnti-1$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

			Poni $prec = departure$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

		} %
\end_layout

\begin_layout Plain Layout

	} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$s$
\backslash
;}
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Massimo numero di intervalli sovrapposti}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{bp_lb}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se la lista degli estremi degli intervalli è fornita in ordine non decrescente
 l'algoritmo ha complessità temporale lineare 
\begin_inset Formula $O(n)$
\end_inset

, altrimenti è la complessità e quella dell'algoritmo di ordinamento, in
 genere 
\begin_inset Formula $O(n\log n)$
\end_inset

.
\end_layout

\begin_layout Section
Modello matematico basato sul modello di assegnamento
\end_layout

\begin_layout Standard
Il problema del restricted-coloring può essere formulato su un grafo 
\begin_inset Formula $\mathcal{G}(\mathcal{V},\mathcal{E})=G+K_{m}$
\end_inset

 ottenuto dal grafo di interferenza delle fermate 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 e dalle compatibilità con le piattaforme 
\begin_inset Formula $L(v),\, v\in V$
\end_inset

.
 Per costruire il grafo 
\begin_inset Formula $\mathcal{G}$
\end_inset

 si prendano 
\begin_inset Formula $m$
\end_inset

 copie 
\begin_inset Formula $G^{1},\ldots,G^{m}$
\end_inset

 di 
\begin_inset Formula $G$
\end_inset

, una per colore, dove 
\begin_inset Formula $G^{i}$
\end_inset

 ha insieme dei nodi 
\begin_inset Formula $V_{i}=\{(v,c)\,|\, v\in V\}$
\end_inset

 e insieme degli archi 
\begin_inset Formula $E_{i}=\left\{ \left((v,i),(w,i)\right)\,|\,(v,w)\in E\right\} $
\end_inset

, e si costruisca la clique sui nodi 
\begin_inset Formula $(v,1),(v,2),\ldots,(v,c)$
\end_inset

 per ogni 
\begin_inset Formula $v\in V$
\end_inset

.
 Si rimuovano dal grafo i nodi 
\begin_inset Formula $(v,c)\,|\, v\in V,\, c\notin L(v)$
\end_inset

 (e tutti gli archi di 
\begin_inset Formula $\mathcal{E}$
\end_inset

 a esso collegati).
\end_layout

\begin_layout Standard
L'insieme 
\begin_inset Formula $\mathcal{V}^{k}$
\end_inset

 ha quindi il nodo 
\begin_inset Formula $(v_{i},\, c_{k})$
\end_inset

 se la fermata 
\begin_inset Formula $v_{i}\in V$
\end_inset

 che occupa una piattaforma nell'intervallo temporale 
\begin_inset Formula $(a_{i},\, d_{i})$
\end_inset

 può essere assegnata alla piattaforma 
\begin_inset Formula $c_{k}\in C$
\end_inset

.
 Tale nodo 
\begin_inset Formula $(v_{i},\, c_{k})$
\end_inset

 forma una cricca di ordine 
\begin_inset Formula $|L(v_{i})|$
\end_inset

 con tutti gli altri vertici 
\begin_inset Formula $(v_{i},\, c_{h})$
\end_inset

 dove 
\begin_inset Formula $c_{h}\ni L(v_{i})$
\end_inset

 .
 Fissato un colore gli archi 
\begin_inset Formula $\mathcal{E}^{k}$
\end_inset

 modellano le incompatibilità fra fermate.
 Ogni sottografo indotto 
\begin_inset Formula $\mathcal{G}^{K}=(\mathcal{V}^{k},\mathcal{E}^{k})$
\end_inset

 è un grafo d'intervallo isomorfo ad un sottografo indotto di 
\begin_inset Formula $G$
\end_inset

, che esprime il vincolo che per ogni possibile colore (piattaforma) 
\begin_inset Formula $c_{k}$
\end_inset

 che può essere assegnato ai vertici (fermate) compatibili col colore 
\begin_inset Formula $v_{i}|c_{k}\in L(v_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
Una soluzione ammissibile per il problema di restricted-coloring su 
\begin_inset Formula $G$
\end_inset

 è un insieme stabile di 
\begin_inset Formula $\mathcal{G}$
\end_inset

 di cardinalità 
\begin_inset Formula $n$
\end_inset

 e, per costruzione di 
\begin_inset Formula $\mathcal{G}$
\end_inset

 non possono esistere insiemi stabili di cardinalità maggiore in quanto
 ogni insieme stabile avrà un solo nodo 
\begin_inset Formula $(v_{i},c_{k})$
\end_inset

 per ogni 
\begin_inset Formula $c_{k}\in C$
\end_inset

.
 Il problema di restricted-coloring su 
\begin_inset Formula $G$
\end_inset

 è equivalente al problema di determinazione di un massimo insieme stabile
 su 
\begin_inset Formula $\mathcal{G}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Si considerino cioè per ogni piattaforma 
\begin_inset Formula $k$
\end_inset

 il sottografo indotto 
\begin_inset Formula $H^{k}=(V^{k},\,\{c_{k}\},\, A^{k})$
\end_inset

 di 
\begin_inset Formula $H$
\end_inset

, in cui 
\begin_inset Formula $V^{k}\subseteq V$
\end_inset

 ha per elementi tutte e sole le fermate che possono essere assegnate alla
 piattaforma 
\begin_inset Formula $k$
\end_inset

 ed 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $E^{k}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
 l'insieme dei lati incidenti in 
\begin_inset Formula $k$
\end_inset

, ed il sottografo indotto del grafo di interferenza delle fermate 
\begin_inset Formula $G^{k}=(V^{k},\, E^{k})$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ad esempio si supponga di dover allocare le fermate 1, 2, 3 definite dagli
 intervalli (1,4), (2, 5) e (3,6) ai gate 1, 2, 3 aventi tempi di servizio
 [0, 7], [0, 7] e [1,5], senza presenza di ulteriori vincoli di allocazione.
 I parametri sono riassunti in tab.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Istanza-gap-1"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Determinare una soluzione per questa istanza è banale ma la rappresentazione
 dei grafi permette di visualizzare bene le trasformazioni tra problemi
 e soluzioni.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Servizio
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arrivo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Partenza
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compatibilità
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, 2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, 2, 3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Istanza-gap-1"

\end_inset

Istanza di esempio
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La rappresentazione delle fasce orarie di occupazione può essere effettuata
 mediante un diagramma a barre come in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intervalli-di-occupazione1"

\end_inset

 Le compatibilità fermata-piattaforma del problema in esame sono rappresentate
 in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:relazioni_L1"

\end_inset

, mentre il grafo di compatibilità risulta essere quello in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intervalli-di-occupazione1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.65
\backslash
textwidth][c]{
\backslash
input{img/fasce_orarie1}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Intervalli-di-occupazione1"

\end_inset

Intervalli di fermata e grafo d'interferenza 
\begin_inset Formula $G$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.31
\backslash
textwidth][c]{
\backslash
input{img/relazioni_L1}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:relazioni_L1"

\end_inset

Compatibilità 
\begin_inset Formula $L(v_{i})$
\end_inset


\begin_inset Argument
status open

\begin_layout Plain Layout
Relazioni di compatibilità 
\begin_inset Formula $L(v_{i})$
\end_inset


\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
fermate-piattaforme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Istanza di esempio del problema
\end_layout

\end_inset


\end_layout

\end_inset

L'istanza del problema di partenza viene ricondotta ad un problema 
\begin_inset Formula $\mathcal{I}=[G(V,E),\, L]$
\end_inset

 di restricted-coloring con parametri 
\begin_inset Formula $G$
\end_inset

 ed 
\begin_inset Formula $L$
\end_inset

, come indicato in fig
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Istanza-di-list-coloring"

\end_inset


\end_layout

\begin_layout Standard
Il grafo 
\begin_inset Formula $G$
\end_inset

 e le informazioni contenute in 
\begin_inset Formula $L$
\end_inset

 permettono di generare il grafo 
\begin_inset Formula $\mathcal{G}$
\end_inset

 che corrisponde all'istanza 
\begin_inset Formula $\mathcal{I}'$
\end_inset

 di un problema di insiemi stabili.
 L'istanza è rappresentata in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Istanza-mis"

\end_inset

.
 
\end_layout

\begin_layout Standard
Una soluzione, fra le tre possibili, del problema del massimo insieme stabile
 è presentata in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Soluzione-Massimo-Insieme"

\end_inset

.
 
\end_layout

\begin_layout Standard
Per passare dalla soluzione del problema del massimo insieme stabile di
 
\begin_inset Formula $\mathcal{G}$
\end_inset

 ad una soluzione del problema di list coloring è sufficiente colorare ogni
 vertice 
\begin_inset Formula $v\in V$
\end_inset

 di 
\begin_inset Formula $G$
\end_inset

 con il colore del vertice 
\begin_inset Formula $(v,c)\in\mathcal{V}$
\end_inset

 di 
\begin_inset Formula $\mathcal{G}$
\end_inset

 selezionato nella soluzione, come presentato in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Soluzione-list-coloring"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.45
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_istanza}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Istanza-di-list-coloring"

\end_inset

Istanza del problema di list-coloring 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
parbox[c]{0.5cm}{$
\backslash
longrightarrow$
\backslash
vspace{3cm}}
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.50
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_mis_istanza}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Istanza-mis"

\end_inset

Istanza del problema del massimo insieme stabile
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Formula $\downarrow$
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.45
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_soluzione}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Soluzione-list-coloring"

\end_inset

Soluzione list-coloring
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
parbox[c]{0.5cm}{$
\backslash
longleftarrow$
\backslash
vspace{3cm}}
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.5
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_mis_soluzione}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Soluzione-Massimo-Insieme"

\end_inset

Soluzione Massimo Insieme Stabile
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Trasformazioni-del-problema"

\end_inset

Trasformazioni del problema
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'insieme di archi 
\begin_inset Formula $\mathcal{E}^{k}$
\end_inset

 contiene le coppie non ordinate di fermate incompatibili fra loro e compatibili
 colla piattaforma 
\begin_inset Formula $k$
\end_inset

.
 Le decisioni da prendere sono gli assegnamenti delle fermate alle piattaforme.
\end_layout

\begin_layout Standard
Per passare ad un modello di programmazione lineare intera si consideri
 una variabile binaria
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{ik}=\begin{cases}
1 & \text{se e solo se la sosta \ensuremath{v_{i}}}\text{ è assegnata alla piattaforma }k\\
0 & \text{altrimenti}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
che rappresenta la scelta del vertice 
\begin_inset Formula $(v_{i},c_{k})$
\end_inset

 nel massimo insieme stabile.
\end_layout

\begin_layout Standard
\noindent
I vincoli di assegnamento impongono che ogni fermata sia assegnata ad una
 sola piattaforma (colore, nei problemi di graph coloring):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{k\in L(i)}x_{ik}=1\qquad\forall i\in V
\]

\end_inset


\end_layout

\begin_layout Standard
I vincoli di non sovrapposizione delle fermate, cioè che non si possono
 assegnare ad una piattaforma due fermate in partenza i cui intervalli temporali
 di occupazione si sovrappongano, possono essere espressi genericamente
 da
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{ik}+x_{jk}\leq1\qquad\forall k\in\left(L(i)\cap L(j)\right),\,\forall(i,\, j)\in\mathcal{E}^{k}
\]

\end_inset


\end_layout

\begin_layout Standard
L'ultimo insieme di vincoli descrive l'incompatibilità delle fermate in
 modo naturale, ma il rilassamento lineare generalmente fornisce soluzioni
 distanti dall'ottimo (vedi
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "caprara1998properties"

\end_inset

).
 Inoltre il numero di vincoli è elevato e la complessità dell'algoritmo
 risolutivo comunemente impiegato per problemi di PL, cresce al crescere
 del numero di vincoli.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
`E
\end_layout

\end_inset

 possibile formulare in modo più compatto e stringente i vincoli di incompatibil
ità mediante l'uso del vettore 
\begin_inset Formula $\mathcal{Q}_{k}$
\end_inset

 definito in alg.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cliques_incompatibili_per_colore"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{i\in\mathcal{Q}}x_{ik}\leq1\qquad\forall k\in C,\,\forall\mathcal{Q}\in\mathcal{Q}_{k}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{La lista ordinata $T$ degli estremi temporali degli intervalli di
 fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Il vettore contenente gli insiemi delle fermate incompatibili $
\backslash
mathcal{Q}_k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni piattaforma $k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$k 
\backslash
in C$}{ %
\end_layout

\begin_layout Plain Layout

		Poni $
\backslash
mathcal{Q}_{k} = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

		Poni $Q = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

		Poni $prec = arrival$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

		
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{Per ogni istante temporale
\backslash
ldots} %
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$t 
\backslash
in T$}{%
\end_layout

\begin_layout Plain Layout

			Poni $i = t.fermata$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{
\backslash
ldots di una fermata assegnabile al gate k} %
\end_layout

\begin_layout Plain Layout

			
\backslash
If{$(i, k) 
\backslash
in A$}{ %
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{se l'istante corrente rappresenta un arrivo}%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$t.type = arrival$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{la fermata 
\backslash
`e nel gruppo di incompatibili}%
\end_layout

\begin_layout Plain Layout

					Poni $Q = Q 
\backslash
cup i$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

					Poni $prec = arrival$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

				} 
\backslash
Else {%
\end_layout

\begin_layout Plain Layout

					
\backslash
If{$prec = arrival 
\backslash
, 
\backslash
wedge 
\backslash
, |Q| > 1$}{%
\end_layout

\begin_layout Plain Layout

						Poni $
\backslash
mathcal{Q}_{k} = 
\backslash
mathcal{Q}_{k} 
\backslash
cup Q$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					}
\end_layout

\begin_layout Plain Layout

					Poni $Q = Q 
\backslash
setminus i$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					Poni $prec = departure$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				} %
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
mathcal{Q}_{k}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Insiemi di fermate incompatibili relative alle piattaforme}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{cliques_incompatibili_per_colore}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
In funzione obiettivo si considerano i colori (piattaforme) utilizzati,
 modellati da una variabile binaria
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u_{k}=\begin{cases}
1 & \text{se e solo se la piattaforma \ensuremath{k}}\text{ è assegnata ad almeno una sosta }\\
0 & \text{altrimenti}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
Per legare la variabile 
\begin_inset Formula $u_{k}$
\end_inset

 agli assegnamenti 
\begin_inset Formula $x_{ik}$
\end_inset

 occorre aggiungere le disuguaglianze
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u_{k}\geq x_{ik}\qquad\forall k\in C,\forall i\in L^{-1}(k)
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
I vincoli sopra esposti permettono di definire il domino delle 
\begin_inset Formula $u_{k}$
\end_inset

 come variabili continue, 
\begin_inset Formula $0\leq u_{k}\leq1\,\forall k\in C$
\end_inset

, e esse continueranno ad assumere valori nell'insieme 
\begin_inset Formula ${0,1}^{|C|}$
\end_inset

.
 Per ridurre il numero di disequazioni è possibile considerare tutti i vincoli
 che coinvolgono una stessa piattaforma 
\begin_inset Formula $k$
\end_inset

 giungendo a
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
|L^{-1}(k)|u_{k}\geq\sum_{i\in L^{-1}(k)}\, x_{ik}\qquad\forall k\in C
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Note Note
status open

\begin_layout Plain Layout
\noindent
I vincoli sono meno stringenti ma si presentano in numero minore.
 Prove sperimentali hanno mostrato che la risoluzione del modello con meno
 vincoli migliora i tempi di calcolo.
 
\end_layout

\end_inset

Il modello per la risoluzione del problema di minimizzazione del numero
 di piattaforme utilizzate è il seguente.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & z^{col}=\sum_{k\in C}c_{k}\, u_{k}\label{eq:min_gates_pesati}\\
\sum_{k\in L(i)}x_{ik}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0}\\
\sum_{i\in\mathcal{Q}}x_{ik}\leq1 &  & \forall k\in C,\,\forall\mathcal{Q}\in\mathcal{Q}_{k}\label{eq:vincolo_compatibilita_bus_0}\\
\sum_{i\in L^{-1}(k)}\, x_{ik}\leq|L^{-1}(k)|\, u_{k} &  & \forall k\in C\label{eq:uk_maggiore_xik}\\
\sum_{k\in C}\, u_{k}\geq s\label{eq:lower_bound_gates}\\
x_{ik}\in\{0,\,1\} &  & \forall i\in V,\,\forall k\in L(i)\label{eq:x_ik_dominio}\\
u_{k}\in\{0,\,1\} &  & \forall k\in C\label{eq:u_ik_dominio}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Il modello proposto impiega la variabile
\begin_inset space ~
\end_inset


\begin_inset Formula $u_{k}$
\end_inset

 che vale 1 se il gate k è occupato da almeno una corsa, altrimenti vale
 0.
 Il vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:vincolo_assegnamento_0"

\end_inset

 impone che ogni fermata sia assegnata ad una piattaforma.
 Il vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:vincolo_compatibilita_bus_0"

\end_inset

 dichiara che le fermate su uno stesso gate devono essere compatibili fra
 loro, ovvero devono occupare il gate in intervalli di tempo che non si
 sovrappongono.
 Le variabili 
\begin_inset Formula $x_{ik}$
\end_inset

 coinvolte in un gruppo di vincoli di questo tipo appartengono ad un insieme
 chiamato Special Order Set di tipo 1 (SOS1).
 La caratteristica degli SOS1 è che al più una di queste variabili può assumere
 un valore strettamente positivo mentre le altre devono essere nulle.
 L'utilizzo di variabili di questo tipo in un algoritmo di Branch and Bound
 permette di ridurre lo spazio di ricerca e quindi il tempo di calcolo.
 Le disequazioni espresse dal vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:uk_maggiore_xik"

\end_inset

 forzano la variabile
\begin_inset space ~
\end_inset


\begin_inset Formula $u_{k}$
\end_inset

 al valore 1 se almeno una fermata è assegnata alla piattaforma 
\begin_inset Formula $k$
\end_inset

.
 Il vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lower_bound_gates"

\end_inset

 dichiara che il numero di piattaforme usate sarà maggiore o uguale ad un
 lower bound (che può essere calcolato in tempo polinomiale con l'alg.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "bp_lb"

\end_inset

).
 Il lower bound permette di certificare l'ottimalità della soluzione e riduce
 pertanto il numero di stati che devono essere esplorati dall'algoritmo
 di risoluzione del modello matematico.
 I domini delle variabili 
\begin_inset Formula $x_{ik}$
\end_inset

 e 
\begin_inset Formula $u_{k}$
\end_inset

 sono dichiarati di vincoli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_ik_dominio"

\end_inset

 e
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:u_ik_dominio"

\end_inset

.
\end_layout

\begin_layout Standard
Il modello può essere reso ancora più compatto eliminando i vincoli 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:uk_maggiore_xik"

\end_inset

 e legando la variabile 
\begin_inset Formula $u_{k}$
\end_inset

 alle variabili 
\begin_inset Formula $x_{ik}$
\end_inset

 nelle disequazioni 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & z^{col}=\sum_{k\in C}c_{k}\, u_{k}\label{eq:min_gates_pesati-2}\\
\sum_{k\in L(i)}x_{ik}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0-2}\\
\sum_{i\in\mathcal{Q}}x_{ik}\leq u_{k} &  & \forall k\in C,\,\forall\mathcal{Q}\in\mathcal{Q}_{k}\label{eq:vincolo_compatibilita_bus_0-2}\\
\sum_{k\in C}\, u_{k}\geq s\label{eq:lower_bound_gates-1}\\
x_{ik}\in\{0,\,1\} &  & \forall i\in V,\,\forall k\in L(i)\label{eq:x_ik_dominio-2}\\
u_{k}\in\{0,\,1\} &  & \forall k\in C\label{eq:u_ik_dominio-2}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Per minimizzare il numero di piattaforme è sufficiente assegnare ai parametri
 
\begin_inset Formula $c_{k}$
\end_inset

 il valore 1, mentre se si hanno preferenze sulla scelta delle piattaforme
 da utilizzare occorre 
\begin_inset Quotes eld
\end_inset

pesarle
\begin_inset Quotes erd
\end_inset

 assegnando ai parametri 
\begin_inset Formula $c_{k}$
\end_inset

 un valore non negativo.
 La funzione obiettivo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:min_gates_pesati"

\end_inset

 nel primo caso esprime il numero di piattaforme occupate, mentre nel secondo
 caso fornisce un indice del costo di utilizzo delle piattaforme.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pesare i gate permette di ridurre le simmetrie nelle soluzioni.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il modello è stato costruito a partire dal modello di PLI di Kantorovich
 per il Bin Packing, eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:min_gates_pesati"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_assegnamento_0"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:uk_maggiore_xik"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:x_ik_dominio"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:u_ik_dominio"

\end_inset

.
 A tale modello è stato aggiunto un limite inferiore esplicito (eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lower_bound_gates"

\end_inset

) ed il vincolo di compatibilità (eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0"

\end_inset

).
\end_layout

\begin_layout Standard
Le prestazioni di un algoritmo di Branch&Bound per risolvere un tale modello
 si rivelano inefficienti quando il limite inferiore sul numero di piattaforme
 è minore dell'ottimo.
 Se si analizza il caso con le piattaforme compatibili con tutte le fermate
 si nota che per ogni soluzione che impiega 
\begin_inset Formula $m$
\end_inset

 piattaforme esistono 
\begin_inset Formula $m!$
\end_inset

 soluzioni equivalenti ottenute permutando le piattaforme tra loro.
 Essendo, inoltre, il numero di piattaforme disponibili generalmente maggiore
 di quante sufficienti, si crea un'ulteriore generazione di soluzioni equivalent
i ed il metodo del Branch&Bound non migliora di molto le prestazioni dell'enumer
azione completa dovendo esplorare un albero pressoché completo.
\end_layout

\begin_layout Standard
Un modo per eliminare, almeno in parte, le simmetrie del modello è quello
 di preassegnare alcune piattaforme.
 E' infatti possibile chiedere al capostazione di collocare i servizi che
 interferiscono nella cricca massima e risolvere il nuovo problema.
\end_layout

\begin_layout Paragraph
Caso particolare: ogni fermata è assegnabile ad ogni piattaforma e non sono
 presenti altre restrizioni
\end_layout

\begin_layout Standard
In tale caso il problema è risolubile con algoritmi polinomiali, tempo lineare
 
\begin_inset Formula $O(|V|+|E|)$
\end_inset

, per la colorazione dei grafi d'intervallo (vedi 
\begin_inset CommandInset citation
LatexCommand cite
key "golumbic2004algorithmic"

\end_inset

 cap.
 8).
\end_layout

\begin_layout Standard
Un semplice algoritmo greedy, come il First Fist, produce una soluzione
 ottima.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{Un'istanza $I = (V, C)$, dove $v_i=(a_i,
\backslash
 d_i)$ è fermata e $c_i$ piattaforma} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Una soluzione (ottima) per $I$, se $
\backslash
omega(G(V)) 
\backslash
leq |C|$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	Ordina le fermate per tempo di arrivo ($a_1 
\backslash
leq a_2 
\backslash
leq 
\backslash
ldots 
\backslash
leq a_m$)
\backslash
; %
\end_layout

\begin_layout Plain Layout

	Poni $j = 1$ e $w_0 = L$
\backslash
; %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i = 1$ 
\backslash
KwTo $m$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{k è la prima piattaforma libera che può essere occupata da $i$}%
\end_layout

\begin_layout Plain Layout

		Poni $k = 
\backslash
min(
\backslash
{h 
\backslash
colon 1 
\backslash
leq h 
\backslash
leq j, 
\backslash
, a_i 
\backslash
geq w_h
\backslash
} 
\backslash
cup 
\backslash
{j + 1
\backslash
})$
\backslash
; %
\end_layout

\begin_layout Plain Layout

		
\backslash
If{$k > |C|$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{Non esistono soluzioni ammissibili}%
\end_layout

\begin_layout Plain Layout

			termina
\backslash
;%
\end_layout

\begin_layout Plain Layout

		} 
\backslash
Else { %
\end_layout

\begin_layout Plain Layout

			
\backslash
If{$k = j + 1$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{Usa una nuova piattaforma}%
\end_layout

\begin_layout Plain Layout

				Poni $j = j+1$ e $w_j = 0$
\backslash
;%
\end_layout

\begin_layout Plain Layout

			} 
\backslash
Else { %
\end_layout

\begin_layout Plain Layout

				Poni $j = k$
\backslash
;
\end_layout

\begin_layout Plain Layout

			} %
\end_layout

\begin_layout Plain Layout

			Poni la fermata $i$ nella piattaforma $j$
\backslash
;%
\end_layout

\begin_layout Plain Layout

			Poni $w_j = d_i$
\backslash
; %
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return {gli assegnamenti
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{First Fit per la colorazione dei vertici di un grafo d'intervallo}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{ff-coloring}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In tal caso il grafo che rappresenta la relazione di compatibilità tra fermate
 e piattaforme è un grafo biparto completo 
\begin_inset Formula $K_{|V|,|C|}$
\end_inset

 e tutti i grafi 
\begin_inset Formula $G^{k}$
\end_inset

 sono uguali a 
\begin_inset Formula $G$
\end_inset

.
 Per mostrale le analogie con il modello sopra esposto proponiamo un modello
 matematico usato per la colorazione di un grafo qualsiasi (vedi
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "MendezDiaz2006826"

\end_inset

), che è il seguente
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & \mbox{colours}=\sum_{k\in C}u_{k}\label{eq:min_gates_pesati-1}\\
\sum_{k\,:\,(i,\, k)\in E}x_{ik}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0-1}\\
x_{ik}+x_{jk}\leq u_{k} &  & \forall k\in\left(L(i)\cap L(j)\right),\,\forall(i,\, j)\in\mathcal{E}^{k}\label{eq:vincolo_compatibilita_bus_0-1}\\
\sum_{(i,\, k)\in A}\, x_{ik}\geq u_{k} &  & \forall k\in C\label{eq:uk_maggiore_xik-1}\\
u_{k}\geq u_{k+1} &  & 1\leq k\leq|C|-1\label{eq:symmetry-breaking}\\
x_{ik}\in\{0,\,1\} &  & \forall i\in V,\,\forall k\in L(i)\label{eq:x_ik_dominio-1}\\
u_{k}\in\{0,\,1\} &  & \forall k\in C\label{eq:u_ik_dominio-1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
La variabile binaria 
\begin_inset Formula $x_{ik}$
\end_inset

 indica l'assegnamento del colore 
\begin_inset Formula $k$
\end_inset

 al vertice 
\begin_inset Formula $i$
\end_inset

.
 La variabile binaria 
\begin_inset Formula $u_{k}$
\end_inset

 indica l'uso del colore 
\begin_inset Formula $k$
\end_inset

.
 L'equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_assegnamento_0-1"

\end_inset

 assegna esattamente un colore ad ogni vertice e le disequazioni
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0-1"

\end_inset

 assicurano che a vertici adiacenti siano colorati diversamente.
 Allo scopo di evitare molte soluzioni equivalenti sono introdotte le disequazio
ni
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:uk_maggiore_xik-1"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:symmetry-breaking"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Altri modelli possono essere formulati considerando il solo grafo di compatibili
tà o il suo complemento ma sarebbero comunque necessarie le liste 
\begin_inset Formula $L(i)$
\end_inset

 che ad ogni fermata (vertice del grafo) 
\begin_inset Formula $i$
\end_inset

 associano i colori compatibili (gate) o incompatibili.
 Il problema nel che si ha considerando il solo grafo di compatibilità,
 che è appartiene alla classe dei grafi di comparabilità, è detto Minimum
 Clique Partition Problem o Clique Cover Problem e consiste nel partizionare
 il grafo nel numero minore possibile di clique.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb]%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}%
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{un'istanza $H = (B, G, E)$ di GA}%
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{il grafo di compatibilità delle fermate $C = (B, F)$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	$F = 
\backslash
emptyset$
\backslash
;%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{per ogni gate $k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$k 
\backslash
in G$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{per ogni fermata $i$ che può essere assegnata al gate $k$}%
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$i 
\backslash
in B : (i, k) 
\backslash
in E$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{per ogni fermata $j$ diversa da $i$ che può essere assegnata al gate
 $k$}%
\end_layout

\begin_layout Plain Layout

			
\backslash
ForEach{$j 
\backslash
in B : (j, k) 
\backslash
in E 
\backslash
wedge j > i$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{se gli intervalli di occupazione delle fermate $i$ e $j$ sono disgiunte}%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$[a_i, d_i] 
\backslash
cap [a_j, d_j] = 
\backslash
emptyset$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{calcola il peso dell'arco $(i,j)$ }%
\end_layout

\begin_layout Plain Layout

					$c_{ij} = 
\backslash
max 
\backslash
{a_i - d_j,
\backslash
, a_j - d_i
\backslash
}$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{aggiungi l'arco $(i,j)$ all'insieme $F$}%
\end_layout

\begin_layout Plain Layout

					$F = F 
\backslash
cup 
\backslash
{(i,
\backslash
,j)
\backslash
}$
\backslash
;%
\end_layout

\begin_layout Plain Layout

				}%
\end_layout

\begin_layout Plain Layout

			}%
\end_layout

\begin_layout Plain Layout

		}%
\end_layout

\begin_layout Plain Layout

	}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$C = (B, F)$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Costruzione del grafo di interferenza delle fermate}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:bcg}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Modello di Set Covering
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Dati
\end_layout

\begin_layout Itemize
un grafo d'intervallo 
\begin_inset Formula $G=(V,E)$
\end_inset

,
\end_layout

\begin_layout Itemize
un insieme di colori 
\begin_inset Formula $C$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $|V|$
\end_inset

 liste di compatibilità 
\begin_inset Formula $L(i)$
\end_inset

 e
\end_layout

\begin_layout Itemize
un numero positivo 
\begin_inset Formula $\chi_{r}$
\end_inset


\end_layout

\begin_layout Plain Layout
determinare una partizione 
\begin_inset Formula $\mathcal{P}=\left\{ P_{1},P_{2},\ldots,P_{\chi^{\prime}}\right\} $
\end_inset

 dei vertici 
\begin_inset Formula $V$
\end_inset

 tale che
\end_layout

\begin_layout Itemize
nessuna coppia di vertici adiacenti appartenga ad uno stesso gruppo (colorazione
 propria),
\end_layout

\begin_layout Itemize
ogni parril colore assegnato ad ogni nodo 
\begin_inset Formula $i$
\end_inset

 sia presente nella lista di compatibilità 
\begin_inset Formula $L(i)$
\end_inset

 e
\end_layout

\begin_layout Itemize
il numero di partizioni usate 
\begin_inset Formula $\chi^{\prime}$
\end_inset

 sia minore o uguale a 
\begin_inset Formula $\chi_{r}$
\end_inset

 .
\end_layout

\end_inset


\end_layout

\begin_layout Standard
è il seguente
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard

\backslash
min z^{col}=
\backslash
sum_{k
\backslash
in C}c_{k}
\backslash
, u_{k} 
\backslash
sum_{k
\backslash
in L(i)}x_{ik}=1 
\backslash
forall i
\backslash
in V 
\backslash
sum_{i
\backslash
in
\backslash
mathcal{Q}}x_{ik}
\backslash
leq1 
\backslash
forall k
\backslash
in C,
\backslash
,
\backslash
forall
\backslash
mathcal{Q}
\backslash
in
\backslash
mathcal{Q}_{k} 
\backslash
sum_{i
\backslash
in L^{-1}(k)}
\backslash
, x_{ik}
\backslash
leq|L^{-1}(k)|
\backslash
, u_{k} 
\backslash
forall k
\backslash
in C 
\backslash
sum_{k
\backslash
in C}
\backslash
, u_{k}
\backslash
geq s x_{ik}
\backslash
in
\backslash
{0,
\backslash
,1
\backslash
} 
\backslash
forall i
\backslash
in V,
\backslash
,
\backslash
forall k
\backslash
in L(i) u_{k}
\backslash
in
\backslash
{0,
\backslash
,1
\backslash
} 
\backslash
forall k
\backslash
in C 
\end_layout

\begin_layout Subsection
Colorazione con Programmazione per Vincoli
\end_layout

\begin_layout Standard
La Programmazione per Vincoli (Constraint Programming) è un paradigma di
 programmazione per risolvere problemi combinatorici espressi con un linguaggio
 di modellazione (descrittivo) espressivo mediante efficienti implementazioni
 di algoritmi di risoluzione.
\end_layout

\begin_layout Standard
Un'introduzione alla programmazione per vincoli è (citare P.
 Stuckey, il libro) I due concetti fondamentali della programmazione per
 vicoli sono la propagazione dei vincoli e la ricerca costruttiva.
 La propagazione dei vincoli è un efficiente sistema che ha lo scopo di
 ridurre il dominio delle variabili del problema sfruttando la semantica
 dei vincoli del problema.
 Il motore inferenziale è implementato attraverso algoritmi di filtraggio
 che 
\begin_inset Quotes eld
\end_inset

filtrano
\begin_inset Quotes erd
\end_inset

 valori dal dominio di ogni variabile.
 Quando la propagazione dei vincoli non riesce a rimuovere ulteriori valori
 dal dominio delle variabili, incomincia la fase di ricerca costruttiva.
 La ricerca costruttiva esplora l'albero di ricerca restringendo il dominio
 di una variabile alla volta.
 In sostanza, si esegue una ricerca nello spazio di soluzioni parziali.
 La forma più semplice di ricerca costruttiva consiste nel selezionare una
 variabile non assegnata, ossia a cui non sia ancora assegnato un valore
 fra quelli del suo dominio, e procedere ad assegnarle uno dei valori disponibil
i.
 Questo modo di procedere nell'esplorazione dell'albero di ricerca è detto
 etichettatura.
 Iterando la propagazione dei vincoli e l'etchettatura, il risolutore dello
 strumento di programmmazione per vincoli calcola la soluzione, o le soluzioni,
 di un problema or dimostra che l'insieme delle soluzioni è vuoto.
 La letteratura recente propone molti approcci che combinano le tenciche
 classiche della ricerca operativa con quelle della programmazione per vincoli.
\end_layout

\begin_layout Standard
I modelli di programmazione per vincoli del problema di colorazione propria
 di grafi si basano sul vincolo 
\emph on
alldifferent
\emph default
, introdotto da Regin (1994) (citazione.....).
 Questo vincolo impone che un insieme di variabili intere assumano valori
 differenti tra loro e appartenenti ad uno stesso domino.
 Punto di forsa del vincolo 
\emph on
alldifferent
\emph default
 è l'efficiente algoritmo di propagazione che è capace di ridurre il dominio
 di ogni variabile utilizzando i risultati della teoria dell'accoppiamento
 su grafi bipartiti.
 Dato un grafo 
\begin_inset Formula $G=(V,E)$
\end_inset

, siano 
\begin_inset Formula $\underbar{\chi}$
\end_inset

 e 
\begin_inset Formula $\bar{\chi}$
\end_inset

 una limitazione superiore ed inferiore sul numero.
 Sia 
\begin_inset Formula $K=\left\{ 1,2,\ldots,\bar{\chi}\right\} $
\end_inset

 l'insieme dei colori disponibili, assumendo che i numeri naturali rappresentino
 i colori (e quindi le piattaforme), e sia 
\begin_inset Formula $x_{i}\in K$
\end_inset

 per 
\begin_inset Formula $i\in V$
\end_inset

 il dominio intero e finito per le variabili del problema, dove  il valore
 assegnato ad 
\begin_inset Formula $x_{i}$
\end_inset

 il colore assegnato al vertice 
\begin_inset Formula $i$
\end_inset

-esimo .
 Sia 
\begin_inset Formula $x_{0}$
\end_inset

 il dominio finito di interi che modella il numero totale di colori usati,
 ossia nella soluzione ottima 
\begin_inset Formula $x_{0}=\chi(G)$
\end_inset

.
 Sia inoltre 
\begin_inset Formula $\overline{x_{0}}$
\end_inset

 la migliore limitazione superiore nota per problema, eventualmente determinata
 inizialmente con un'euristica costruttiva e poi eventualmente aggiornata
 dall'algoritmo di risoluzione.
 Il modello di programmazione per vincoli è il seguente:
\end_layout

\begin_layout Subsection
Massimizzazione della distanza minima fra arrivi e partenza sullo stesso
 gate
\end_layout

\begin_layout Standard
La formulazione precedente non considera una distanza temporale minima che
 deve intercorrere fra due fermate su uno stesso gate.
 Tale distanza minima, se piccola, potrebbe causare un effetto di propagazione
 a catena dei ritardi delle fermate assegnate allo stesso gate e potrebbe
 richiedere una rischedulazione che coinvolge varie corse.
 La formulazione proposta in questo sottoparagrafo considera l'intervallo
 temporale più piccolo che intercorre fra due fermate sullo stesso gate.
 Il modello del paragrafo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Massimizzazione-delle-distanze"

\end_inset

 viene modificato introducendo una variabile, indicata con 
\begin_inset Formula $m$
\end_inset

, che rappresenta la distanza temporale minima fra due fermate sullo stesso
 gate.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\max\, z^{dm}=m\label{eq:max_m}\\
\sum_{k\,:\,(i,\, k)\in E}x_{ik}=1 &  & \forall i\in B\label{eq:sosta_assegnata}\\
\sum_{i\in\mathcal{Q}_{\overline{F}_{k}}:|\mathcal{Q}_{\overline{F}_{k}}|\geq2}x_{ik}\leq1 &  & \forall k\in G\label{eq:incomp_bp}\\
x_{ik}+x_{jk}-y_{ij}\leq1 &  & \forall(i,\, j)\in F\,\forall k:(i,k),(j,k)\in E\label{eq:fine_linearizzazione}\\
m+M\, y_{ij}-c_{ij}\, y_{ij}\leq M &  & \forall(i,\, j)\in F\label{eq:m_minimo}\\
x_{ik}\in\{0,\,1\} &  & \forall(i,\, k)\in E\label{eq:dom_xik}\\
0\leq y_{ij}\leq1 &  & \forall(i,\, j)\in F\label{eq:lim_yij}\\
m\geq0\label{eq:m}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
I vincoli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sosta_assegnata"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fine_linearizzazione"

\end_inset

 sono gli stessi di quelli adoperati nel modello proposto nel paragrafo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Massimizzazione-delle-distanze"

\end_inset

 così come i domini e i limiti espressi in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:dom_xik"

\end_inset

 e
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lim_yij"

\end_inset

.
 Le differenze rispetto al modello per la massimizzazione della somme delle
 distanze fra fermate sono nell'aggiunta della variabile continua e non
 negativa 
\begin_inset Formula $m$
\end_inset

 (eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m"

\end_inset

) che è minore di ogni distanza temporale 
\begin_inset Formula $c_{ij}$
\end_inset

 fra la la distanza di due fermate su uno stesso gate.
 L'eq.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m_minimo"

\end_inset

 fa uso di una costante 
\begin_inset Formula $M$
\end_inset

 che fa si che la 
\begin_inset Formula $m$
\end_inset

 non sia vincolata quando i bus 
\begin_inset Formula $i$
\end_inset

 e 
\begin_inset Formula $j$
\end_inset

 partono da gate diversi.
 Il valore da assegnare a tale costante deve essere maggiore del tempo massimo
 che intercorre fra due fermate che possono occupare uno stesso gate.
 La funzione obiettivo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:max_m"

\end_inset

 assicura che 
\begin_inset Formula $m$
\end_inset

 assuma il valore dell'intervallo minimo di tempo fra due fermate su uno
 stesso gate.
\end_layout

\begin_layout Subsection
Minimizzazione della probabilità di conflitto degli assegnamenti fermate-gate
\end_layout

\begin_layout Standard
Il GAP può essere modellato anche come problema di minimizzazione della
 probabilità che fermate assegnate allo stesso gate possano essere 
\begin_inset Quotes eld
\end_inset

in conflitto
\begin_inset Quotes erd
\end_inset

.
 Siano 
\begin_inset Formula $D=\max_{F}c_{ij}$
\end_inset

 e 
\begin_inset Formula $d=\min_{F}c_{ij}$
\end_inset

.
 La probabilità di conflitto 
\begin_inset Formula $p_{ij}$
\end_inset

 fra due fermate 
\begin_inset Formula $i$
\end_inset

 e 
\begin_inset Formula $j$
\end_inset

 che possono occupare uno stesso gate si può definire come
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p_{ij}=\frac{D-c_{ij}}{D-d}
\]

\end_inset


\end_layout

\begin_layout Standard
La quantità 
\begin_inset Formula $p_{ij}$
\end_inset

 è un numero compreso fra zero, quando la distanza temporale fra due fermate
 che possono essere assegnate allo stesso gate è massima, e uno quando tale
 intervallo è minimo.
 Una misura del conflitto del piano di assegnamento è data da
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
z^{p}=\frac{1}{|F|}\sum_{(i,j)\in F}p_{ij}y_{ij}=\frac{1}{|F|\,(D-d)}\sum_{(i,j)\in F}(D-c_{ij})\, y_{ij}
\]

\end_inset


\end_layout

\begin_layout Standard
Il modello matematico del problema diventa quindi:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min\, z^{p}=\frac{1}{|F|\,(D-d)}\sum_{(i,j)\in F}(D-c_{ij})\,\sum_{k\in G}y_{ij}\label{eq:min_conflitto}\\
\sum_{k\,:\,(i,\, k)\in E}x_{ik}=1 &  & \forall i\in B\label{eq:inizio_vincoli_4}\\
\sum_{i\in\mathcal{Q}_{\overline{F}_{k}}:|\mathcal{Q}_{\overline{F}_{k}}|\geq2}x_{ik}\leq1 &  & \forall k\in G\\
\sum_{k:(i,k)\in E\,\wedge(j,k)\in E}x_{ik}-y_{ij}\geq0 &  & \forall(i,\, j)\in F\\
\sum_{k:(i,k)\in E\,\wedge(j,k)\in E}x_{jk}-y_{ij}\geq0 &  & \forall(i,\, j)\in F\\
\sum_{k:(i,k)\in E\,\wedge(j,k)\in E}x_{ik}+x_{jk}-y_{ij}\leq1 &  & \forall(i,\, j)\in F\\
x_{ik}\in\{0,\,1\} &  & \forall(i,\, k)\in E\\
0\leq y_{ij}\leq1 &  & \forall(i,\, j)\in F\label{eq:fine_vincoli_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
La funzione obiettivo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:min_conflitto"

\end_inset

 rappresenta una misura, compresa tra zero ed uno, di quanto l'assegnamento
 è robusto rispetto alle variazioni dell'input.
 I vincoli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:inizio_vincoli_4"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fine_vincoli_4"

\end_inset

 sono analoghi a quelli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:vincolo_assegnamento"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:limiti_y"

\end_inset

.
\end_layout

\begin_layout Subsection
Corse bis assegnate a gate adiacenti
\end_layout

\begin_layout Standard
Per consentire agli utenti di un servizio di salire a bordo di un veicolo
 che effettua una corsa 
\begin_inset Quotes eld
\end_inset

bis
\begin_inset Quotes erd
\end_inset

 senza doversi spostare da una parte all'altra dell'autostazione è desiderabile
 che le fermate delle corse bis siano assegnate a gate adiacenti.
 Questo requisito può essere modellato con il seguente insieme di vincoli.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
x_{ik}\geq x_{j\, k-1} &  & k=\min_{k}\{k-1,\, k\in G\},\, j\in BIS(i)\label{eq:bis_primo_gate}\\
x_{ik}\geq x_{i\, k-1}+x_{j\, k+1} &  & \forall k\in G,\, j\in BIS(i)\label{eq:bis_gate_in_mezzo}\\
x_{ik}\geq x_{j\, k+1} &  & k=\max_{k}\{k+1,\, k\in G\},\, j\in BIS(i)\label{eq:bis_ultimo_gate}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Il modello presuppone che i gate adiacenti abbiano indici adiacenti.
 
\end_layout

\begin_layout Standard
Si fa notare che altre tipologie di vincolo come l'assegnamento delle corse
 coperte da mezzi snodati sono gestite in modo implicito nella generazione
 degli archi 
\begin_inset Formula $E$
\end_inset

.
 Gli stessi archi gestiscono il concetto di gate disabilitato in un intervallo
 temporale.
\end_layout

\begin_layout Subsection
Esclusione degli assegnamenti
\end_layout

\begin_layout Standard
I modelli matematici presentati possono essere estesi per considerare i
 criteri di esclusione di assegnamenti fermata-gate ammissibili.
 Per penalizzare l'assegnamento indesiderato di una fermata su un gate si
 può aggiungere al modello una penalità (un vincolo 
\begin_inset Quotes eld
\end_inset

soft
\begin_inset Quotes erd
\end_inset

) in funzione obiettivo, che ha i termini:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{cases}
-\sum_{(i,k)\in E}p_{ik}x_{ik} & \text{{se\,\ il\,\ problema\,è\,\ di\,\ massimo}}\\
+\sum_{(i,k)\in E}p_{ik}x_{ik} & \text{{se\,\ il\,\ problema\,è\,\ di\,\ minimo}}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Se 
\begin_inset Formula $p_{ik}$
\end_inset

 è nullo esso non influisce sull'assegnamento, mentre un valore positivo
 grande permette di escludere l'assegnamento della fermata 
\begin_inset Formula $i$
\end_inset

 al gate 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Chapter
Algoritmi sviluppati
\begin_inset CommandInset label
LatexCommand label
name "sec:Algoritmi-modello"

\end_inset


\end_layout

\begin_layout Section
Algoritmo di pianificazione statica
\end_layout

\begin_layout Standard
I modelli matematici proposti nel paragrafo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Formulazione-del-problema"

\end_inset

 possono essere risolti mediante librerie software di ottimizzazione in
 grado di risolvere di problemi di programmazione lineare mista.
 Tra le librerie sono state provate IBM ILOG CPLEX
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "cplex2008usm"

\end_inset

, GNU Linear Programming Toolkit
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "glpk09website"

\end_inset

 e LP_Solve
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "lpsolve09website"

\end_inset

.
 L'impiego di uno di questi risolutori è da valutare in base alle dimensioni
 del problema, alle performance attese e al budget per l'acquisto della
 licenza dei risolutori commerciali.
 Il programma realizzato per la soluzione del GAP statico impiega la libreria
 COIN-OR Open Solver Interface
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "coinor-osi-website"

\end_inset

 che permette di utilizzare uno dei risolutori citati senza dover modificare
 e ricompilare il codice sorgente.
\end_layout

\begin_layout Standard
Tutti i modelli proposti hanno sono definiti sui grafi 
\begin_inset Formula $C=(B,\, F)$
\end_inset

 ed 
\begin_inset Formula $H=(B,\, G,\, H)$
\end_inset

.
 Il grafo 
\begin_inset Formula $H=(B,\, G,\, H)$
\end_inset

 si costruisce direttamente dai dati in input.
 E' quindi possibile costruire il grafo di compatibilità fra fermate mediante
 l'algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg:bcg"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb]%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}%
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{un'istanza $H = (B, G, E)$ di GA}%
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{il grafo di compatibilità delle fermate $C = (B, F)$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	$F = 
\backslash
emptyset$
\backslash
;%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{per ogni gate $k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$k 
\backslash
in G$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{per ogni fermata $i$ che può essere assegnata al gate $k$}%
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$i 
\backslash
in B : (i, k) 
\backslash
in E$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{per ogni fermata $j$ diversa da $i$ che può essere assegnata al gate
 $k$}%
\end_layout

\begin_layout Plain Layout

			
\backslash
ForEach{$j 
\backslash
in B : (j, k) 
\backslash
in E 
\backslash
wedge j > i$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{se gli intervalli di occupazione delle fermate $i$ e $j$ sono disgiunte}%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$[a_i, d_i] 
\backslash
cap [a_j, d_j] = 
\backslash
emptyset$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{calcola il peso dell'arco $(i,j)$ }%
\end_layout

\begin_layout Plain Layout

					$c_{ij} = 
\backslash
max 
\backslash
{a_i - d_j,
\backslash
, a_j - d_i
\backslash
}$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{aggiungi l'arco $(i,j)$ all'insieme $F$}%
\end_layout

\begin_layout Plain Layout

					$F = F 
\backslash
cup 
\backslash
{(i,
\backslash
,j)
\backslash
}$
\backslash
;%
\end_layout

\begin_layout Plain Layout

				}%
\end_layout

\begin_layout Plain Layout

			}%
\end_layout

\begin_layout Plain Layout

		}%
\end_layout

\begin_layout Plain Layout

	}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$C = (B, F)$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Costruzione del grafo di compatibilità delle fermate}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:bcg}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La pianificazione dell'assegnamento per una giornata può essere ottenuta
 risolvendo il modello matematico con i dati dell'intera giornata.
 Purtroppo il tempo di risoluzione aumenta esponenzialmente all'aumentare
 del numero di corse e di gate quindi può risultare più efficiente dividere
 l'intervallo di pianificazione in più fasce orarie all'interno della stessa
 giornata.
\end_layout

\begin_layout Standard
L'istanza reale, contente dati relativi all'autostazione di Bologna, su
 cui sono stati effettuati i primi test computazionali degli algoritmi per
 la soluzione dei modelli proposti presenta in una giornata 229 fermate
 di corse in partenza da assegnare a 24 gate.
 Le prime fermate iniziano ad impegnare un gate alle 5.35 del mattino e l'ultima
 partenza rilascia il gate alle 20.25 su un intervallo temporale esteso per
 14 ore e 45 minuti.
 Considerando intervalli di 30' si ha il carico orario (numero di fermate
 rispetto al tempo) illustrato in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:dom_xik"

\end_inset

.
\end_layout

\begin_layout Standard
Al fine di generare una buona soluzione in tempi ridotti si propone un algoritmo
 euristico.
 L'algoritmo sviluppato sfrutta l'idea di risolvere problemi complessi dividendo
li in problemi più piccoli per poi ricostruire la soluzione completa.
 I problemi più piccoli sono generati partizionando l'orizzonte di pianificazion
e in intervalli di breve durata e quindi con poche fermate.
 Viene inoltre scelto un sottoinsieme di gate sufficiente a soddisfare la
 richiesta di tutte le fermate.
 Per far ciò si risolve il problema di minimizzazione dei gate impiegati
 nell'intero orizzonte di pianificazione utilizzando il modello descritto
 nel paragrafo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Minimizzazione-gate"

\end_inset

.
 Questo problema si risolve in tempi contenuti rispetto agli altri problemi
 descritti nei paragrafi precedenti.
 L'intervallo di pianificazione di una giornata è suddiviso in fasce di
 pianificazione (approccio 
\emph on
multiple time slot
\emph default
) di 30 minuti ed i modelli proposti sono risolti per ogni fascia oraria
 come illustrato in alg.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:time_slice"

\end_inset

.
 La fig.
 mostra graficamente come siano legati fra loro i sottoproblemi, le soluzioni
 e le istanze dei problemi successivi al primo sottoproblema.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\backslash
input{img/iterative_horizon}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Algoritmo iterativo: legami fra istanze e soluzioni
\begin_inset CommandInset label
LatexCommand label
name "fig:Algoritmo-iterativo_legami_ist_sol"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In questo modo si semplifica notevolmente il problema e nel caso considerato
 il numero massimo di fermate presenti nei modelli di ottimizzazione si
 è ridotto da 229 a non più di 24.
 La fascia di punta massima, fra le 13.30 e le 14.00, dell'istanza considerata
 ha infatti 24 fermate.
 La riduzione delle dimensioni del problema permette una risoluzione esatta
 dei modelli matematici anche impiegando librerie gratuite e scaricabili
 dalla rete.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb]%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{To}{to}%
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{un'istanza $H = (B, G, E)$ di GA e una lista di istanti $p_1, 
\backslash
ldots, p_P$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{gli assegnamenti fermate-gate nella giornata da pianificare}%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{per ogni intervallo $[p_{p-1}, p_p]$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$p = 1$ 
\backslash
To $P$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{considera solo le fermate $B_p$ che occuperanno un gate nell'intervallo
 $p$}%
\end_layout

\begin_layout Plain Layout

		$B_p = 
\backslash
{b 
\backslash
in B : d_b 
\backslash
geq p_{p-1} 
\backslash
wedge a_b 
\backslash
leq p_p 
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{considera solo i gate $G_p$ che sono abilitati nell'intervallo $p$}%
\end_layout

\begin_layout Plain Layout

		$G_p = 
\backslash
{g 
\backslash
in G : g$ è abilitato in $[p_{p-1}, p_p]$ e almeno una fermata $b 
\backslash
in B_p$ può essere assegnata a $g 
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{sotto-grafi indotti}
\end_layout

\begin_layout Plain Layout

		genera $C_p = (B_p, F_b)$
\backslash
;
\end_layout

\begin_layout Plain Layout

		genera $H_p = (B_p, G_p, E_p)$
\backslash
;
\end_layout

\begin_layout Plain Layout

		genera il modello matematico del problema
\backslash
;
\end_layout

\begin_layout Plain Layout

		imposta gli upper bound delle $
\backslash
{x_{ik}
\backslash
}$ per forzare gli assegnamenti ottenuti con la precedente iterazione
\backslash
;
\end_layout

\begin_layout Plain Layout

		risolvi il modello
\backslash
;
\end_layout

\begin_layout Plain Layout

		imposta gli assegnamenti ottenuti nella soluzione complessiva
\backslash
;
\end_layout

\begin_layout Plain Layout

	}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return l'insieme di assegnamenti {$
\backslash
{x_{ik} : x_{ik}^* = 1
\backslash
}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Risoluzione iterativa su più intervalli di pianificazione}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:time_slice}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Algoritmo di rischedulazione
\end_layout

\begin_layout Standard
Per poter riassegnare i gate il sistema è necessario disporre in tempo reale
 delle informazioni relative allo stato delle fermate, ovvero degli orari
 effettivi di arrivo e partenza delle corse, e dello stato di occupazione
 dei gate.
\end_layout

\begin_layout Standard
La rischedulazione è necessaria quando si verificano i seguenti casi:
\end_layout

\begin_layout Itemize
creazione di nuove corse non contemplate nella pianificazione;
\end_layout

\begin_layout Itemize
aggiunta di veicoli ad una corsa (corse bis);
\end_layout

\begin_layout Itemize
ritardi o anticipi tali da determinare sovrapposizioni di fermate su uno
 stesso gate;
\end_layout

\begin_layout Standard
I problemi possono essere affrontati impiegando l'algoritmo di pianificazione
 statica con i dati modificati.
 Se il problema richiede la generazione di assegnamenti non considerati
 (nuove corse) al modello matematico vanno aggiungente dinamicamente nuove
 variabili e nuovi vincoli che rappresentano la situazione corrente, altrimenti
 occorre modificare i vincoli di compatibilità.
 Se si usa la tecnica detta 
\begin_inset Quotes eld
\end_inset

warm-start
\begin_inset Quotes erd
\end_inset

 (partenza a caldo) fornendo al risolutore il piano statico (ora inammissibile)
 e si termina alla prima soluzione ammissibile si dovrebbe giungere rapidamente
 ad una soluzione simile a quella data.
 Con partenza 
\begin_inset Quotes eld
\end_inset

a caldo
\begin_inset Quotes erd
\end_inset

 s'intende la procedura che permette di intraprendere il processo di ricerca
 di una soluzione ammissibile a partire da una soluzione fornita.
 Il processo di ricerca non fornisce, però, la garanzia di trovare una soluzione.
\end_layout

\begin_layout Standard
Una tecnica generale che permette di verificare l'esistenza di una soluzione
 ammissibile e, se esiste, di determinarla, è il backtracking.
 Tale tecnica considera tutti i possibili assegnamenti, scegliendo e disfacendo
 gli assegnamenti che non soddisfano i vincoli.
 Consiste nell'esplorazione di strutture ad albero in cui i nodi rappresentano
 delle soluzioni parziali (nodi non terminali) o complete (foglie) e tiene
 traccia di tutti i nodi e tutti i rami (scelta di un assegnamento) visitati
 in precedenza, in modo da poter tornare indietro al più vicino nodo che
 conteneva un cammino ancora inesplorato nel caso che la ricerca nel ramo
 attuale non abbia successo.
\end_layout

\begin_layout Subsubsection*
Conflitto dovuto a modifica dell'intervallo di fermata
\end_layout

\begin_layout Standard
Quando due fermate si trovano ad essere in conflitto perché gli intervalli
 di occupazione del gate si sovrappongono si può effettuare un riassegnamento
 con l'obiettivo di spostare la fermata su un gate che sia il più vicino
 possibile.
 Per far ciò è necessario stimare il tempo di occupazione del gate da parte
 delle nuove fermate e trovare il gate più vicino che sia libero in uno
 dei due intervalli, quindi si può assegnare la fermata dell'intervallo
 prescelto al gate individuato.
\end_layout

\begin_layout Standard
Se non è possibile individuare un gate libero negli intervalli di occupazione
 stimati occorre effettuare almeno due cambiamenti negli assegnamenti prodotti
 nella pianificazione statica.
 Un obiettivo perseguibile è quello di introdurre il minor numero di cambiamenti
 rispetto al piano.
 Per far ciò devono essere ricalcolate le compatibilità fra le fermate e
 si deve procedere a ritroso nella ricerca con l'algoritmo di backtracking.
 Occorre disfare iterativamente una delle scelte di assegnamento della pianifica
zione statica e tentare di costruire una soluzione ammissibile a partire
 dagli assegnamenti parziali.
 Se non si può generare una soluzione ammissibile a partire dagli assegnamenti
 dati si sale di un livello e disfacendo un assegnamento.
\end_layout

\begin_layout Subsubsection*
Creazione di nuovi servizi
\end_layout

\begin_layout Standard
Sono nuovi servizi le corse non contemplate nella pianificazione statica.
 Le nuove fermate possono essere assegnate immediatamente ai gate disponibili,
 stimando il tempo di occupazione dei gate da parte delle nuove fermate.
 Qualora non sia possibile assegnare le nuove fermate si deve procedere
 alla costruzione di nuove soluzioni con la tecnica del backtracking partendo
 dalla soluzione della pianificazione statica e modificando opportunamente
 il modello per tener conto delle nuove variabili (possibili assegnamenti)
 e dei nuovi vincoli di compatibilità.
 E' possibile impiegare il metodo per la pianificazione statica generando
 il nuovo modello e partendo nella ricerca di una nuova soluzione da quella
 del piano statico in cui le nuove corse non sono assegnate.
\end_layout

\begin_layout Subsubsection*
Creazione di corse bis
\end_layout

\begin_layout Standard
Le corse bis sono nuove corse che vanno trattate con l'accorgimento di essere
 posizionate su gate adiacenti o, se ciò non è possibile, su gate prossimi
 a quello della corsa padre.
\end_layout

\begin_layout Chapter
Risultati computazionali
\begin_inset CommandInset label
LatexCommand label
name "chap:Risultati-computazionali"

\end_inset


\end_layout

\begin_layout Section
Il caso di studio
\end_layout

\begin_layout Standard
Le prove numeriche sono state effettuate estraendo un'istanza significativa
 dalle operazioni effettuate nell'Autostazione di Bologna.
 L'autostazione dispone di 24 piattaforme per le partenze, di cui 4 normalmente
 riservate ai servizi internazionali e gli altri 20 per i servizi di linea
 o come parcheggi temporanei.
 Le piattaforme riservate a servizi particolari vengono gestite manualmente
 e non entrano nella fase di pianificazione.
 L'istanza del problema considera i dati relative alle corse schedulate
 di un giorno tipo, ossia considera le corse schedulate in un certo periodo
 e che hanno validità su più giorni dell'anno.
\end_layout

\begin_layout Standard
Ad ogni corsa, che ha un ora di partenza 
\begin_inset Formula $t_{d}$
\end_inset

, vengono associati altri due tempi: il tempo di anticipo rispetto all'ora
 di partenza 
\begin_inset Formula $t_{1}$
\end_inset

 e il tempo di ritardo rispetto all'ora di partenza 
\begin_inset Formula $t_{2}$
\end_inset

.
 Siano 
\begin_inset Formula $a=t_{p}-t_{1}$
\end_inset

 e 
\begin_inset Formula $d=t_{p}+t_{2}$
\end_inset

.
 L'algortimo di pianificazione impiegato nell'Autostazione considera occupata
 della piattaforma per tutto l'intervallo 
\begin_inset Formula $[a,d]$
\end_inset

, come rappresentato in fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tempo-di-occupazione"

\end_inset

.
\end_layout

\begin_layout Standard
L'istanza in considerazione include 229 corse non internazionali da pianificare,
 distinte in provinciali e regionali, che non includono né corse bis (da
 assegnare a piattaforme adiacenti) né corse servite da veicoli snodati
 (che sono servite solo da alcune piattaforme).
 Inoltre una piattaforma è stata considerata non disponibile.
 I tempi 
\begin_inset Formula $t_{1}$
\end_inset

 e 
\begin_inset Formula $t_{2}$
\end_inset

 non sono costanti ma variano al variare dell'ora di partenza della corsa
 alla quale si riferiscono.
 La tab.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Parametri-t_1-e-t_2"

\end_inset

 mostra come siano stati impostati i tempi che determinano, in fase di pianifica
zione, l'intervallo di occupazione di una piattaforma.
 I tempi sono stati scelti dagli operatori che hanno considerato i parametri
 nelle ore di punta del mattino, del pomeriggio e della sera e per le fasce
 di morbida del mattino, del pomeriggio e della sera.
 L'ultima riga si riferisce ai tempi per le fasce di morbida, non elencate
 esplicitamente.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dalle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fascia oraria
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
08.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Punta Mattina
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dura
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pomeridiana
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Morbida
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Parametri 
\begin_inset Formula $t_{1}$
\end_inset

e 
\begin_inset Formula $t_{2}$
\end_inset

 al variare della fascia oraria
\begin_inset CommandInset label
LatexCommand label
name "tab:Parametri-t_1-e-t_2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La frequenza dei servizi, divisa per fasce orarie, è rappresentatain fig.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Frequenza-delle-fermate"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\backslash
input{img/diagramma_carico}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Frequenza delle fermate per fasce orarie di 30'
\begin_inset CommandInset label
LatexCommand label
name "fig:Frequenza-delle-fermate"

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:carico"

\end_inset


\end_layout

\end_inset

La soluzione ottenuta dalla pianificazione
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/actual_solution_m.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Soluzione 
\begin_inset Quotes eld
\end_inset

legacy
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una soluzione con il minimo numero di piattaforme che rispetta gli stessi
 vincoli.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_MathModelColoring.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Soluzione min num piattaforme con PLI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una soluzione con il minimo numero di piattaforme che rispetta gli stessi
 vincoli.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_IterativeTimeHorizonMathMD.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Soluzione min num piattaforme con PLI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Una soluzione con il minimo numero di piattaforme che rispetta gli stessi
 vincoli.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_IterativeTimeHorizonMath.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Soluzione min num piattaforme con PLI
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Max min tempo
\end_layout

\begin_layout Chapter
Conclusioni e sviluppi futuri
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusioni-e-sviluppi"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
backmatter{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "IEEEabrv,bib/gate_assignment"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
