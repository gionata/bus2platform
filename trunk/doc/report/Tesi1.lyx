#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass univpmphdthesis
\begin_preamble
%%%
%\usepackage[ruled,vlined,lined,boxed,linesnumbered,algochapter]{algorithm2e}
\usepackage[lined,boxed,commentsnumbered,algochapter]{algorithm2e}
\renewcommand{\listalgorithmcfname}{Elenco degli algoritmi}%
\renewcommand{\algorithmcfname}{Algoritmo}%
\renewcommand{\algocf@typo}{}%
\renewcommand{\@algocf@procname}{Procedura}
\renewcommand{\@algocf@funcname}{Funzione}
%%%
\usepackage[x11names, rgb]{xcolor}
\usepackage{tikz}
\usetikzlibrary{snakes,arrows,shapes}
\usepackage{pgfplots}
%\pgfplotsset{compat=1.5.1}
\newcommand*\circled[1]{\tikz[baseline=(char.base)]{%
            \node[shape=circle,draw,inner sep=2pt] (char) {#1};}}

\usepackage{ifpdf}
\end_preamble
\options lof,lot,a4print
\use_default_options true
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\pdf_author "Gionata Massi <g.massi@univpm.it>"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout PhD School
Scuola di Dottorato di Ricerca in Scienze dell'Ingegneria
\end_layout

\begin_layout PhD Faculty
Facoltà di Ingegneria
\end_layout

\begin_layout PhD Curriculum
Curriculum in Ingegneria Informatica, Gestionale e dell'Automazione
\end_layout

\begin_layout PhD Title
Allocazione dinamica e pianificazione delle risorse nella gestione di una
 autostazione
\end_layout

\begin_layout PhD Author
Gionata Massi
\end_layout

\begin_layout PhD Advisor
Prof.
\begin_inset space ~
\end_inset

Ferdinando Pezzella
\end_layout

\begin_layout PhD CurriculumAdvisor
Prof.
\begin_inset space ~
\end_inset

Sauro Longhi
\end_layout

\begin_layout PhD Cycle
10
\end_layout

\begin_layout PhD Location
Ancona
\end_layout

\begin_layout PhD Time
Gennaio 2012
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Desidero ringraziare il Prof.
 Ferdinando Pezzella per la disponibilità, la fiducia e la pazienza, per
 il suo valido supporto umano e professionale e per le opportunità che mi
 ha offerto in questi anni.
 I suoi insegnamenti mi hanno introdotto nell'affascinate mondo della Ricerca
 Operativa, trasmettendomi curiosità e passione per questa disciplina.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Una particolare gratitudine alla Pluservice S.r.l.
 per aver reso possibile questo dottorato e specialmente agli Ing.
 Monica Giannini e Guido Di Pasquale per le informazioni che mi hanno messo
 a disposizione.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Ringrazio il Professor Fabrizio Marinelli per avermi fatto capire l’importanza
 del rigore metodologico.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Un sentito grazie al Prof.
 Luigi De Giovanni per la sua professionalità e il suo esempio di dedizione
 al lavoro.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie a Gianluca, per l’amicizia, il sostegno, la pazienza e per i tanti
 momenti trascorsi insieme.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Ringrazio Ludovico, compagno di corso, di progetti e di dottorato.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie a Simone, con cui ho condiviso alcune passioni comuni: viaggi, informatic
a, enogastronomia e fantastici bagni al mare.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie ai ex-tesisti, nonché amici, Angelo e Marco che in questi anni mi
 hanno fatto compagnia in laboratorio.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Grazie agli amici sempre più internazionali della “Tana del Bianconiglio”
 per le chiacchierate e le serate passate insieme.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
La mia riconoscenza va soprattutto ai miei genitori e a nonna Dina per essermi
 stati vicini, per aver sempre creduto in me e per il dono dei loro saggi
 consigli nonchè dell'affetto incondizionato.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Un ringraziamento speciale a Lucilla che mi è stata accanto, con dolcezza
 e pazienza, quando ne avevo più bisogno e, con il suo affetto e la sua
 allegria, mi ha aiutato in molte situazioni.
\end_layout

\begin_layout PhD Thesis Acknowledge
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout PhD Thesis Acknowledge
Un ricordo, con l’affetto che ci ha sempre legati, all'amico Vittorio, con
 la sua du botte e quel sorriso indimenticabile.
\end_layout

\begin_layout PhD Thesis Abstract
Uno dei maggiori problemi che si presenta nella gestione operativa di un’autosta
zione è l’assegnamento dei bus alle piattaforme disponibili.
 Tale problema è noto in letteratura come Gate Assignment Problem e consiste
 nel determinare il miglior assegnamento ammissibile dei bus alle piattaforme
 basato su certi criteri di preferenza, nota la tabella oraria giornaliera
 dei bus.
 Affinché una soluzione sia ammissibile devono essere soddisfatti almeno
 due vincoli: ogni bus deve essere assegnato a una e una sola piattaforma
 e due bus i cui intervalli temporali di occupazione della piattaforma si
 sovrappongono non possono essere assegnati alla stessa piattaforma.
\end_layout

\begin_layout PhD Thesis Abstract
Problemi simili all'assegnamento delle piattaforme nelle autostazioni nascono
 nella gestione di aeroporti, stazioni ferroviarie, porti, interporti e
 così via.
 Ci sono anche forti somiglianze con il problema dell'assegnamento dei registri
 nei processori di segnale digitale (DSP).
 Nel caso dell'autostazione il gestore può richiedere che gli assegnamenti
 bus-piattaforme siano tali da occupare il minor numero di piattaforme nell'oriz
zonte di pianificazione.
 Per questo problema si propone una formulazione innovativa come problema
 di restricted-coloring di un grafo d’intervallo e un modello di programmazione
 lineare intera per la sua risoluzione.
\end_layout

\begin_layout PhD Thesis Abstract
Situazioni di mancato rispetto della tabella oraria, quali arrivi in anticipo
 o ritardo e partenze in ritardo, sono piuttosto frequenti nella gestione
 quotidiana di un’autostazione e spesso fanno sì che non sia possibile assegnare
 i bus coinvolti alla piattaforma prevista.
 Per questo motivo si è considerato un modello di programmazione matematica
 per aumentare la robustezza delle soluzioni minimizzando la probabilità
 che i bus assegnati alla stessa piattaforma siano “in conflitto”.
\end_layout

\begin_layout PhD Thesis Abstract
Per finire, allo scopo di generare una buona soluzione in un tempo di calcolo
 ragionevole, si propone anche un algoritmo euristico basato sull'idea di
 risolvere il problema mediante una suddivisione in sottoproblemi più piccoli
 utilizzando un controllo a orizzonte recessivo, e una successiva ricostruzione
 della soluzione completa.
\end_layout

\begin_layout PhD Thesis Abstract
Sono stati svolti esperimenti computazionali su una autostazione esistente
 con 24 piattaforme e più di duecento corse che hanno dimostrato l’efficacia
 dell'approccio.
\end_layout

\begin_layout PhD TOC
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
cleardoublepage
\end_layout

\begin_layout Plain Layout


\backslash
ifpdf
\backslash
pdfbookmark{Elenco degli algoritmi}{Elenco degli algoritmi}
\backslash
fi
\end_layout

\begin_layout Plain Layout


\backslash
listofalgorithms{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Introduzione
\begin_inset CommandInset label
LatexCommand label
name "chap:Introduzione"

\end_inset


\end_layout

\begin_layout Standard
Scopo di questa tesi è lo studio di un problema che si presenta nella gestione
 delle autostazioni.
\end_layout

\begin_layout Standard
Un'
\emph on
autostazione
\emph default
 (bus terminal) è un'infrastruttura di trasporto in cui convergono veicoli
 adibiti al trasporto pubblico di persone ed è il luogo dove i passeggeri
 aspettano, salgono a bordo e scendono dagli autobus.
 Le dimensioni sono maggiori rispetto a quelle di una 
\emph on
fermata
\emph default
 dell'autobus, che può essere un'area sul ciglio della strada sufficientemente
 ampia per permettere ad un autobus di fermarsi.
 Essa può essere una 
\emph on
stazione terminale
\emph default
 in cui hanno inizio e fine alcuni percorsi di linea, o una 
\emph on
stazione di transito
\emph default
 in cui i percorsi non hanno termine ma possono proseguire in direzione
 di altre fermate.
 L'infrastruttura ha lo scopo di permettere ai passeggeri di effettuare
 facilmente il cambio di mezzo di trasporto o di percorso e può fornire
 loro servizi quali tabelloni informativi, sale d'aspetto, bar, servizi
 igienici, deposito bagagli, posteggi di taxi e biglietterie.
 Deve, altresì, facilitare le operazioni di manovra dei veicoli, deve poter
 fungere da scalo per le corse in transito e da capolinea per quelle terminali.
\end_layout

\begin_layout Standard
I passeggeri salgono e scendono dagli autobus in zone dette 
\emph on
piattaforme 
\emph default
o anche 
\emph on
gate
\emph default
.
 Le piattaforme possono essere disposte secondo vari schemi che influenzano
 sia l'accessibilità da parte dei veicoli di varie tipologie che il tempo
 minimo in cui un veicolo occupa la piattaforma.
 Questo tempo è diverso per veicoli che iniziano o terminano il servizio
 nell'autostazione e per veicoli che sono in transito.
 Le piattaforme possono essere assegnate in maniera fissa alle linee o alle
 singole corse, oppure possono essere assegnate in modo flessibile se l'autostaz
ione ha un sistema dinamico di informazione che permetta agli utenti (passeggeri
 e conducenti) di conoscere in anticipo la piattaforma in cui fermerà l'autobus.
 Siccome le piattaforme sono risorse scarse e costose è preferibile la seconda
 modalità di utilizzo che richiede un minor numero di piattaforme in quanto
 permette un utilizzo più efficiente del piazzale (un numero maggiore di
 servizi di trasporto, a parità di piattaforme disponibili) ma non fornisce
 al passeggero e al conducente la comodità di conoscere la piattaforma con
 largo anticipo e richiede di decidere gli assegnamenti autobus-piattaforma.
 La piattaforma di arrivo o partenza del veicolo è soggetta a variazioni
 dinamiche rispetto al servizio programmato dovute alle caratteristiche
 stocastiche dei tempi di arrivo e partenza degli autobus, e a eventi anomali
 come la cancellazione di corse, la creazione di nuove corse o situazioni
 di avaria di veicoli o altri eventi imprevedibili.
\end_layout

\begin_layout Standard
Il problema affrontato in questa tesi è quello di determinare assegnamenti
 delle fermate delle corse alle piattaforme, che possono essere definite
 in anticipo in base alle tabelle orarie delle corse in un certo periodo
 di tempo e possono essere riassegnate in modo dinamico avvalendosi, possibilmen
te, dei dati in tempo reale sulla posizione dei veicoli.
 Gli assegnamenti di un veicolo ad una piattaforma possono essere soggetti
 a vari vincoli di compatibilità.
 La gestione manuale dei processi della stazione risulta sempre più complessa
 al crescere del numero di servizi di trasporto e di piattaforme da gestire
 fino a diventare impraticabile per un operatore umano e una politica di
 assegnamento non corretta può comportare forte disagi ai passeggeri ed
 agli autisti, compromettendo il buon funzionamento dell'autostazione.
\end_layout

\begin_layout Standard
La tesi è organizzata nel modo seguente.
\end_layout

\begin_layout Standard
Il cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Allocazione-delle-piattaforme"

\end_inset

 introduce il problema di allocazione delle piattaforme nelle autostazioni,
 definendo il contesto in cui emerge il problema e le difficoltà che s'incontran
o nel risolverlo.
\end_layout

\begin_layout Standard
Il cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Rassegna-bibliografica"

\end_inset

 descrive i sistemi software di supporto alle decisioni impiegati nella
 pianificazione degli assegnamenti nelle autostazioni, presenta problemi
 studiati in contesti differenti che possono essere modellizzati e risolti
 in modo analogo e fornisce una rassegna bibliografica sui problemi noti
 come Gate Assignment Problems.
\end_layout

\begin_layout Standard
Il cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Nuove-formulazioni"

\end_inset

 propone le formulazioni di nuovi problemi di allocazione delle piattaforme
 ed i modelli di programmazione lineare intera che ne descrivono indici
 di prestazione e vincoli.
 I modelli sono generali possibili e si prestano ad essere modificati introducen
do vincoli addizionali per poter rappresentare le variegate situazioni che
 si verificano nelle diverse autostazioni.
 
\end_layout

\begin_layout Standard
Il cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algoritmi-sviluppati"

\end_inset

 illustra i metodi di risoluzione sviluppati per poter determinare delle
 buone soluzioni ai problemi proposti nel cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Nuove-formulazioni"

\end_inset

 e propone una strategia euristica che permette la determinazione di buone
 soluzioni in tempi di elaborazione ragionevoli.
\end_layout

\begin_layout Standard
Il cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Risultati-computazionali"

\end_inset

 illustra gli esperimenti computazionali svolti su di un caso di studio
 di una giornata di operazioni di un'autostazione esistente mostrando la
 qualità delle soluzioni prodotte e l'applicabilità degli algoritmi sviluppati
 nel contesto delle autostazioni.
\end_layout

\begin_layout Standard
Il cap.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Conclusioni-e-sviluppi"

\end_inset

 conclude evidenziando il contributo fornito dal presente lavoro e propone
 potenziali sviluppi futuri.
\end_layout

\begin_layout Standard
Il caso di studio su cui sono state effettuate le prove numeriche deriva
 dai dati di una giornata di operazioni dell'Autostazione di Bologna.
\end_layout

\begin_layout Standard
L'Autostazione di Bologna è un importante nodo di smistamento della mobilità
 su autobus extraurbani, nazionali e internazionali, situato in prossimità
 della Stazione Centrale.
 La struttura venne inaugurata nel 1967 ed è tuttora la più importante in
 Italia per funzionalità ed ampiezza, paragonabile alle grandi stazioni
 attive in molti Paesi europei e americani.
 Oltre 90.000 utenti, tra viaggiatori o semplici passanti, transitano in
 Autostazione nel corso di una settimana, con punte massime giornaliere
 di quasi 15.000 persone.
 La sua superficie complessiva è di 17.000 m
\begin_inset Formula $^{2}$
\end_inset

 divisi in un piazzale di manovra, un edificio che ospita uffici ed attività
 commerciali e un atrio antistante l'edificio.
 Il piazzale di manovra e movimentazione dei pullman ospita un marciapiede
 arrivi, di oltre 170 m, un marciapiede partenze diviso in 24 piattaforme,
 un marciapiede centrale destinato alla movimentazione e sosta degli autobus
 turistici, un marciapiede per i passeggeri con panchine e salette d'attesa,
 servizi igienici e tabelloni informativi.
 I marciapiedi sono coperti da estese tettoie in modo da garantire riparo
 ai passeggeri.
 È presente inoltre un servizio deposito bagagli.
 Il piazzale è automatizzato e il sistema di segnalazione può disciplinare
 fino a 1400 partenze giornaliere.
 La gestione 
\begin_inset Quotes eld
\end_inset

manuale
\begin_inset Quotes eld
\end_inset

 dei processi del terminal è stata sostituita, negli ultimi anni, da un
 sistema avanzato di gestione automatica per ottenere un maggior controllo
 e rendimento dell'autostazione.
 Un modulo di questo sistema è quello di ottimizzazione della gestione delle
 piattaforme di partenza, che ha lo scopo di minimizzare il numero complessivo
 di piattaforme impegnate in una giornata.
 L'applicazione formula dei piani a partire dall'orario schedulato e deve
 anche gestire in real-time le anomalie quali ritardi o cancellazioni di
 corse.
\end_layout

\begin_layout Standard
Le soluzioni fornite dagli algoritmi sviluppati in questa tesi usando come
 input i dati dell'Autostazione di Bologna si sono dimostrate di buona qualità;
 gli algoritmi pertanto sono adatti ad essere applicati a situazioni reali.
\end_layout

\begin_layout Chapter
Allocazione delle piattaforme in un'autostazione
\begin_inset CommandInset label
LatexCommand label
name "chap:Allocazione-delle-piattaforme"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
Fondere insieme i concetti ripetuti più volte nel capitolo
\end_layout

\begin_layout Enumerate
Verificare che la struttura in paragrafi sia coerente e segua un ordine
 logico
\end_layout

\begin_layout Enumerate
Scegliere se spostare la presentazione dei concetti in parti distinte
\end_layout

\end_inset


\end_layout

\begin_layout Section
Terminologia
\end_layout

\begin_layout Standard
Prima di procedere alla descrizione del problema affrontato è opportuno
 fornire alcune definizioni riguardanti i servizi di trasporto e le modalità
 con cui essi vengono erogati.
\end_layout

\begin_layout Standard
Una 
\emph on
linea
\emph default
 è un servizio di trasporto operato su uno specifico percorso, che collega
 un capolinea di partenza ad un capolinea di destinazione passando per delle
 fermate intermedie, o su più percorsi.
 Una linea ha definita la frequenza delle corse, per ogni fascia oraria,
 e i tempi di partenza dal capolinea e di passaggio presso ogni fermata
 sono espansi nella tabella oraria.
\end_layout

\begin_layout Standard
I servizi di trasporto di una linea sono operati da una 
\emph on
compagnia di trasporto
\emph default
.
\end_layout

\begin_layout Standard
Una 
\emph on
corsa
\emph default
 è il movimento di un veicolo dall'inizio di una linea o percorso alla fine
 di esso.
 
\end_layout

\begin_layout Standard
Una 
\emph on
fermata
\emph default
 può disporre di pensilina e posti a sedere e di tabelloni o pannelli per
 fornire informazioni di servizio come le tabelle orarie ed eventualmente
 i dati in tempo reale sui veicoli in arrivo.
\end_layout

\begin_layout Standard
La 
\emph on
tabella oraria
\emph default
 (o schedula) definisce per ogni corsa il tempo di partenza dal capolinea
 d'inizio, il tempo di passaggio presso ogni fermata intermedia e il tempo
 di arrivo al capolinea di fine corsa.
\end_layout

\begin_layout Standard
La tabella oraria specifica quali servizi saranno garantiti in un dato 
\emph on
periodo 
\emph default
che ha una data di inizio e di fine e che specifica precisi giorni della
 settimana.
 L'orario delle corse può subire modifiche rispetto alla pianificazione
 del 
\emph on
periodo
\emph default
 per far fronte richieste particolari in alcuni 
\emph on
giorni
\emph default
.
\end_layout

\begin_layout Standard
Vi sono diverse 
\emph on
tipologie di veicoli
\emph default
 che meglio si adattano a svolgere alcuni servizi.
 Ogni corsa ha definita una lista di tipologie di veicolo compatibili.
\end_layout

\begin_layout Standard
Le piattaforme di una autostazione, e l'autostazione stessa, possono non
 essere disponibili in determinate fasce orarie di un periodo o di un giorno
 particolare.
\end_layout

\begin_layout Standard
Nel prosieguo utilizzeremo il termine 
\emph on
fermata
\emph default
 per indicare l'intervallo temporale in cui una piattaforma deve essere
 considerata occupata dal veicolo che effettua una corsa.
\end_layout

\begin_layout Standard
Tale intervallo deve includere gli istanti di arrivo e di ripartenza del
 veicolo, che saranno distanti almeno quanto il tempo minimo di servizio
 dei passeggeri più il tempo necessario ad impegnare e disimpegnare la piattafor
ma, e un buffer temporale per permettere ai veicoli di operare in sicurezza.
 Più tale buffer è ampio e più il sistema di gestione delle piattaforme
 sarà in grado di far fronte agli scostamenti dei tempi di fermata programmati
 che si verificano durante l'esercizio.
 L'ampiezza dei buffer temporali, in alcune soluzioni, è scelto in funzione
 della fascia oraria, in quanto il numero di passeggeri da servire e di
 autobus in fermata nell'autostazione varia rispetto al tempo e presenta
 in genere due picchi in concomitanza delle ore di punta, la mattina e il
 tardo pomeriggio, ma potrebbe avere anche una distribuzione diversa.
\end_layout

\begin_layout Standard
L'intervallo temporale in cui la piattaforma deve essere considerata occupata
 dal sistema di gestione delle piattaforme è pertanto funzione del tempo
 minimo necessario al veicolo per effettuare l'imbarco e lo sbarco dei passegger
i, del tempo necessario ad occupare e liberare la piattaforma e della fascia
 oraria.
 Una fermata è compatibile solo con alcune piattaforme e ciò dipende da
 vari motivi quali la capacità del gate o le politiche del gestore dell'autostaz
ione.
\end_layout

\begin_layout Section
Il problema considerato
\end_layout

\begin_layout Standard
Il problema di assegnare le fermate degli autobus alle piattaforme disponibili
 è uno dei problemi più importanti nella gestione delle operazioni di un'autosta
zione perché influenza i costi operativi e la qualità del servizio offerto.
 I gestori dell'autostazione sono soliti affrontare il problema distinguendo
 due fasi distinte.
 La prima fase decisionale avviene durante la pianificazione delle operazioni
 da effettuarsi in un certo orizzonte temporale.
 Dato l'orario delle corse di ciascuna delle compagnie di trasporto operanti
 nell'autostazione, il gestore deve definire quali autobus assegnare a quali
 piattaforme in un dato giorno, che in genere è un periodo compreso tra
 le 12 e le 24 ore, e la pianificazione viene realizzata ogni qualvolta
 cambiano gli orari delle linee operanti nell'autostazione.
 Questa è la fase di pianificazione degli assegnamenti e avviene su base
 stagionale per le corse urbane di linea.
 Ci possono essere però molti autobus di diverse compagnie operanti presso
 l'autostazione che effettuano trasporti con cambi di programma frequenti,
 così la necessità di ripianificare l'uso di alcuni servizi può essere più
 frequente, e si possono verificare casi straordinari che determinano l'arrivo
 e la partenza di un alto numero di veicoli, quindi la pianificazione può
 essere effettuata con cadenze più ravvicinate.
 Il fatto che la preparazione si effettui poche volte fa sì che il tempo
 per l'esecuzione del programma di assegnamento delle piattaforme possa
 protrarsi anche per ore.
\end_layout

\begin_layout Standard
L'altro problema decisionale si verifica durante l'esercizio per far fronte
 alle variazioni degli orari di arrivo e partenza degli autobus rispetto
 a quelli programmati, e consiste nel modificare l'assegnamento pianificato.
 Ricostruire gli assegnamenti in tempo reale è un compito impegnativo per
 il gestore dell'autostazione, perché i cambiamenti degli orari di arrivo
 o di partenza posso rendere il piano originale irrealizzabile o, anche
 se ancora attuabile, rischia di può causare ritardi alle operazioni di
 altri servizi che dovranno usare le piattaforme in cui si sono verificati
 slittamenti rispetto agli orari programmati, soprattutto quando le fermate
 sono stabilite in orari molto vicini tra loro.
 Gli obiettivi del riassegnamento sono quelle di produrre una ridefinizione
 degli assegnamenti che sia quanto più prossima a quella pianificata in
 modo da ridurre i disagi ai passeggeri e agli autisti.
 
\end_layout

\begin_layout Standard
Problemi simili sono noti nella letteratura scientifica come Gate Assignment
 Problem (GAP) e consistono nel determinare un assegnamento ammissibile
 di mezzi (autobus, aerei\SpecialChar \ldots{}
) a postazioni di fermata (piattaforme, gate\SpecialChar \ldots{}
) inserite
 in una struttura più grande (autostazione, aeroporto\SpecialChar \ldots{}
) che sia il migliore
 possibile in base a dei criteri di preferenza.
 Affinché il problema sia ammissibile devono essere soddisfatti almeno due
 vincoli: ogni fermata di un mezzo deve essere assegnata ad una postazione
 e due mezzi i cui intervalli temporali di occupazione della postazione
 (fermata, tempo a terra\SpecialChar \ldots{}
) si sovrappongano non possono essere assegnati
 ad una stessa postazione.
\end_layout

\begin_layout Standard
Il problema del GAP viene di norma affrontato in due fasi.
 La prima fase consiste nella pianificazione degli assegnamenti, basata
 sugli orari programmati di partenza ed arrivo dei mezzi ed eventualmente
 di relazioni di compatibilità fra mezzo e postazione.
 In questo caso i dati del problema sono deterministici e noti in anticipo,
 pertanto la pianificazione viene detta 
\begin_inset Quotes eld
\end_inset

statica
\begin_inset Quotes erd
\end_inset

.
 I piani statici possono essere generati 
\begin_inset Quotes eld
\end_inset

off-line
\begin_inset Quotes erd
\end_inset

, in tempi di elaborazione che possono protrarsi anche per ore e possono
 avere validità estese a lunghi periodi.
 Le istanze del problema consistono nella lista dei mezzi che dovranno occupare
 la postazione, comprensiva dell'intervallo di occupazione, nella lista
 delle postazioni, nelle compatibilità ed anche nelle preferenze espresse
 delle compagnie di trasporto rispetto alle postazioni.
 La soluzione consiste in un assegnamento ammissibile che soddisfi tutti
 i vincoli e che sia 
\begin_inset Quotes eld
\end_inset

buono
\begin_inset Quotes erd
\end_inset

, possibilmente ottimo, rispetto agli obiettivi stabiliti.
 La seconda fase avviene durante l'esercizio e consiste nel modificare l'assegna
mento prodotto dalla pianificazione statica per far fronte alle variazioni
 degli intervalli temporali di occupazione delle postazioni.
 Il sistema di riassegnamento opera su dati stocastici e noti solo al momento
 del verificarsi degli stessi deve reagire in 
\begin_inset Quotes eld
\end_inset

real-time
\begin_inset Quotes erd
\end_inset

, ossia in tempi di, al massimo, pochi secondi.
\end_layout

\begin_layout Standard
Il problema può avere molti criteri di preferenza, sia relativamente alla
 stessa autostazione che per autostazioni con politiche di assegnamento
 diversi, perciò risulta difficile stabilire una o più funzioni obiettivo
 generali che permettano di verificare l'ottimalità di una soluzione.
 Un software per il supporto alle decisioni da intraprendere per affrontare
 al meglio tale scelte deve determinare una soluzione che sia di compromesso
 fra i differenti obiettivi e che soddisfi tutti i vincoli cui è soggetta
 un'autostazione.
 Da un punto di vista pratico uno dei requisiti più importanti è che il
 piano di assegnamento deve essere poco sensibile a piccoli cambiamenti
 dei dati in ingresso.
 L'incertezza sui dati in ingresso è causata da una serie di possibili eventi,
 come ad esempio l'arrivo in ritardo di un autobus che causa uno slittamento
 in avanti dell'intervallo di occupazione di una piattaforma.
 Se gli scarti temporali previsti con gli autobus che devono fermarsi successiva
mente sullo stessa stessa piattaforma non sono sufficientemente ampi si
 può verificare una catena di ritardi di tutte le fermate dei bus che assegnati
 a quella piattaforma.
 Questo fatto è del tutto indesiderabile perché comporta disagi ai passeggeri
 ed agli autisti, che devono spostarsi su altre piattaforme e possono subire
 ritardi, ed al capostazione che deve effettuare una rischedulazione degli
 assegnamenti.
 Assegnamenti poco robusti sono molto sensibili agli eventi imprevedibili
 che accadono durante l'esercizio ed i piani di assegnamento possono diventare
 inammissibili anche per anticipi o ritardi di pochi minuti, rendendo necessaria
 la generazione di un nuovo piano di assegnamento in tempo reale.
 Un piano di assegnamento robusto dovrebbe invece dare luogo ad un numero
 minore di situazioni che richiedono riassegnamenti e dovrebbe fornire al
 capostazione la possibilità di intervenire prontamente per effettuare piccole
 modifiche al piano.
 Si ritiene che un piano robusto dovrebbe avere un forte impatto sull'efficienza
 dell'autostazione e sulla soddisfazione dei passeggeri.
\end_layout

\begin_layout Standard
Il problema ha come decisore principale il capostazione, il quale deve valutare
 attentamente i criteri di assegnamento fermata-piattaforma in quanto tale
 scelta influenza notevolmente la qualità del servizio offerto.
 Egli infatti sa che scelte mal ponderate procurano insoddisfazione e proteste
 da parte dei passeggeri, che si troveranno costretti a spostarsi da una
 parte all'altra dell'autostazione, e da parte delle compagnie di trasporto,
 che possono subire ritardi in conseguenza alla congestione provocata dalla
 mancanza di un assegnamento corretto.
\end_layout

\begin_layout Standard
Gli assegnamenti sono soggetti a vincoli di diversa natura.
 Le piattaforme sono compatibili sono con alcune tipologie di autobus o
 servizi.
 Ad esempio alcune piattaforme potrebbero essere riservate a servizi internazion
ali, altre potrebbero essere riservate a servizi di linea ed altre ancora
 destinate al parcheggio temporaneo.
 Gli autobus o i servizi sono compatibili sono con alcune piattaforme che
 rispettano particolari requisiti, ad esempio alcuni servizi devono essere
 associati a piattaforme con particolari caratteristiche come l'accessibilità
 per utenti disabili e, ad esempio, gli autobus di dimensioni maggiori devono
 essere assegnati a piattaforme con sufficiente spazio di manovra (questa
 considerazione si applica ad esempio al caso di mezzi snodati).
 Un autobus, inoltre, si può fermare solo su una piattaforma che sia abilitata
 nell'intervallo temporale della fermata stessa.
\end_layout

\begin_layout Standard
Un ulteriore complicazione si verifica quando le piattaforme sono troppo
 poche per permettere a tutti gli autobus che devono fermarsi in un certo
 periodo di tempo di essere serviti (piattaforme come risorsa scarsa) e
 occorre decidere quale sottoinsieme di corse deve essere assegnato.
\end_layout

\begin_layout Standard
Misurare quantitativamente la bontà del piano di assegnamento non è semplice
 in quanto esistono molti criteri di scelta.
 Un modo è quello di valutare quanto il piano soddisfi le preferenze espresse
 dalle compagnie di trasporto, a loro volta determinate dalle esigenze dei
 loro utenti e da altre motivazioni.
 Ad esempio gli utenti di servizi a lunga percorrenza potrebbero gradire
 che la piattaforma sia prossima a servizi igienici o a servizi accessori
 quali i punti di ristoro mentre gli utenti in transito che devono effettuare
 un'altra corsa potrebbero desiderare che la piattaforma d'arrivo del primo
 autobus sia quanto più prossima a quella di partenza del secondo mezzo.
 Si potrebbe volere che le corse bis, ossia le corse che realizzano lo stesso
 servizio di trasporto impiegando più autobus (istituite in quanto la di
 capacità di un singolo autobus è insufficiente a soddisfare la richiesta
 di mobilità), siano posizionate su piattaforme adiacenti, oppure che i
 servizi offerti da una certa compagnia partano solo da un gruppo di piattaforme.
 Per evitare un affollamento eccessivo sui marciapiedi si potrebbe voler
 far partire servizi a lunga percorrenza da piattaforme distanti tra loro.
 Oppure per consentire le operazioni di manutenzione si potrebbe imporre
 di non utilizzare una piattaforma in determinate fasce orarie.
 Certe compagnie di trasporto preferiscono che i propri autobus siano assegnati
 a certe aree del piazzale, se possibile, in modo che sia conveniente per
 loro gestire le operazioni e allocare il personale.
 Questo, ad esempio, perché potrebbero disporre di una biglietteria dislocata
 vicino alle piattaforme.
 Operatori che in gestiscono servizi che meglio si prestano ai trasporti
 operati da certe compagnie potrebbero preferire che le corse delle compagnie
 stesse siano allocate in piattaforme vicine al luogo in cui eroga il servizio.
 Un gestore di un bar, ad esempio, potrebbe desiderare che le corse internaziona
li, per cui sono previsti tempi di attesa maggiori e frequenti ritardi,
 fermino in piattaforme prossime al bar.
\end_layout

\begin_layout Standard
In generale, fra i possibili piani generalmente è da preferire quello che
 sia suscettibile del minor numero di variazioni degli assegnamenti a fronte
 di eventi non pianificati quali ritardi o anticipi di servizi o creazione
 di nuove corse.
 Durante le ore di picco, quando un gran numero di veicoli arriva o parte
 più o meno contemporaneamente, possono verificarsi congestioni del traffico
 nel piazzale se le piattaforme assegnate sono vicine tra loro e un veicolo
 potrebbe restare in attesa di un veicolo che deve liberare la propria piattafor
ma.
\end_layout

\begin_layout Standard
Un buon assegnamento, quindi, non solo deve essere ammissibile ma deve inoltre
 essere predisposto in modo da risultare comodo per i passeggeri, deve soddisfar
e i richieste delle compagnie e degli operatori del terminal, deve ridurre
 la congestione per facilitare le operazioni e deve essere robusto rispetto
 a piccole variazioni dei dati d'ingresso.
\end_layout

\begin_layout Section
Le difficoltà di predisposizione di buon assegnamento
\end_layout

\begin_layout Standard
Sono state proposte molte metodologie per risolvere problemi analoghi a
 quello presentato, come modelli di Programmazione Lineare Intera Mista
 (PLIM) e Sistemi Esperti basati sulla conoscenza.
 Ognuna di queste metodologie ha i propri vantaggi e le proprie difficoltà
 nella realizzazione pratica.
 Risolvere questi problemi in modo efficace ed efficiente è un problema
 complesso e i problemi di ottimizzazione formulati appartengono alla classe
 dei problemi 
\begin_inset Formula $\mathcal{NP}$
\end_inset

-hard.
\end_layout

\begin_layout Standard
Negli ultimi anni si sono realizzati enormi progressi nella soluzione esatta
 di modelli di Programmazione Intera di problemi pratici con differenti
 metodologie, spesso integrando tecniche impiegate in settori di ricerca
 distinti.
 Tecniche, anche molto recenti, per la risoluzione di problemi di PLIM sono
 rese disponibili da sofisticati pacchetti software per la risoluzione di
 problemi di programmazione matematica e alcuni di questi sono stati resi
 disponibili gratuitamente.
 Lo sviluppo di questi pacchetti permette di risolvere direttamente problemi
 pratici impiegando direttamente il modello di programmazione matematica.
 Per alcuni problemi come quello presentato, però, i modelli matematici
 non si riescono a risolvere all'ottimo in tempi di calcolo ragionevoli
 per questo è necessaria ulteriore ricerca sul tema.
\end_layout

\begin_layout Standard
In realtà, ogni autostazione ha criteri propri sugli assegnamenti veicolo-piatta
forma che sono determinati dagli interessi degli stakeholders dell'autostazione
 e predisporre un'applicazione che possa contemplare le esigenze specifiche
 di tutti è un'impresa ardua.
 Alcune autostazioni, ad esempio, richiedono che certe linee siano assegnate
 a un'insieme specifico di piattaforme, se possibile, mentre altre non considera
no tali restrizioni.
 A causa delle varie considerazioni e del layout dell'autostazione i vincoli
 sugli assegnamenti sono numerosi ed eterogenei e devono essere modellati
 specificamente per ogni autostazione.
 Come conseguenza il numero di parametri e di vincoli di un modello di PLIM
 di un'istanza di un problema reale è solitamente troppo grande per essere
 risolto con tecniche esatte basate direttamente sulla risoluzione del modello
 matematico.
 In aggiunta, un piano di assegnamento deve essere prodotto in un ragionevole
 tempo di elaborazione e ciò è ancor più vero quando l'assegnamento deve
 essere modificato in tempo reale per far fronte ad eventi imprevisti che
 si realizzano nel corso delle operazioni del terminal.
 Se il tempo di risoluzione dei modelli di PLIM risulta troppo irragionevole,
 allora la risoluzione esatta del modello non risulta applicabile in pratica
\end_layout

\begin_layout Standard
Molti ricercatori hanno fatto ricorso alle tecniche di programmazione matematica
, sviluppando modelli e metodologie per la risoluzione e/o hanno affidato
 a tecniche meta-euristiche la risoluzione di istanze reali per migliorare
 ridurre i tempi di elaborazione.
 Un altro fattore che rende difficile l'uso di tecniche di PLIM è che la
 modellizzazione del problema con gli strumenti della programmazione matematica
 esigenze specifiche conoscenze di metodologie di modellazione di ricerca
 operativa e di risoluzione dei problemi di ottimizzazione combinatoria.
 Di conseguenza i Sistemi Esperti o i sistemi basati sulla conoscenza, che
 sono metodologie tipiche dell'intelligenza artificiale, sono stati proposti
 ed impiegati per risolvere il problema di determinare gli assegnamenti
 giornalieri volo-gate negli aeroporti, ad esempio 
\begin_inset CommandInset citation
LatexCommand cite
key "Adenso-Diaz2005,Blanco2003,Brazile1988,cheng1997kba,gosling1990des,hamzawi1986map,Su1993123"

\end_inset

.
 I Sistemi Esperti sono stati applicati con successo a molti problemi che
 presentano un numero combinatorio di soluzioni ammissibili per ottenere
 una più rapida generazione delle soluzioni.
 Essi si rivelano particolarmente adatti quando l'uso di euristiche per
 generare una soluzione soddisfacente risulta appropriato.
 Molti ricercatori, invece di usare metodologie di ottimizzazione, hanno
 proposto tecniche in grado di generare velocemente soluzioni ammissibili
 e appetibili per il committente con l'uso di euristiche.
 
\end_layout

\begin_layout Standard
I Sistemi Esperti, tuttavia, sono utilizzati per la ricerca di soluzioni
 soddisfacenti, ma non necessariamente ottimali, come affermato da 
\begin_inset CommandInset citation
LatexCommand cite
key "srihari1991esm"

\end_inset

.
 Se il problema è visto come problema di ottimizzazione e non come problema
 di ammissibilità, non c'è alcuna garanzia che i sistemi esperti possono
 evitare di essere intrappolati in un ottimo locale.
 La parte più difficile del problema è nell'individuare le regole per guidare
 il processo di assegnazione, a causa del gran numero di fattori da prendere
 in considerazione come sottolineato da 
\begin_inset CommandInset citation
LatexCommand cite
key "Su1993123"

\end_inset

.
 Questi fattori possono rendere la ricerca euristica difficile e questo
 può a sua volta influenzare la qualità della soluzione.
\end_layout

\begin_layout Chapter
Rassegna bibliografica: modelli e stato dell'arte degli algoritmi
\begin_inset CommandInset label
LatexCommand label
name "chap:Rassegna-bibliografica"

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Literature review: models and state-of-the-art algorithms
\end_layout

\end_inset


\end_layout

\begin_layout Section
Sistemi di supporto alle decisioni per la gestione delle piattaforme delle
 autostazioni
\end_layout

\begin_layout Subsection*
GatePlanner
\end_layout

\begin_layout Standard
Il software GatePlanner, prodotto dalla società Pluservice S.r.l., è il tool
 di supporto alle decisioni per la pianificazione automatica degli assegnamenti
 statici degli autobus alle piattaforme in uso presso l'Autostazione di
 Bologna.
\end_layout

\begin_layout Standard
Il software considera le corse programmate raggruppandole in sottoinsiemi
 aventi una validità comune, che sono definiti come 
\emph on
giorno tipo
\emph default
.
 La pianificazione viene effettuata per ogni giorno tipo.
 Per ogni corsa 
\begin_inset Formula $i$
\end_inset

 del giorno tipo sono noti l'orario di partenza 
\begin_inset Formula $t_{i}$
\end_inset

 e il valore di due parametri: 
\begin_inset Formula $t_{i}^{\prime}$
\end_inset

 e 
\begin_inset Formula $t_{i}^{\prime\prime}$
\end_inset

.
 L'intervallo temporale in cui la piattaforma associata alla corsa 
\begin_inset Formula $i$
\end_inset

 è considerata occupata è 
\begin_inset Formula $[t_{i}-t_{i}^{\prime},\, t_{i}+t_{i}^{\prime\prime}]$
\end_inset

.
 Posto 
\begin_inset Formula $a_{i}=t_{i}-t_{i}^{\prime}$
\end_inset

 e 
\begin_inset Formula $d_{i}=t_{i}+t_{i}^{\prime\prime}$
\end_inset

, l'intervallo in cui una piattaforma risulta occupata dalla corsa è l'intervall
o 
\begin_inset Formula $[a_{i},d_{i}]$
\end_inset

, come rappresentato in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tempo-di-occupazione"

\end_inset

.
 I parametri 
\begin_inset Formula $t_{i}^{\prime}$
\end_inset

 e 
\begin_inset Formula $t_{i}^{\prime\prime}$
\end_inset

 non sono costanti ma sono funzione dell'ora di partenza 
\begin_inset Formula $t_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{img/occupazione_piattaforma}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Intervallo di occupazione di una piattaforma da parte della corsa 
\begin_inset Formula $i$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Tempo-di-occupazione"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le corse sono suddivise in corse da pianificare in automatico, ossia quelle
 per cui l'algoritmo di assegnamento statico cercherà di associare una piattafor
ma e in corse da assegnare manualmente, che saranno assegnate da un operatore.
 Il software permette di gestire gruppi di 
\emph on
corse bis
\emph default
, ossia raggruppamenti di corse che percorrono la stessa tratta in orari
 che differiscono, al più, di pochi minuti, istituite per far fronte ad
 una domanda maggiore della capacità di un singolo veicolo.
 Raggruppamenti di corse bis sono detti 
\emph on
gruppi bis
\emph default
.
 Le piattaforme della stazione sono disposte in linea, come mostrato in
 figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Disposizione-delle-piattaforme"

\end_inset

 e per le autostazioni che presentano tale configuraurazione è conveniente
 far partire le corse bis da piattaforme adiacenti.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/layout_piattaforme.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Disposizione delle piattaforme nell'autostazione di Bologna
\begin_inset CommandInset label
LatexCommand label
name "fig:Disposizione-delle-piattaforme"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Le corse possono essere: di linea, di linea effettuate da veicoli snodati
 e appartenenti a gruppi bis.
 Le linee possono essere compatibili solo con alcune piattaforme.
 Le piattaforme possono essere disabilitate in una o più fasce orarie e
 possono essere riservate ad uso esclusivo da alcune linee.
 L'algoritmo di pianificazione di GatePlanner, oltre ai vincoli di collocazione
 di ogni corsa e di non occupazione simultanea di una stessa piattaforma,
 considera anche i seguenti vincoli aggiuntivi:
\end_layout

\begin_layout Enumerate
le 
\begin_inset Quotes eld
\end_inset

corse bis
\begin_inset Quotes erd
\end_inset

 devono essere assegnate a piattaforme adiacenti, in particolare le corse
 di un gruppo bis sono posizionate in ordine inverso rispetto all'orario
 di partenza.
 Tale vincolo serve a migliorare la qualità del sevizio offerto ai clienti
 e agevola le operazioni di manovra;
\end_layout

\begin_layout Enumerate
le corse appartenenti a linee che includono almeno un veicolo snodato devono
 essere assegnate alle piattaforme che accettano mezzi snodati.
 Se una corsa con snodati ha delle corse bis allora tutte le corse del gruppo
 bis sono considerate come corse con snodati.
 Tale vincolo serve a garantire la realizzabilità della soluzione proposta;
\end_layout

\begin_layout Enumerate
le corse appartenenti ad una linea compatibile solo con un sottoinsieme
 di piattaforme devono essere assegnate a piattaforme appartenenti all'insieme
 dato.
\end_layout

\begin_layout Enumerate
le piattaforme che sono riservate ad un insieme di linee devono essere assegnate
 solo a corse appartenenti alle linee dell'insieme dato;
\end_layout

\begin_layout Enumerate
una corsa non deve essere assegnata ad una piattaforma se l'intervallo di
 occupazione della corsa ha intersezione non vuota con un intervallo di
 disabilitazione della piattaforma.
\end_layout

\begin_layout Standard
Il problema considerato è quello di minimizzare il numero di piattaforme
 che sono assegnate ad almeno una corsa durante il giorno tipo, prediligendo
 l'occupazione delle piattaforme più vicine all'ingresso (etichettate con
 numeri minori).
\end_layout

\begin_layout Standard
Per determinare una buona soluzione del problema, da quanto si evince dalla
 documentazione, viene impiegato un algoritmo greedy simile all'algoritmo
 first-fit usato per la soluzione approssimata del problema di bin packing.
 L'algoritmo è illustrato in algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg:gateplanner"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
seguenti passi:
\end_layout

\begin_layout Enumerate
partiziona le corse negli insiemi:
\end_layout

\begin_deeper
\begin_layout Enumerate
corse appartenenti ai gruppi bis effettuate da mezzi snodati (vincoli 1.
 e 2.),
\end_layout

\begin_layout Enumerate
corse appartenenti a gruppi bis (vincolo 1.),
\end_layout

\begin_layout Enumerate
corse effettuate da mezzi snodati, e non appartenenti a gruppi bis (vincolo
 2.),
\end_layout

\begin_layout Enumerate
corse presenti nella lista delle linee associate ad un sottoinsieme di piattafor
me,
\end_layout

\begin_layout Enumerate
tutte le corse non presenti nei precedenti insiemi;
\end_layout

\end_deeper
\begin_layout Enumerate
ordina le piattaforme per numero in modo crescente;
\end_layout

\begin_deeper
\begin_layout Enumerate
L'algoritmo poi assegna nell'ordine le corse alla prima piattaforma disponibile
 in quell'intervallo di tempo.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{L'insieme delle fermate $F$ e quello delle piattaforme $P$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Un assegnamento $mathcal{A}$ fermata-piattaforma completo o parziale}
 %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	$n 
\backslash
leftarrow |F|$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$m 
\backslash
leftarrow |P|$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i 
\backslash
leftarrow 1$ 
\backslash
KwTo $n$ }{
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{Fermata non assegnata}
\end_layout

\begin_layout Plain Layout

		$mathcal{A}_i 
\backslash
leftarrow -1$
\backslash
;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Partiziona $F$ in sottoinsiemi} %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_1$ devono soddisfare i vincoli 1.
 e 2.} %
\end_layout

\begin_layout Plain Layout

	$F_1 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ gruppi bis, mezzi snodati$
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$F 
\backslash
leftarrow F 
\backslash
setminus F_1$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_2$ devono soddisfare solo il vincolo 1.} %
\end_layout

\begin_layout Plain Layout

	$F_2 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ gruppi bis$
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$F 
\backslash
leftarrow F 
\backslash
setminus F_2$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_3$ devono soddisfare solo il vincolo 2.} %
\end_layout

\begin_layout Plain Layout

	$F_3 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ mezzi snodati $
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	$F 
\backslash
leftarrow F 
\backslash
setminus F_3$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_4$ devono soddisfare il vincolo 3.} %
\end_layout

\begin_layout Plain Layout

	$F_4 
\backslash
leftarrow 
\backslash
{f 
\backslash
in F :$ piattaforme riservate$
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Le corse di $F_5$ non sono presenti nei precedenti insiemi} %
\end_layout

\begin_layout Plain Layout

	$F_5 
\backslash
leftarrow F 
\backslash
setminus F_4$
\backslash
;
\end_layout

\begin_layout Plain Layout

%	$F_{5}=F
\backslash
setminus
\backslash
ensuremath{{
\backslash
displaystyle 
\backslash
bigcup_{i=1}^{4}}F_{i})}$
\backslash
;
\end_layout

\begin_layout Plain Layout

	Sia $
\backslash
mathcal{P}$ il vettore delle piattaforme
\backslash
;
\end_layout

\begin_layout Plain Layout

	Ordina $
\backslash
mathcal{P}$ per numero in modo crescente
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i
\backslash
leftarrow 1$ 
\backslash
KwTo $5$ }{
\end_layout

\begin_layout Plain Layout

		Sia $
\backslash
mathcal{F}_i$ il vettore delle fermate
\backslash
;
\end_layout

\begin_layout Plain Layout

		Ordina $
\backslash
mathcal{F}_i$ per ora di partenza non decrescente
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$f 
\backslash
in 
\backslash
mathcal{F}_i$ }{
\end_layout

\begin_layout Plain Layout

			
\backslash
For{$k
\backslash
leftarrow 1$ 
\backslash
KwTo $m$}{
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$f$ compatibile con $
\backslash
mathcal{P}_k$ e $
\backslash
mathcal{P}_k$ abilitato}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
If{$f$ non sovrapposto a fermate assegnate a $
\backslash
mathcal{P}_k$}{
\end_layout

\begin_layout Plain Layout

						
\backslash
tcc{Assegna $f$ a $P$}
\end_layout

\begin_layout Plain Layout

						$
\backslash
mathcal{A}_f 
\backslash
leftarrow k$
\backslash
;
\end_layout

\begin_layout Plain Layout

						$n 
\backslash
leftarrow n - 1$
\backslash
;
\end_layout

\begin_layout Plain Layout

					}
\end_layout

\begin_layout Plain Layout

				}	
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
If{$n 
\backslash
neq 0$}{
\end_layout

\begin_layout Plain Layout

		
\backslash
emph{Assegnamento non completo}%
\backslash
;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
mathcal{A}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Algoritmo di pianificazione di GatePlanner}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:gateplanner}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'algoritmo è di tipo euristico costruttivo e come tale non garantisce di
 determinare una soluzione, anche se la regione ammissibile fosse non vuota,
 e nel caso in cui venisse prodotta una soluzione non è garantito che sia
 ottima.
\end_layout

\begin_layout Subsection*
Sistema in uso nell'autostazione di Oviedo
\end_layout

\begin_layout Standard
Il sistema di supporto alle decisioni realizzato per la gestione dell'autostazio
ne di Oviedo, in Spagna, è descritto in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citet
key "Adenso-Diaz2005"

\end_inset

.
 L'autostazione è composta da 44 piattaforme e gestisce circa 1100 servizi
 al giorno.
 Il sistema utilizzato per l'assegnamento delle piattaforme è composto da
 due moduli, uno 
\begin_inset Quotes eld
\end_inset

off-line
\begin_inset Quotes erd
\end_inset

 per la pianificazione statica e l'altro 
\begin_inset Quotes eld
\end_inset

on-line
\begin_inset Quotes erd
\end_inset

 per far fronte al caso dinamico.
 La pianificazione statica viene generata da un sistema Rule-Based che implement
a due tipologie di regole; le prime, dette 
\emph on
direct rules
\emph default
, rappresentano i vincoli che devono essere necessariamente soddisfatti
 dalla soluzione (
\emph on
hard constraints
\emph default
) mentre le seconde, dette 
\emph on
approximate rules
\emph default
, rappresentano le preferenze che il capostazione attribuisce all'assegnamento
 di un servizio ad una piattaforma.
 Le preferenze possono indicare, ad esempio, quanto è 
\begin_inset Quotes eld
\end_inset

utile
\begin_inset Quotes erd
\end_inset

 assegnare un servizio ad una piattaforma in base alla provenienza o alla
 destinazione, alla compagnia che effettua il servizio, alla dimensione
 dell'autobus o al tempo di fermata.
 Questo secondo gruppo di regole può essere usato, inoltre, per tentare
 di lasciare disimpegnate le piattaforme adiacenti a quelle da cui partono
 autobus a lunga percorrenza.
 Il capostazione stabilisce le regole da introdurre nel sistema e la loro
 utilità (espressa con un numero intero compreso fra 1 e 9).
 L'algoritmo proposto genera il piano di assegnamento che massimizza la
 somma dei pesi delle regole scelte.
 Le istanze reali dell'autostazione di Oviedo vengono risolte in circa 10'
 su un Pentium III.
 Il caso dinamico, descritto in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Blanco2003"

\end_inset

, viene affrontato sempre con un sistema a regole che ha per input il piano
 e le regole .
 Quando uno degli assegnamenti del piano statico non può essere attuato
 allora il sistema rende inammissibile l'assegnamento e aggiunge la regola
 di trovare un assegnamento del bus da riallocare che sia il più vicino
 possibile alla piattaforma precedentemente programmata.
\end_layout

\begin_layout Section
Problemi simili
\end_layout

\begin_layout Standard
La letteratura scientifica propone molte pubblicazioni sul trasporto su
 gomma e sulle autostazioni ma, generalmente, gli studi sono funzionali
 alla quantificazione della qualità dei servizi offerti e alla progettazione
 dei layout.
 Scarso è, invece, il contributo sui problemi di ottimizzazione o di soddisfacim
ento dei vincoli emergenti nei terminal del trasporto su gomma.
 Le pubblicazioni scientifiche che trattano della gestione delle piattaforme
 all'interno delle autostazioni si limitano a
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citet
key "Adenso-Diaz2005"

\end_inset

.
 La ricognizione della letteratura è stata pertanto orientata a problematiche
 analoghe che emergono in contesti differenti.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Definizione degli aspetti generali per l'individuazione di problematiche
 simili
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Problematiche simili a quella di assegnare le fermate alle piattaforme delle
 autostazioni emergono nella gestione dei terminal aeroportuali, nelle stazioni
 ferroviarie, e nei porti, interporti o altre strutture adibite allo stoccaggio
 temporaneo e al caricamento di veicoli.
 Forti sono le analogie anche con il problema di allocazione dei registri
 di DSP (Digital Signal Processor) e con il problema di ottimizzazione dell'uso
 dei registri di un processore durante il processo di compilazione.
\end_layout

\begin_layout Standard
Elementi comuni nei vari problemi sono:
\end_layout

\begin_layout Itemize
la presenza di un luogo fisico in cui vengono convogliate persone, beni
 da trasportare o dati diviso in più (in inglese spesso definito terminal
 o hub nel caso di problemi di trasporto, register nel caso di dati);
\end_layout

\begin_layout Itemize
un insieme di veicoli o unità di informazione (aircraft, train, truck, o
 variable
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ldots{}
\end_layout

\end_inset

);
\end_layout

\begin_layout Itemize
un insieme di risorse spaziali che non possono essere occupate nello stesso
 tempo da più di un veicolo o dato (platform, gate, track, o register);
 
\end_layout

\begin_layout Itemize
i tempi di fermata dei veicoli per effettuare le operazioni di carico e
 scarico dei passeggeri o delle merci, o i tempi di vita dei dati sono programma
ti ma potrebbero essere soggetti a variazioni per il verificarsi di eventi
 non prevedibili a priori (ritardi, interruzioni\SpecialChar \ldots{}
);
\end_layout

\begin_layout Itemize
gli assegnamenti potrebbero essere soggetti a vincoli 
\begin_inset Quotes eld
\end_inset

locali
\begin_inset Quotes erd
\end_inset

, che coinvolgano le compatibilità fra operazioni e risorse oppure fra due
 o più operazioni.
\end_layout

\begin_layout Standard
Un vincolo locale, nel contesto dell'ottimizzazione dell'uso di piattaforme,
 è la compatibilità di alcuni tipi di veicoli con un sottoinsieme di piattaforme
, ad esempio per ragioni geometriche e di spazi di manovra.
 Un vincolo locale nel caso dell'ottimizzazione del codice macchina si trova
 nel problema definito come 
\emph on
register assignment
\emph default
 con registri eterogenei
\emph on
.

\emph default
 Esso consiste nel determinare l'assegnamento variabile-registro in un processor
e avente registri eterogenei: alcuni registri possono eseguire solo alcune
 istruzioni.
 Una variabile può essere associata solo ad alcuni registri ed i tempi di
 permanenza sono fissati.
\end_layout

\begin_layout Standard
Altro aspetto comune è che il tempo di occupazione può dipendere dalla risorsa
 o anche dall'assegnamento stesso: il tempo di carico e scarico di merci
 o passeggeri dipende infatti sia dal tipo di veicolo che dalla piattaforma
 così come il tempo di esecuzione di un'istruzione può estendersi per un
 numero diverso di cicli di clock rispetto ad altre istruzioni o in base
 a quale unità di calcolo stia eseguendo la stessa istruzione.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
e di estensioni temporali diverse fra loro (non modellabili con grafo unit
 interval).
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Sarebbe da migliorare un po' l'italiano
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Train Platforming Problem
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un problema simile a quello di allocazione delle piattaforme delle autostazioni
 è quello di assegnare i treni ai binari.
 Il problema può essere formulato sostituendo il treno al posto dell'autobus
 e il binario al posto della piattaforma.
 Il problema nel caso ferroviario consiste nell'assegnare i treni ai binari
 di una stazione ferroviaria in modo da avere degli assegnamenti compatibili
 con l'instradamento dei treni, cosa che può verificarsi in un'autostazione
 in cui siano imposti i sensi di marcia nelle corsie per il raggiungimento
 della piattaforma.
 Il problema viene identificato in letteratura come Train Platforming Problem
 (TPP).
 Per una rassegna sul problema si rimanda alla rassegna recente
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "caprara2007passenger"

\end_inset

 e al lavoro, di carattere più generale,
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "lusby-railway"

\end_inset

.
 Si nota che alcuni autori modellano il TPP come un problema di colorazione
 di grafi su grafi di conflitto e che altri usano tecniche tradizionali
 della ricerca operativa, mentre altri ancora impiegano efficacemente la
 programmazione per vincoli.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
DAP o Dock-to-door assignment
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Altro problema simile è quello di caricamento di camion o altri veicoli
 da magazzini collocati in un'unica grande struttura.
 Tale problema è classificato come Dock Assignment Problem (DAP).
 L'analogia dei problemi si nota considerando il camion come se fosse l'autobus
 e il magazzino come se fosse la piattaforma.
 Purtroppo anche questo problema appare poco studiato e i lavori pubblicati
 spesso mutano le soluzione dal AGAP.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Register-assignment
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I problemi di Register-assignment o Register-allocation sono descritti in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "pereira2008survey"

\end_inset

.
 La tendenza attuale predilige metodi euristici che impiegano poca memoria
 e poco tempo di calcolo, ma quando l'ottimizzazione del codice è importante
 si ricorre frequentemente a tecniche di colorazione di grafi di conflitto.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Zeitlhofer20031411"

\end_inset

 l'assegnamento dei registri diviene un problema decisionale di 
\emph on
list-coloring
\emph default
, la cui soluzione determina un assegnamento che richiede al massimo tanti
 registri quanti disponibili, se tale soluzione esiste.
 Il lavoro descrive il caso di processori con varie unità funzionali in
 grado di eseguire un sottoinsieme di istruzioni.
 Lo scheduling delle istruzioni è definito e esse possono essere elaborate
 solo da un sottoinsieme di registri.
 Benché il list-coloring sia un problema 
\begin_inset Formula $\mathcal{NP}$
\end_inset

-hard, Zeitlhofer e Wess sfruttano alcune proprietà dei grafi d'intervallo
 per determinarne una soluzione ammissibile, se esiste, in tempi ragionevoli,
 evitando di esplorare l'intero albero di ricerca.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
manca da descrivere perché i problemi sono intercambiabili.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Airport Gate Assignment Problem (AGAP)
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
AGAP
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema che emerge nel caso aeroportuale consiste nell'assegnare i velivoli
 ai gate dell'aeroporto in modo da utilizzare in modo efficiente le porte
 d'imbarco/sbarco.
 Il problema è noto come 
\emph on
Aircraft Gate Assignment Problem
\emph default
 o 
\emph on
Airport Gate Assignment Problem
\emph default
 (AGAP).
 L'analogia con il problema nel caso delle autostazioni è immediata: basta
 sostituire velivolo ad autobus e gate a piattaforma e il problema può assumere
 gli stessi obiettivi e gli stessi vincoli.
\end_layout

\begin_layout Standard
Una rassegna recente sui modelli e sullo stato dell'arte degli algoritmi
 per l'AGAP è presentata in 
\begin_inset CommandInset citation
LatexCommand citet
key "Dorndorf2007fgs"

\end_inset

.
 Gli autori identificano i vincoli a cui deve sottostare un assegnamento
 ben costruito:
\end_layout

\begin_layout Itemize
un gate può servire un solo velivolo alla volta;
\end_layout

\begin_layout Itemize
devono essere rispettate delle richieste di servizio e devono essere considerate
 delle restrizioni sull'utilizzo di gate adiacenti a quelli occupati;
\end_layout

\begin_layout Itemize
un tempo minimo di occupazione del gate è da tenere in considerazione e
 deve essere garantito un altro tempo minimo prima che il prossimo velivolo
 possa occupare il gate.
\end_layout

\begin_layout Standard
Oltre a questi vincoli possono emergerne degli altri, ad esempio l'assegnamento
 di un velivolo grande ad un gate particolare può implicare che i gate vicini
 possano servire solo velivoli piccoli, o addirittura essere completamente
 disabilitati.
\end_layout

\begin_layout Standard
Gli obiettivi tipici considerati in letteratura sono:
\end_layout

\begin_layout Itemize
minimizzare il numero di velivoli non assegnati a gate (nel caso in cui
 i gate sono una risorsa scarsa);
\end_layout

\begin_layout Itemize
massimizzare le preferenze degli assegnamenti velivolo-gate;
\end_layout

\begin_layout Itemize
minimizzare la distanza percorsa a piedi dai passeggeri per spostarsi dal
 terminal al gate (passeggeri in arrivo o partenza) e tra gate e gate (passegger
i in transito);
\end_layout

\begin_layout Itemize
minimizzare le deviazioni tra l'assegnamento effettivo durante l'esercizio
 rispetto a quello di riferimento in modo da ridurre i disagi ai passeggeri;
\end_layout

\begin_layout Itemize
minimizzare il numero di movimentazioni dei velivoli a terra per effettuare
 le operazioni di manutenzione.
\end_layout

\begin_layout Standard
L'esistenza di criteri così eterogenei e in contrasto fra loro rende difficile
 la determinazione di un buon compromesso fra i differenti obiettivi e la
 soluzione ottima di un modello che considera un solo obiettivo, o una somma
 pesata di questi, potrebbe rivelarsi poco attraente per l'operatore aeroportual
e.
 I vincoli specifici rendono inoltre complessa la risoluzione dei problemi
 di ottimizzazione che si possono costruire.
 Gli autori evidenziano che, probabilmente, uno dei problemi più rilevanti
 dal punto di vista pratico, eppure scarsamente investigato dalla letteratura
 scientifica, è quello della costruzione di assegnamenti 
\emph on
robusti
\emph default
 (detti anche 
\emph on
stabili
\emph default
), che possono fornire soluzioni non ottime rispetto agli obiettivi stabiliti
 ma che siano 
\begin_inset Quotes eld
\end_inset

vicine
\begin_inset Quotes erd
\end_inset

 a queste in termini di prestazione assoluta e che non varino troppo in
 seguito a piccole perturbazioni dei dati d'ingresso, garantendo cioè che
 la soluzione non sarà totalmente compromessa dall'incertezza del valore
 dei parametri del problema.
\end_layout

\begin_layout Standard
I modelli proposti in letteratura possono essere classificati a seconda
 della tipologia di modello, della funzione obiettivo e del modo di considerare
 la variabile temporale.
\end_layout

\begin_layout Standard
Il tempo può essere gestito con delle finestre temporali, singole o multiple.
 Nel caso singolo si considera un gruppo di velivoli che arriva in quel
 periodo di tempo e si assegna ogni velivolo ad un solo gate.
 Il modello deve essere quindi risolto, indipendentemente l'uno dall'altro,
 per ogni finestra temporale.
 Nel caso multiplo l'intero intervallo temporale di pianificazione si divide
 in più finestre di dimensione fissa e si risolve un modello multiperiodo.
 La determinazione dell'ampiezza dell'intervallo deve essere scelta accuratament
e in quanto influenza le dimensioni dei problemi da risolvere e il livello
 di utilizzo dei gate.
\end_layout

\begin_layout Standard
Gli obiettivi possono essere divisi in due grandi macrocategorie: quella
 degli obiettivi orientati al comfort dei passeggeri e quella orientata
 all'efficienza del terminal.
\end_layout

\begin_layout Standard
Molti dei modelli proposti per l'AGAP sono modelli di assegnamento quadratico,
 problema notoriamente 
\begin_inset Formula $\mathcal{NP}$
\end_inset

-hard, dove il costo di assegnare 
\begin_inset Formula $n$
\end_inset

 aerei ad 
\begin_inset Formula $n$
\end_inset

 gate dipende dagli altri assegnamenti e dal flusso di passeggeri fra i
 gate.
 Il problema, nel caso di singole finestre temporali, può essere decritto
 da un modello di programmazione intera che fa uso di variabili a due indici
 per modellizzare l'assegnamento volo-gate, che diventano quattro quando
 la funzione obiettivo e i vincoli sono linearizzati.
 Nel caso di finestre temporali multiple si deve aggiungere un indice alle
 variabili per indicare in quale intervallo temporale avviene l'assegnamento.
 
\end_layout

\begin_layout Standard
Gli autori propongono un nuovo modello, basato quello del multi-mode resource
 constraint project scheduling problem, che considera le attività di arrivo,
 parcheggio e partenza di un velivolo nel tempo, le interazioni fra voli
 e voli e tra voli e gate e una funzione obiettivo che è combinazione lineare
 convessa di più funzioni lineari che identificano distinti indici di prestazion
e del sistema.
 L'algoritmo proposto per la soluzione è una procedura Branch&Bound troncata.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tradurre paragrafo 4.
\end_layout

\begin_layout Plain Layout
Le formulazioni proposte considerano come obiettivo la minimizzazione del
 percorso effettuato dai passeggeri all'interno del terminal, modellato
 come un “Quadratic Assignment Problem” (QAP).
 Il QAP a grandi dimensioni è un problema di difficile soluzione e spesso
 viene affrontato mediante tecniche euristiche.
 Altri modelli matematici fanno ricorso alla programmazione lineare intera
 (PLI) e all'ottimizzazione su rete.
 I modelli di PLI vengono risolti in modo esatto per problemi di piccole
 dimensioni, utilizzando particolari tecniche di Branch&Bound e, nel caso
 di problemi reali, attraverso l'impiego di tecniche meta-euristiche, quale
 la tabu search, la simulated annealing e gli algoritmi genetici.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Per la soluzione del GAP in letteratura sono state proposte anche tecniche
 che fanno riferimento ai Sistemi Esperti e ai Sistemi Rule Based quali
 strumenti di pianificazione.
 Alcuni autori hanno sviluppato modelli e framework di simulazione del processo
 di arrivo e partenza degli aerei nel terminal per valutare la bontà dei
 piani proposti.
 Altri autori, infine, fanno ricorso a tecniche di ottimizzazione stocastica.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I primi contributi scientifici sull'argomento sono dei primi anni '70 del
 secolo passato.
 Fra i primi tentativi di utilizzare metodi quantitativi sviluppati per
 aumentare l'efficienza dell'utilizzo dei gate e per di ridurre al minimo
 le distanze percorse all'interno del terminal aeroportuale di Toronto,
 sono presentati in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "braaksma1971improving,braaksma1977reducing"

\end_inset

, i quali propongono come progettare i terminal aeroportuali.
 Su questo filone il lavoro
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wirasinghe1987airport"

\end_inset

 propone un metodo per calcolare la distanza percorsa a piedi dai passeggeri
 in un terminal multi-molo.
 Tale lavoro presenta, inoltre, un metodo per valutare la geometria ottimale
 di un aeroporto nel caso in cui si voglia minimizzare la distanza percorsa
 dai passeggeri all'interno del terminal.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Robuste1991143,Robuste1991159"

\end_inset

 si considera sia il costo di trasferimento dei passeggeri che quello dei
 bagagli.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Bandara199259"

\end_inset

 viene esteso il lavoro
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "wirasinghe1987airport"

\end_inset

 introducendo altri tipi di terminal proponendo alcune linee guida per la
 progettazione dei terminal aeroportuali.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Bandara199259"

\end_inset

 si presentano dei modelli per valutare le prestazioni dei terminal aeroportuali.
 
\end_layout

\begin_layout Standard
In parallelo si sono sviluppati lavori, quali
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "babic1984aircraft,mangoubi1985oga"

\end_inset

, che forniscono dei tentativi di risoluzione del AGAP utilizzando i metodi
 della ricerca operativa e della modellazione mediante programmi interi.
 In questi approcci la distanza percorsa nel terminal viene considerata
 come funzione dei flussi di arrivo e partenza dei passeggeri, dei flussi
 dei passeggeri in transito, delle distanze fra gate e gate, delle distanze
 fra i gate e le sale di recupero dei bagagli, delle distanze fra il banco
 di check-in e il gate e di un costo di assegnamento aereo-gate, dato un
 certo layout del terminal.
 Nella modellizzazione del problema, il costo associato all'assegnamento
 del volo al gate dipende dalle distanze dalle strutture di servizio principali
 quali i gate, il banco di check-in e l'area di recupero bagagli.
\end_layout

\begin_layout Standard
In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "babic1984aircraft"

\end_inset

 il problema viene ridotto ad un problema di Programmazione Lineare Intera
 0/1 in cui si considerano gli assegnamenti pesati in base ai flussi dei
 passeggeri in arrivo e in partenza e il calcolo di una soluzione ottima
 del modello viene effettuato con un algoritmo di Branch&Bound (B&B).
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "mangoubi1985oga"

\end_inset

 il problema viene formulato con un modello di assegnamento quadratico che
 viene quindi linearizzato.
 Gli autori usano un rilassamento lineare e un'euristica greedy per risolvere
 il modello, fanno notare che la risoluzione esatta di un modello di un
 assegnamento quadratico linearizzato è difficile da risolvere e non propongono
 algoritmi per risolvere direttamente il modello proposto.
\end_layout

\begin_layout Standard
In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "haghani1998oga"

\end_inset

 viene proposto un modello quadratico di PLI linearizzato in cui i flussi
 di trasferimento sono dati noti.
 In questo modo la complessità del problema aumenta notevolmente rispetto
 a quella del problema proposto in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "mangoubi1985oga"

\end_inset

 e gli autori devono ricorrere ad un algoritmo di risoluzione euristico,
 che consiste nel generare varie soluzioni ammissibili per il problema di
 programmazione intera e nello scegliere quella a cui corrisponde la miglior
 soluzione (distanza minima).
 Il modello matematico proposto viene risolto solo per problemi di piccola
 dimensione, con meno di 10 voli e 5 gate, per poter determinare la qualità
 della soluzione determinata dell'algoritmo euristico rispetto alla soluzione
 ottima.
\end_layout

\begin_layout Standard
In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "yan2001omo"

\end_inset

 è proposto un modello multi-obiettivo formulato come un programma 0/1 multi-cri
terio.
 Gli indicatori di prestazione, entrambi da minimizzare, sono la distanza
 totale percorsa dai passeggeri e il tempo di attesa dei passeggeri prima
 che il gate sia liberato dal volo precedente assegnato allo stesso gate.
 Per poter utilizzare gli strumenti di risoluzione della PLI il modello
 viene ridotto ad un solo obiettivo, impiegando come funzione obiettivo
 una combinazione lineare convessa delle due precedenti.
 Per considerare il secondo obiettivo introducono delle finestre temporali
 che indicano i tempi al più presto e al più tardi in cui un volo potrebbe
 essere assegnato ad un gate.
 Costruiscono quindi un modello di assegnamento con i vincoli di associare
 tutti voli ad un gate e di non assegnare due voli che interessano la stessa
 finestra temporale ad uno stesso gate.
 Per risolvere il modello adottano un metodo basato sulla generazione di
 colonne integrata con un algoritmo euristico per la determinazione delle
 colonne iniziali e di un metodo di Branch&Bound per la determinazione della
 soluzione ottima intera, o comunque di soluzioni intere, che viene applicato
 ad un caso di studio dell'aeroporto Chiang Kai-Shek di Taiwan con 214 voli
 e 24 gate.
\end_layout

\begin_layout Standard
In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "gosling1990des,srihari1991esm,Vanderstraeten198815"

\end_inset

 si propongono soluzioni al AGAP mediante l'uso dei sistemi esperti.
 Un sistema esperto è un programma per il supporto alle decisioni basato
 sulla conoscenza delle regole del sistema che cerca di riprodurre le prestazion
i di una o più persone esperte in un determinato campo di attività, in questo
 caso di esperti nel campo della pianificazione degli assegnamenti volo-gate
 degli aeroporti.
 Queste applicazioni non sono progettate per trovare una soluzione ottima
 ma ricercano una soluzione ammissibile e soddisfacente per problemi complessi
 di grandi dimensioni.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "cheng1997kba"

\end_inset

 viene proposta l'integrazione di un sistema esperto con la programmazione
 matematica.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Si tratta di un processo di utilizzare il modello matematico per cercare
 una soluzione fattibile dando un maggiore controllo per le autorità aeroportual
i di cambiare l'importanza dei criteri.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Altri lavori basati sulla simulazione si possono trovare, ad esempio, in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "yan2002sfe"

\end_inset

.
 Mentre la maggior parte degli studi sono concentrati sull'ottimizzazione
 statica degli assegnamenti, la simulazione può essere utilizzata per analizzare
 le relazioni tra gli assegnamenti prodotti e i fattori che influenzano
 la soluzione durante l'esercizio.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "yan2002sfe"

\end_inset

 viene proposto un framework di simulazione che non solo è in grado di analizzar
e gli effetti dei ritardi stocastici dei voli sull'assegnamento statico
 dei gate, ma permette inoltre di valutare di quanto l'introduzione di buffer
 di tempo migliori la robustezza delle soluzioni.
 Tale simulazione è applicata al caso dell'aeroporto Chiang Kai-Shek di
 Taiwan per valutare le prestazioni degli assegnamenti statici.
\end_layout

\begin_layout Standard
Dal momento che il problema è NP-hard (si veda, ad esempio
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "yan1998nmg"

\end_inset

) , molti ricercatori cercarono approcci euristici diversi per facilitare
 il processo di risoluzione.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "haghani1998oga"

\end_inset

 viene proposta un'euristica che assegna i voli con più passeggeri ai gate
 che sono più vicini, quando non c'è sovrapposizione temporale degli intervalli
 di occupazione del gate.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "xu2001airport"

\end_inset

 viene proposta una metaeuristica Tabu Search per il AGAP.
 Il loro algoritmo sfrutta le particolari proprietà del vicinato e adotta
 una strategia efficace per la gestione della lista delle soluzioni candidate
 ad essere migliorate.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Da qui in poi parte una specie di ripetizione...
 tenere e spostare quello che non è stato già citato
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema nel caso degli aeroporti è stato affrontato a partire dalla
 metà degli anni 1980 e l'obiettivo considerato principale è minimizzare
 la distanza totale percorsa a piedi dai passeggeri nel terminal.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citet
key "mangoubi1985oga"

\end_inset

 si propone una tecnica di soluzione esatta che fa uso di un modello di
 programmazione lineare intera, di cui risolvono il rilassamento lineare,
 e di un'euristica greedy.
 Le istanze provengono dalle operazioni del Toronto International Airport.
 In
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citet
key "hamzawi1986map"

\end_inset

 viene presentato uno dei primi lavori che fa uso di calcolatori elettronici
 per la pianificazione dei gate e in
\begin_inset CommandInset citation
LatexCommand citet
key "Brazile1988"

\end_inset

 è proposto un sistema esperto 
\begin_inset Note Note
status open

\begin_layout Plain Layout
realizzato in Prolog 
\end_layout

\end_inset

 che opera in due fasi.
 La prima fase consiste nel generare quotidianamente i piani di assegnamento.
 La seconda fase consiste nel modificare i piani in tempo reale cercando
 di effettuare il minor numero di riassegnamenti.
 Con
\begin_inset space ~
\end_inset

 si introduce un'altra delle prime applicazioni in questo settore.
 In
\begin_inset CommandInset citation
LatexCommand citet
key "srihari1991esm"

\end_inset

 si presenta una rassegna sui sistemi esperti.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "cheng1997kba"

\end_inset

 si presenta l'integrazione di un sistema rule-based con una procedura euristica
 di assegnamento.
 
\begin_inset CommandInset citation
LatexCommand citet
key "yan1998nmg"

\end_inset

 utilizzano invece un modello di ottimizzazione su rete.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "haghani1998oga"

\end_inset

 e in 
\begin_inset CommandInset citation
LatexCommand citet
key "bolat2000ppr"

\end_inset

 il GAP è modellato come un QAP.
 In
\begin_inset CommandInset citation
LatexCommand citet
key "yan2001omo"

\end_inset

 si considerano in funzione obiettivo anche i tempi di attesa dei passeggeri,
 attraverso una formulazione di programmazione zero-uno multi-obiettivo.
 Si presenta un framework di simulazione, testato sui dati dell'aeroporto
 di Taipei, che analizza gli effetti dei ritardi stocastici dei voli.
 In 
\begin_inset CommandInset citation
LatexCommand citet
key "lim2005ags"

\end_inset

 viene introdotto il concetto di finestre temporali nella modellazione del
 GAP.
\end_layout

\begin_layout Standard
Gli assegnamenti robusti sono considerati da
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "bolat2000ppr,Lim2005,DBLP:conf/icai/Li09,Zheng2010"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
aggiungere descrizione.
 Nel bib ci sono gli abstract
\end_layout

\end_inset

.
 In 
\begin_inset CommandInset citation
LatexCommand cite
key "Lim2005"

\end_inset

 viene formulato un modello matematico che considera la robustezza del piano
 di assegnamento definendo una probabilità di conflitto fra due aerei che
 occupano lo stesso gate.
 Gli autori propongono un algoritmo euristico ibrido che impiega una tabu
 search ed una ricerca locale.
\end_layout

\begin_layout Standard
La letteratura scientifica ha proposto, ad oggi, pochi lavori sul real-time
 recovery degli assegnamenti, ad eccezione di 
\begin_inset CommandInset citation
LatexCommand cite
key "Blanco2003,Tang2010"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Itemize
Analisi della letteratura di rescheduling
\end_layout

\begin_layout Itemize
Aircraft Rescheduling Problem
\end_layout

\begin_deeper
\begin_layout Itemize
Railway Rescheduling Problem (RRP)
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Section
Modelli per AGAP
\end_layout

\begin_layout Standard
Il principale modello modello di programmazione lineare intera è quello
 proposto in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "babic1984aircraft"

\end_inset

.
 La funzione obiettivo consiste nella minimizzazione della distanza percorsa
 nel terminal dai passeggeri in arrivo o partenza.
 La modellizzazione del problema richiede i dati seguenti:
\end_layout

\begin_layout Itemize
La tabella oraria dei voli con tempo di arrivo e partenza dei velivoli,
 che si assume sia fissata;
\end_layout

\begin_layout Itemize
Il numero di gate, che si assume essere sufficiente a servire tutti i voli
 di ogni finestra temporale dell'intervallo di pianificazione;
\end_layout

\begin_layout Itemize
Il numero di passeggeri di ogni volo in arrivo e partenza;
\end_layout

\begin_layout Itemize
Il layout dell'aeroporto con le distanze fra i gate e l'area di recupero
 bagagli e la distanza dal banco di check-in ad ogni gate.
\end_layout

\begin_layout Standard
Il modello è il seguente:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & z=\sum_{i=1}^{m}\sum_{j=1}^{n}\left(P_{i}^{a}D_{j}^{a}+P_{i}^{d}D_{j}^{d}\right)x_{ij}\label{eq:min_gates_pesati-3}\\
\sum_{j=1}^{n}x_{ij}=1 &  & i=1,2,\ldots,m\label{eq:vincolo_assegnamento_0-3}\\
\sum_{i^{\prime}\in I_{i}}x_{i^{\prime}j}+x_{ij}\leq1 &  & i=1,2,\ldots,m\, j=1,2,\ldots,n\label{eq:vincolo_compatibilita_bus_0-3}\\
x_{ij}\in\{0,\,1\} &  & i=1,2,\ldots,m\, j=1,2,\ldots,n\label{eq:x_ik_dominio-3}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
dove:
\end_layout

\begin_layout Description
\begin_inset Formula $m$
\end_inset

 è il numero di voli;
\end_layout

\begin_layout Description
\begin_inset Formula $n$
\end_inset

 è il numero di gate;
\end_layout

\begin_layout Description
\begin_inset Formula $P_{i}^{a}$
\end_inset

 è il numero di passeggeri in arrivo del volo 
\begin_inset Formula $i$
\end_inset

;
\end_layout

\begin_layout Description
\begin_inset Formula $D_{j}^{a}$
\end_inset

 è la distanza che devono percorrere i passeggeri in arrivo dal gate 
\begin_inset Formula $j$
\end_inset

 al recupero bagagli;
\end_layout

\begin_layout Description
\begin_inset Formula $P_{i}^{d}$
\end_inset

 è numero di passeggeri in partenza del volo 
\begin_inset Formula $i$
\end_inset

;
\end_layout

\begin_layout Description
\begin_inset Formula $D_{j}^{d}$
\end_inset

 è la distanza che devono percorrere i passeggeri in partenza dal banco
 di check-in al fate 
\begin_inset Formula $j$
\end_inset

;
\end_layout

\begin_layout Description
\begin_inset Formula $I_{i}$
\end_inset

 è l'insieme dei voli che hanno tempo di occupazione del gate sovrapposto
 a quello del volo 
\begin_inset Formula $i$
\end_inset

;
\end_layout

\begin_layout Description
\begin_inset Formula $x_{ij}$
\end_inset

 è la variabile decisionale 0/1, che vale 1 se il volo 
\begin_inset Formula $i$
\end_inset

 è assegnato al gate 
\begin_inset Formula $j$
\end_inset

, 0 altrimenti.
\end_layout

\begin_layout Standard
La funzione obiettivo rappresenta la distanza percorsa dai passeggeri in
 arrivo e in partenza.
 Questa funzione presuppone che per ogni velivolo che occupa un gate c'è
 un certo numero di passeggeri in arrivo quando l'aereo arriva al gate e
 un certo numero di passeggeri in partenza quando l'aereo parte dal gate.
 Il volo 
\begin_inset Formula $i$
\end_inset

 in realtà rappresenta il velivolo in arrivo e partenza dal gate, che corrispond
e a due voli distinti.
 
\end_layout

\begin_layout Standard
Il modello include due vincoli.
 L'equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_assegnamento_0-3"

\end_inset

 è il vincolo che impone che a ogni aereo di essere assegnato ad un solo
 gate.
 L'equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0-3"

\end_inset

 è il vincolo che impone che duo o più velivoli non possono essere assegnati
 allo stesso gate se i loro tempi di occupazione si sovrappongono 
\end_layout

\begin_layout Standard
In questo modello non è considerata la distanza percorsa dai passeggeri
 in transito, che rende il modello più complicato.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
x Gianluca: riesci ad inserire anche gli altri modelli (da pag 16 a pag
 19 di GaoF)?
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Nuove formulazioni e modelli
\begin_inset CommandInset label
LatexCommand label
name "chap:Nuove-formulazioni"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
New formulations and models
\end_layout

\end_inset


\end_layout

\begin_layout Section
Terminologia
\end_layout

\begin_layout Standard
Prima di procedere alla descrizione delle formulazioni e dei modelli proposti
 è opportuno fornire alcune definizioni di teoria dei grafi, come in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "serafini2009ricerca"

\end_inset

.
\end_layout

\begin_layout Standard
Un grafo 
\begin_inset Formula $G$
\end_inset

 è una coppia ordinata di insiemi 
\begin_inset Formula $(V,\, E)$
\end_inset

 dove 
\begin_inset Formula $V$
\end_inset

 è un insieme detto insieme dei vertici ed 
\begin_inset Formula $E$
\end_inset

 è un insieme detto insieme degli archi o dei lati, tali che gli elementi
 di 
\begin_inset Formula $E$
\end_inset

 siano coppie di elementi di 
\begin_inset Formula $V$
\end_inset

, ovvero 
\begin_inset Formula $|E|\leq|V|^{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Un arco è una coppia 
\begin_inset Formula $(v,w)$
\end_inset

 di vertici in 
\begin_inset Formula $V$
\end_inset

, cioè 
\begin_inset Formula $v\in V$
\end_inset

 e 
\begin_inset Formula $w\in V$
\end_inset

.
 I vertici 
\begin_inset Formula $u$
\end_inset

 e 
\begin_inset Formula $v$
\end_inset

 si dicono adiacenti se sono connessi da un arco.
\end_layout

\begin_layout Standard
Il grafo si dice orientato se 
\begin_inset Formula $E$
\end_inset

 è una relazione binaria tra vertici mentre un grafo è non orientato se
 l'insieme 
\begin_inset Formula $E$
\end_inset

 è costituito da coppie non ordinate di vertici.
\end_layout

\begin_layout Standard
In un grafo orientato, un arco 
\begin_inset Formula $(w,v)$
\end_inset

 si dice incidente da 
\begin_inset Formula $w$
\end_inset

 in 
\begin_inset Formula $v$
\end_inset

.
 Un vertice 
\begin_inset Formula $w$
\end_inset

 si dice adiacente a 
\begin_inset Formula $v$
\end_inset

 se e solo se 
\begin_inset Formula $(v,w)\in E$
\end_inset

.
\end_layout

\begin_layout Standard
In un grafo non orientato il grado di un vertice è il numero di archi che
 da esso si dipartono
\end_layout

\begin_layout Standard
In un grafo orientato il grado entrante (uscente) di un vertice è il numero
 di archi incidenti in (da) esso.
\end_layout

\begin_layout Standard
In un grafo orientato il grado di un vertice è la somma del suo grado entrante
 e del suo grado uscente.
\end_layout

\begin_layout Standard
In alcuni casi ogni arco ha un peso (o costo) associato.
 Il costo può essere determinato tramite una funzione di costo, 
\begin_inset Formula $c:E\rightarrow\mathbb{R}$
\end_inset

, dove 
\begin_inset Formula $\mathbb{\mathbb{R}}$
\end_inset

 è l’insieme dei numeri reali (o interi).
\end_layout

\begin_layout Standard
Un sottografo di 
\begin_inset Formula $G$
\end_inset

 è un grafo 
\begin_inset Formula $H=(V^{*},E^{*})$
\end_inset

 tale che 
\begin_inset Formula $V^{*}\subseteq V$
\end_inset

 e 
\begin_inset Formula $E^{*}\subseteq E$
\end_inset

 ed essendo 
\begin_inset Formula $H$
\end_inset

 un grafo deve valere che 
\begin_inset Formula $E^{*}\subseteq V^{*}\times V^{*}$
\end_inset


\end_layout

\begin_layout Standard
Il sottografo di 
\begin_inset Formula $G$
\end_inset

 indotto da 
\begin_inset Formula $V^{*}$
\end_inset

 è il sottografo 
\begin_inset Formula $H=(V^{*},E^{*})$
\end_inset

 tale che 
\begin_inset Formula $E^{*}={(w,v)\in E|w,v\in V^{*}}$
\end_inset

.
\end_layout

\begin_layout Standard
Un grafo completo è un grafo che ha un arco tra ogni coppia di vertici.
 Il numero di archi di un grafo completo è 
\begin_inset Formula $|E|=\frac{|V|^{2}-|V|}{2}$
\end_inset

.
\end_layout

\begin_layout Standard
Una cricca è un insieme 
\begin_inset Formula $V$
\end_inset

 di vertici tale che il sottografo indotto da 
\begin_inset Formula $V$
\end_inset

 è un grafo completo.
 La dimensione di una cricca è il numero di vertici che contiene.
 Una cricca è massimale se non esiste nessun altra cricca in cui è contenuta.
 Una cricca massima è quella cricca che ha dimensione massima.
 Il numero di cricca 
\begin_inset Formula $\omega(G)$
\end_inset

 è il numero di vertici di una cricca massima del grafo 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Una decomposizione in cricche di dimensione 
\begin_inset Formula $k$
\end_inset

 è una partizione dei vertici 
\begin_inset Formula $V=V_{1}\cup V_{2}\cup\ldots\cup V_{k}$
\end_inset

 tale che ogni 
\begin_inset Formula $V_{i}$
\end_inset

 sia una cricca, i 
\begin_inset Formula $V_{i}$
\end_inset

 siano insiemi disgiunti e ogni arco di 
\begin_inset Formula $G$
\end_inset

 sia presente in almeno uno dei sottografi completi indotti.
 Il numero di partizione in cricche di 
\begin_inset Formula $G$
\end_inset

, indicato con 
\begin_inset Formula $k(G)$
\end_inset

, è la dimensione della più piccola decomposizione in cricche di 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
Un insieme stabile, o insieme indipendente, è un sottoinsieme 
\begin_inset Formula $X$
\end_inset

 di vertici tali che nessuno dei quali sia adiacente agli altri.
 Il numero di elementi dell'insieme di cardinalità massima è detto numero
 di stabilità e si indica con 
\begin_inset Formula $\alpha(G)$
\end_inset

.
\end_layout

\begin_layout Standard
Una buona 
\begin_inset Formula $c$
\end_inset

-colorazione è una partizione dei vertici 
\begin_inset Formula $V=X_{1}+X_{2}+\ldots+X_{c}$
\end_inset

 tale che ogni 
\begin_inset Formula $X_{i}$
\end_inset

 sia un insieme stabile (il simbolo 
\begin_inset Formula $+$
\end_inset

 indica l'unione di insiemi disgiunti).
\end_layout

\begin_layout Standard
Il numero cromatico di 
\begin_inset Formula $G$
\end_inset

, indicato con 
\begin_inset Formula $\chi(G)$
\end_inset

, è il più piccolo 
\begin_inset Formula $c$
\end_inset

 per cui esista una buona colorazione di 
\begin_inset Formula $G$
\end_inset


\end_layout

\begin_layout Standard
Il grafo complementare di 
\begin_inset Formula $G$
\end_inset

 è il grafo 
\begin_inset Formula $\overline{G}=(V,\overline{E})$
\end_inset

 dove 
\begin_inset Formula $\overline{E}=\{(x,y)\in V\times V|x\neq y\wedge(x,y)\notin E\}$
\end_inset

.
\end_layout

\begin_layout Standard
Un grafo non orientato 
\begin_inset Formula $G=(V,E)$
\end_inset

 è bipartito se i suoi vertici possono essere partizionati in due insiemi
 disgiunti 
\begin_inset Formula $V_{1}$
\end_inset

 e 
\begin_inset Formula $V_{2}$
\end_inset

 tali che ogni vertice è incidente in un nodo di un insieme e l'altro è
 incidente ad un vertice dell'altro insieme.
 Un grafo bipartito viene indicato con 
\begin_inset Formula $G=(V_{1},V_{2},E)$
\end_inset

 ed è 2-colorabile.
\end_layout

\begin_layout Standard
In generale per un grafo valgono le disequazioni 
\begin_inset Formula $\omega(G)\leq\chi(G)$
\end_inset

 e 
\begin_inset Formula $\alpha(G)\leq k(G)$
\end_inset

.
 Per il grafo complementare vale che 
\begin_inset Formula $\omega(G)=\alpha(\overline{G})$
\end_inset

 e 
\begin_inset Formula $\chi(G)=k(\overline{G})$
\end_inset

.
\end_layout

\begin_layout Standard
Il grafo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 si dice perfetto se per ogni grafo indotto 
\begin_inset Formula $G^{*}=(V^{*},\, E^{*})$
\end_inset

 vale 
\begin_inset Formula $\omega(G^{*})=\chi(G^{*})$
\end_inset

.
 
\end_layout

\begin_layout Section
Formulazione del problema di minimizzazione delle piattaforme 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Problema
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il gestore di un'autostazione potrebbe richiedere che il piano di assegnamento
 fermate-piattaforme occupi durante, l'orizzonte di pianificazione il numero
 minimo possibile di piattaforme.
 Una politica di gestione che considera questo obiettivo permette di ridurre
 le spese di gestione ed eventualmente di produrre ulteriore profitto.
 Il maggiore profitto si può ottenere accogliendo un numero maggiore di
 servizi fino a saturare la capacità dell'autostazione o con l'affitto delle
 piattaforme inutilizzate ad altri operatori di trasporto.
 Tale politica di gestione permette di utilizzare al massimo l'area del
 piazzale dell'autostazione, aumentando la densità di servizi, anche se
 la soluzione prodotta potrebbe essere poco robusta.
 Il software GatePlanner di Pluservice, infatti, considera come obiettivo
 quello di minimizzare il numero di piattaforme in uso durante una giornata.
 La scelta di tale obiettivo è motivata, inoltre, dal fatto che le piattaforme
 non utilizzate possono essere impiegate per scali di servizi e soste di
 veicoli.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Approccio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per questo obiettivo proponiamo:
\end_layout

\begin_layout Itemize
la formulazione del problema come problema di restricted-coloring di un
 grafo d'intervallo;
\end_layout

\begin_layout Itemize
un modello matematico per la risoluzione del problema di restricted-coloring;
\end_layout

\begin_layout Itemize
un algoritmo esatto ed efficiente (tratto da
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Zeitlhofer20031411"

\end_inset

 e con l'aggiunta di vincoli locali sulle corse 
\begin_inset Quotes eld
\end_inset

bis
\begin_inset Quotes erd
\end_inset

).
\end_layout

\begin_layout Subsection*
Formulazione del problema
\end_layout

\begin_layout Standard
Il problema decisionale del list-coloring di un grafo degli intervalli è
 il seguente:
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Dati
\end_layout

\begin_layout Itemize
un grafo d'intervallo 
\begin_inset Formula $G=(V,E)$
\end_inset

,
\end_layout

\begin_layout Itemize
un insieme di colori 
\begin_inset Formula $C$
\end_inset

,
\end_layout

\begin_layout Itemize
una famiglia di insiemi (liste di compatibilità) 
\begin_inset Formula $\left\{ L(i)\right\} _{i\in V}$
\end_inset

 e
\end_layout

\begin_layout Itemize
un numero positivo 
\begin_inset Formula $\chi_{r}$
\end_inset


\end_layout

\begin_layout Plain Layout
determinare il colore di ogni vertice 
\begin_inset Formula $i\in V$
\end_inset

 tale che
\end_layout

\begin_layout Itemize
nessuna coppia di vertici adiacenti abbia lo stesso colore (colorazione
 propria),
\end_layout

\begin_layout Itemize
il colore assegnato ad ogni nodo 
\begin_inset Formula $i\in V$
\end_inset

 sia presente nella lista di compatibilità 
\begin_inset Formula $L(i)$
\end_inset

 e
\end_layout

\begin_layout Itemize
il numero di colori distinti usati sia minore o uguale a 
\begin_inset Formula $\chi_{r}$
\end_inset

 .
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Per modellare il problema si considerino l'insieme delle piattaforme 
\begin_inset Formula $C=\{c_{1},\,\ldots,\, c_{m}\}$
\end_inset

, l'insieme delle fermate dei bus da pianificare 
\begin_inset Formula $V=\{v_{1},\,\ldots,\, v_{n}\}$
\end_inset

, e, per ogni fermata 
\begin_inset Formula $v_{i}$
\end_inset

, i tempi 
\begin_inset Formula $a_{i}$
\end_inset

 tempo di inizio fermata programmato del bus 
\begin_inset Formula $i$
\end_inset

 (scheduled arriving time) e 
\begin_inset Formula $d_{i}$
\end_inset

 tempo di fine fermata schedulato del bus 
\begin_inset Formula $i$
\end_inset

 (scheduled departured time) e la lista 
\begin_inset Formula $L(v_{i})$
\end_inset

 delle piattaforme compatibili con la fermata 
\begin_inset Formula $v_{i}$
\end_inset

.
 L'intervallo 
\begin_inset Formula $(a_{i},\, d_{i})$
\end_inset

 definisce l'intervallo di occupazione di una piattaforma da parte della
 fermata 
\begin_inset Formula $v_{i}$
\end_inset

.
 Due fermate 
\begin_inset Formula $v_{i}$
\end_inset

 e 
\begin_inset Formula $v_{j}$
\end_inset

 i cui intervalli temporali di occupazione del gate si sovrappongono, necessaria
mente non possono essere assegnati alla stessa piattaforma.
 Sia 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 il grafo di interferenza delle fermate, avente 
\begin_inset Formula $V$
\end_inset

 insieme dei nodi e 
\begin_inset Formula $E$
\end_inset

 insieme degli archi, costruito in modo che esiste un arco da ogni fermata
 ad ogni altra fermata tale che gli intervalli temporali abbiano intersezione
 non vuota.
 Il grafo non è orientato e gli archi 
\begin_inset Formula $(v_{i},\, v_{j})\in E$
\end_inset

 sono le coppie non ordinate 
\begin_inset Formula $v_{i}\in V,\, v_{j}\in V\,:\,(a_{i},\, d_{i})\cap(a_{j},\, d_{j})\neq\emptyset$
\end_inset

.
 Tale grafo è una rappresentazione di un insieme di intervalli e appartiene
 alla classe dei grafi d'intervallo.
 Si ricorda che un grafo d'intervallo è un grafo perfetto per cui il numero
 cromatico 
\begin_inset Formula $\chi$
\end_inset

 è uguale alla dimensione della cricca massima 
\begin_inset Formula $\omega$
\end_inset

.
 Sia 
\begin_inset Formula $\mathcal{Q}=[Q_{1},Q_{2},\ldots,Q_{r}]$
\end_inset

 una decomposizione in cricche massimali costruita in modo che la matrice
 delle cricche sia ordinata secondo la consecutive one property (C1P).
 L'ordinamento può essere sfruttato efficientemente per potare l'albero
 di ricerca in modo da evitare l'esplorazione di stati 
\begin_inset Note Note
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
delle spazio di ricerca
\end_layout

\end_inset

 già esplorati.
 Ogni elemento 
\begin_inset Formula $Q_{t}$
\end_inset

 contiene l'insieme delle fermate incompatibili fra loro e per la modellizzazion
e e la risoluzione del problema è possibile non considerare gli insiemi
 di cardinalità 1 (nodi isolati).
 Le componenti e l'ordinamento del vettore 
\begin_inset Formula $\mathcal{Q}$
\end_inset

 possono essere determinate in tempo polinomiale 
\begin_inset Formula $O(n\log n)$
\end_inset

 usando algoritmi come quello descritto in
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Wang1994"

\end_inset

.
 Il problema di assegnamento dei veicoli alle piattaforme è esprimibile
 come problema di list-coloring definito sul grafo d'intervallo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 con compatibilità 
\begin_inset Formula $L\,:\, V\rightarrow2^{C}$
\end_inset

, dove 
\begin_inset Formula $V$
\end_inset

 rappresenta l'insieme dei vertici, 
\begin_inset Formula $C$
\end_inset

 l'insieme dei colori, e 
\begin_inset Formula $L(v_{i})$
\end_inset

 la lista di compatibilità.
 Ogni fermata corrisponde ad un vertice e ogni piattaforma ad un colore.
\end_layout

\begin_layout Standard
Ogni allocazione delle piattaforme ammissibile corrisponde ad una colorazione
 propria dei nodi del grafo in cui il colore assegnato al nodo sia compatibile
 col nodo stesso, e viceversa.
\end_layout

\begin_layout Paragraph
Esempio
\end_layout

\begin_layout Standard
Si consideri di dover assegnare le piattaforme agli autobus che effettuano
 i servizi di trasporto programmati come da tabella 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:fermate_e_compatibilita"

\end_inset

, in cui i numeri identificanti i servizi sono ordinati per tempo di inizio
 dell'intervallo di fermata.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\color black
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Servizio
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arrivo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Partenza
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compatibilità
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
1
\color inherit
, 
\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
1
\color inherit
, 
\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
1
\color inherit
, 
\color green
2
\color inherit
, 
\color blue
3
\color inherit
, 
\color magenta
4
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:fermate_e_compatibilita"

\end_inset

Tabella oraria e compatibilità autobus-piattaforme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nella figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intervalli-temporali"

\end_inset

 sono rappresentati i sette intervalli temporali delle fermate come barre
 rettangolari di lunghezza proporzionale alla durata dell'intervallo.
 Le barre sono disposte su quattro livelli in modo che su ogni livello non
 siano presenti sovrapposizioni.
 La disposizione sui livelli rappresenterebbe una possibile soluzione al
 problema se tutte le fermate fossero compatibili con tutte le piattaforme.
 A partire dagli intervalli è possibile costruire un grafo in cui ad ogni
 intervallo corrisponde un vertice ed esiste un lato se due intervalli hanno
 intersezione non vuota.
 Il grafo 
\begin_inset Formula $G=(V,E)$
\end_inset

 è un grafo d'intervallo in quanto rappresenta l'intersezione di un multiinsieme
 d'intervalli definiti sulla retta reale.
 Ogni intervallo del multiinsieme corrisponde ad un vertice e due vertici
 sono connessi da un lato se e solo se gli intervalli corrispondenti hanno
 intersezione non vuota.
 Il numero minimo di livelli necessari e sufficienti per disegnare gli intervall
i senza sovrapposizioni corrisponde alla dimensione della cricca massima.
 Sia 
\begin_inset Formula $\mathcal{Q}_{G}$
\end_inset

 l'insieme di tutte le cricca massimali distinte.
 Il grafo si può esprimere come il grafo unione delle cricca massimali:
 
\begin_inset Formula $G=\cup_{Q\in\mathcal{Q}_{G}}Q$
\end_inset

 .
 Si noti che il numero di cricca massimali di un grafo d'intervallo è minore
 o uguale alla cardinalità dell'insieme dei nodi.
 Il problema della ricerca di tutte le cricca massimali di un grafo d'intervallo
 è un problema polinomiale.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Data una rappresentazione per intervalli di un grafo con 
\begin_inset Formula $n$
\end_inset

 vertici, sia la sequenza ordinata degli estremi 
\begin_inset Formula $d_{1},d_{2},\ldots,d_{2n}$
\end_inset

 con 
\begin_inset Formula $d_{i}<d_{j}$
\end_inset

 per 
\begin_inset Formula $1\leq i<j\leq2n$
\end_inset

.
 Tutti gli intervalli che hanno intersezione non nulla con l'intervallo
 aperto 
\begin_inset Formula $(d_{i},d_{i+l})$
\end_inset

 formano una cricca massimale se e solo se 
\begin_inset Formula $d_{i}$
\end_inset

 è un estremo sinistro e 
\begin_inset Formula $d_{i+l}$
\end_inset

 è un estremo destro, non necessariamente dello stesso intervallo.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I grafi d'intervallo appartengono alla classe più generale dei cosiddetti
 grafi perfetti, grafi per cui vale che il numero di cricca è uguale al
 numero cromatico (
\begin_inset Formula $\omega(G)=\chi(G)$
\end_inset

) e il numero di stabilità è uguale a quello di partizioni in cricche 
\begin_inset Formula $\alpha(G)=k(G)$
\end_inset

..
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align left
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering{
\backslash
input{img/intervals_and_graph}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Intervalli-temporali"

\end_inset

Intervalli e grafo d'intervallo corrispondente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
Nella figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Grafo-intervallo"

\end_inset

 sono rappresentati il grafo d'intervallo, le liste di compatibilità, le
 cricche massimali ed una soluzione ammissibile del problema di list-coloring.
 Si noti che i vertici sono numerati secondo un 
\emph on
ordine perfetto
\emph default
.
 Le liste di colori ammissibili per ogni vertice sono elencate vicino al
 vertice stesso.
 Le cricche massimali sono evidenziate dalle linee tratteggiate.
 Si noti che il numero cromatico (il grafo è 4-colorabile) coincide con
 il numero di cricca, che vale 4, e questo permette di dedurre che la soluzione
 è ottima.
 Le cricche massimali sono {1,2,3}, {2,3,4,5}, {4,5,6} e {5,6,7}.
 I vertici {2,3,4,5,6} sono presenti su più di una cricca massimale e per
 questo sono chiamati vertici d'interfaccia, mentre i rimanenti vertici
 {1, 7} formano una cricca con tutti i loro vicini e sono detti vertici
 simpliciali.
 Una volta colorati i vertici d'interfaccia è possibile determinare una
 colorazione univoca dei vertici rimanenti, ad esempio scegliendo il primo
 colore disponibile; tale procedura permette di non esplorare soluzioni
 ridondanti.
 
\end_layout

\begin_layout Standard
Si ricorda che un vertice 
\begin_inset Formula $v$
\end_inset

 di 
\begin_inset Formula $G=(V,E)$
\end_inset

 è simpliciale se l'insieme dei nodi adiacenti 
\begin_inset Formula $N(v)$
\end_inset

 induce un sottografo completo di 
\begin_inset Formula $G$
\end_inset

.
 Un ordinamento dei vertici 
\begin_inset Formula $\sigma=[v_{1},v_{2},\ldots,v_{n}]$
\end_inset

 tale per cui 
\begin_inset Formula $X_{i}=\left\{ v_{j}\in N(v_{i})|j>i\right\} $
\end_inset

 è un grafo completo, è detta sequenza di eliminazione perfetta.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Si noti come i nodi del grafo in figura siano numerati secondo una sequenza
 di eliminazione perfetta.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering{
\backslash
input{img/interval_graph}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Grafo-intervallo"

\end_inset

Istanza e soluzione di un problema di list-coloring
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si definisce nel domino dei numeri reali la funzione 
\begin_inset Formula $f(x)$
\end_inset

, che assume come valore la differenza tra il numero di estremi sinistri
 e destri presenti nella retta reale prima di 
\begin_inset Formula $x$
\end_inset

.
 Per ogni punto reale 
\begin_inset Formula $x$
\end_inset

 è quindi definita una cricca e per ogni cricca esiste un numero reale 
\begin_inset Formula $x$
\end_inset

 che la definisce.
 Il valore della massima cricca è dato da 
\begin_inset Formula $\chi=\max f(x)$
\end_inset

.
 Per colorare il grafo d'intervallo nel caso di colorazione di grafi basta
 ordinare i valori 
\begin_inset Formula $d_{i}$
\end_inset

 e scandirli dal minimo al massimo.
 In un passo generico dell'algoritmo i colori utilizzati sono marcati e
 quelli disponibili sono non marcati.
 Inizialmente nessun colore è marcato.
 Si può notare che i massimi locali di 
\begin_inset Formula $f(x)$
\end_inset

 forniscono le cricche massimali (si veda
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "serafini2009ricerca"

\end_inset

).
 Nell'esempio ce ne sono quattro.
 Il massimo locale è determinato dall'estremo destro di un intervallo.
 Si veda la figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Grafo-intervallo-fx"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering{
\backslash
input{img/interval_graph_fx}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Grafo-intervallo-fx"

\end_inset

La funzione 
\begin_inset Formula $f(x)$
\end_inset

: numero di intervalli che contengono 
\begin_inset Formula $x$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
 Per modellare ulteriori restrizioni sulle soluzioni ammissibili, quali
 quelli sulle corse bis o sull'incompatibilità di fermate sullo stesso gate,
 occorre aggiungere vincoli o vincoli locali sui colori, come nei problemi
 noti come precoloring extension.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Modello matematico del problema di minimizzazione delle piattaforme
\end_layout

\begin_layout Standard
Il problema del list-coloring può essere formulato su un grafo 
\begin_inset Formula $\mathcal{G}(\mathcal{V},\mathcal{E})=G+K_{m}$
\end_inset

 ottenuto dal grafo di interferenza delle fermate 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 e dalle compatibilità con le piattaforme 
\begin_inset Formula $L(v),\, v\in V$
\end_inset

.
 Per costruire il grafo 
\begin_inset Formula $\mathcal{G}$
\end_inset

 si prendano 
\begin_inset Formula $m$
\end_inset

 copie 
\begin_inset Formula $G^{1},\ldots,G^{m}$
\end_inset

 di 
\begin_inset Formula $G$
\end_inset

, una per colore, dove 
\begin_inset Formula $G^{i}$
\end_inset

 ha insieme dei nodi 
\begin_inset Formula $V_{i}=\{(v,c)\,|\, v\in V\}$
\end_inset

 e insieme degli archi 
\begin_inset Formula $E_{i}=\left\{ \left((v,i),(w,i)\right)\,|\,(v,w)\in E\right\} $
\end_inset

, e si costruisca la cricca sui nodi 
\begin_inset Formula $(v,1),(v,2),\ldots,(v,c)$
\end_inset

 per ogni 
\begin_inset Formula $v\in V$
\end_inset

.
 Si rimuovano dal grafo i nodi 
\begin_inset Formula $(v,c)\,|\, v\in V,\, c\notin L(v)$
\end_inset

 (e tutti gli archi di 
\begin_inset Formula $\mathcal{E}$
\end_inset

 a esso collegati).
\end_layout

\begin_layout Standard
L'insieme 
\begin_inset Formula $\mathcal{V}^{k}$
\end_inset

 ha quindi il nodo 
\begin_inset Formula $(v_{i},\, c_{k})$
\end_inset

 se la fermata 
\begin_inset Formula $v_{i}\in V$
\end_inset

, che occupa una piattaforma nell'intervallo temporale 
\begin_inset Formula $(a_{i},\, d_{i})$
\end_inset

, può essere assegnata alla piattaforma 
\begin_inset Formula $c_{k}\in C$
\end_inset

.
 Tale nodo 
\begin_inset Formula $(v_{i},\, c_{k})$
\end_inset

 forma una cricca di ordine 
\begin_inset Formula $|L(v_{i})|$
\end_inset

 con tutti gli altri vertici 
\begin_inset Formula $(v_{i},\, c_{h})$
\end_inset

 dove 
\begin_inset Formula $c_{h}\ni L(v_{i})$
\end_inset

 .
 Fissato un colore 
\begin_inset Formula $k$
\end_inset

, gli archi 
\begin_inset Formula $\mathcal{E}^{k}$
\end_inset

 modellano le incompatibilità fra fermate compatibili con la piattaforma
 
\begin_inset Formula $k$
\end_inset

.
 Ogni sottografo indotto 
\begin_inset Formula $\mathcal{G}^{k}=(\mathcal{V}^{k},\mathcal{E}^{k})$
\end_inset

 è un grafo d'intervallo che è isomorfo ad un sottografo indotto di 
\begin_inset Formula $G$
\end_inset

.
 L'insieme dei 
\begin_inset Formula $\mathcal{G}^{k}$
\end_inset

 esprime il vincolo che per ogni possibile colore (piattaforma) 
\begin_inset Formula $c_{k}$
\end_inset

 che può essere assegnato ai vertici (fermate) compatibili col colore 
\begin_inset Formula $v_{i}|c_{k}\in L(v_{i})$
\end_inset

.
\end_layout

\begin_layout Standard
Una soluzione ammissibile per il problema di list-coloring su 
\begin_inset Formula $G$
\end_inset

 è un insieme stabile di 
\begin_inset Formula $\mathcal{G}$
\end_inset

 di cardinalità 
\begin_inset Formula $n$
\end_inset

 e, per costruzione di 
\begin_inset Formula $\mathcal{G}$
\end_inset

 non possono esistere insiemi stabili di cardinalità maggiore in quanto
 ogni insieme stabile avrà un solo nodo 
\begin_inset Formula $(v_{i},c_{k})$
\end_inset

 per ogni 
\begin_inset Formula $c_{k}\in C$
\end_inset

.
 Il problema di list-coloring su 
\begin_inset Formula $G$
\end_inset

 è equivalente al problema di determinazione di un massimo insieme stabile
 su 
\begin_inset Formula $\mathcal{G}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Si considerino cioè per ogni piattaforma 
\begin_inset Formula $k$
\end_inset

 il sottografo indotto 
\begin_inset Formula $H^{k}=(V^{k},\,\{c_{k}\},\, A^{k})$
\end_inset

 di 
\begin_inset Formula $H$
\end_inset

, in cui 
\begin_inset Formula $V^{k}\subseteq V$
\end_inset

 ha per elementi tutte e sole le fermate che possono essere assegnate alla
 piattaforma 
\begin_inset Formula $k$
\end_inset

 ed 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none

\begin_inset Formula $E^{k}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
\color inherit
 l'insieme dei lati incidenti in 
\begin_inset Formula $k$
\end_inset

, ed il sottografo indotto del grafo di interferenza delle fermate 
\begin_inset Formula $G^{k}=(V^{k},\, E^{k})$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ad esempio si supponga di dover allocare le fermate 1, 2, 3 definite dagli
 intervalli (1,4), (2, 5) e (3,6) ai gate 1, 2, 3 aventi tempi di servizio
 [0, 7], [0, 7] e [1,5], senza presenza di ulteriori vincoli di allocazione.
 I parametri sono riassunti in tabella
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Istanza-gap-1"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Determinare una soluzione per questa istanza è banale ma la rappresentazione
 dei grafi permette di visualizzare bene le trasformazioni tra problemi
 e soluzioni.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Servizio
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arrivo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Partenza
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Compatibilità
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, 2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1, 2, 3
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Istanza-gap-1"

\end_inset

Istanza di esempio: tabella oraria e compatibilità
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La rappresentazione delle fasce orarie di occupazione può essere effettuata
 mediante un diagramma a barre come in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intervalli-di-occupazione1"

\end_inset

 Le compatibilità fermata-piattaforma del problema in esame sono rappresentate
 in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:relazioni_L1"

\end_inset

, mentre il grafo di compatibilità risulta essere quello in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intervalli-di-occupazione1"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.65
\backslash
textwidth][c]{
\backslash
input{img/fasce_orarie1}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Intervalli-di-occupazione1"

\end_inset

Intervalli e grafo d'interferenza 
\begin_inset Formula $G$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.31
\backslash
textwidth][c]{
\backslash
input{img/relazioni_L1}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:relazioni_L1"

\end_inset

Compatibilità 
\begin_inset Formula $L(v_{i})$
\end_inset


\begin_inset Argument
status open

\begin_layout Plain Layout
Relazioni di compatibilità 
\begin_inset Formula $L(v_{i})$
\end_inset


\end_layout

\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
fermate-piattaforme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Istanza di esempio del problema di assegnamento bus-piattaforma
\end_layout

\end_inset


\end_layout

\end_inset

L'istanza del problema di partenza viene ricondotta ad un problema 
\begin_inset Formula $\mathcal{I}=[G(V,E),\, L]$
\end_inset

 di list-coloring con parametri 
\begin_inset Formula $G$
\end_inset

 ed 
\begin_inset Formula $L$
\end_inset

, come indicato in figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Istanza-di-list-coloring"

\end_inset


\end_layout

\begin_layout Standard
Il grafo 
\begin_inset Formula $G$
\end_inset

 e le informazioni contenute in 
\begin_inset Formula $L$
\end_inset

 permettono di generare il grafo 
\begin_inset Formula $\mathcal{G}$
\end_inset

 che corrisponde all'istanza 
\begin_inset Formula $\mathcal{I}'$
\end_inset

 di un problema di insiemi stabili.
 L'istanza è rappresentata in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Istanza-mis"

\end_inset

.
 
\end_layout

\begin_layout Standard
Una soluzione, fra le tre possibili, del problema del massimo insieme stabile
 è presentata in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Soluzione-Massimo-Insieme"

\end_inset

.
 
\end_layout

\begin_layout Standard
Per passare dalla soluzione del problema del massimo insieme stabile di
 
\begin_inset Formula $\mathcal{G}$
\end_inset

 ad una soluzione del problema di list-coloring è sufficiente colorare ogni
 vertice 
\begin_inset Formula $v\in V$
\end_inset

 di 
\begin_inset Formula $G$
\end_inset

 con il colore del vertice 
\begin_inset Formula $(v,c)\in\mathcal{V}$
\end_inset

 di 
\begin_inset Formula $\mathcal{G}$
\end_inset

 selezionato nella soluzione, come presentato in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Soluzione-list-coloring"

\end_inset

.
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.45
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_istanza}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Istanza-di-list-coloring"

\end_inset

Istanza del problema di list-coloring 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
parbox[c]{0.5cm}{$
\backslash
longrightarrow$
\backslash
vspace{3cm}}
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.50
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_mis_istanza}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Istanza-mis"

\end_inset

Istanza del problema del massimo insieme stabile
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Formula $\downarrow$
\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.45
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_soluzione}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Soluzione-list-coloring"

\end_inset

Soluzione list-coloring
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
parbox[c]{0.5cm}{$
\backslash
longleftarrow$
\backslash
vspace{3cm}}
\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
makebox[0.5
\backslash
textwidth][c]{
\backslash
input{img/K_3_list_3_coloring_mis_soluzione}}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Soluzione-Massimo-Insieme"

\end_inset

Soluzione Massimo Insieme Stabile
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Trasformazioni-del-problema"

\end_inset

Trasformazioni del problema di restricted-coloring
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
L'insieme di archi 
\begin_inset Formula $\mathcal{E}^{k}$
\end_inset

 contiene le coppie non ordinate di fermate incompatibili fra loro e compatibili
 con la piattaforma 
\begin_inset Formula $k$
\end_inset

.
 Si devono determinare gli assegnamenti delle fermate alle piattaforme.
\end_layout

\begin_layout Standard
Per passare ad un modello di programmazione lineare intera si consideri
 una variabile binaria
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{ik}=\begin{cases}
1 & \text{se e solo se la sosta \ensuremath{v_{i}}}\text{ è assegnata alla piattaforma }k\\
0 & \text{altrimenti}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
che rappresenta la scelta del vertice 
\begin_inset Formula $(v_{i},c_{k})$
\end_inset

 nel massimo insieme stabile.
\end_layout

\begin_layout Standard
\noindent
I vincoli di assegnamento impongono che ogni fermata sia assegnata ad una
 sola piattaforma (colore, nei problemi di colorazione di grafi):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{k\in L(i)}x_{ik}=1\qquad\forall i\in V
\]

\end_inset


\end_layout

\begin_layout Standard
I vincoli di non sovrapposizione delle fermate, che impediscono di assegnare
 due fermate interferenti ad una stessa piattaforma , possono essere espressi
 genericamente da
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{ik}+x_{jk}\leq1\qquad\forall k\in\left(L(i)\cap L(j)\right),\,\forall(i,\, j)\in\mathcal{E}^{k}
\]

\end_inset


\end_layout

\begin_layout Standard
L'ultimo insieme di vincoli descrive l'incompatibilità delle fermate in
 modo naturale, ma il rilassamento lineare generalmente fornisce soluzioni
 distanti dall'ottimo (vedi
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "caprara1998properties"

\end_inset

).
 Inoltre il numero di vincoli è elevato e la complessità dell'algoritmo
 risolutivo comunemente impiegato per problemi di PL, cresce al crescere
 del numero di vincoli.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
`E
\end_layout

\end_inset

 possibile formulare in modo più compatto e stringente i vincoli di incompatibil
ità mediante l'uso del vettore 
\begin_inset Formula $\mathcal{Q}_{k}$
\end_inset

 definito in algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "cliques_incompatibili_per_colore"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{i\in\mathcal{Q}}x_{ik}\leq1\qquad\forall k\in C,\,\forall\mathcal{Q}\in\mathcal{Q}_{k}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{La lista ordinata $T$ degli estremi temporali degli intervalli di
 fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Il vettore contenente gli insiemi delle fermate incompatibili $
\backslash
mathcal{Q}_k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni piattaforma $k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$k 
\backslash
in C$}{ %
\end_layout

\begin_layout Plain Layout

		Poni $
\backslash
mathcal{Q}_{k} = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

		Poni $Q = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

		Poni $prec = arrival$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

		
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{Per ogni istante temporale
\backslash
ldots} %
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$t 
\backslash
in T$}{%
\end_layout

\begin_layout Plain Layout

			Poni $i = t.fermata$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{
\backslash
ldots di una fermata assegnabile al gate k} %
\end_layout

\begin_layout Plain Layout

			
\backslash
If{$(i, k) 
\backslash
in A$}{ %
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{se l'istante corrente rappresenta un arrivo}%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$t.type = arrival$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{la fermata 
\backslash
`e nel gruppo di incompatibili}%
\end_layout

\begin_layout Plain Layout

					Poni $Q = Q 
\backslash
cup i$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

					Poni $prec = arrival$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

				} 
\backslash
Else {%
\end_layout

\begin_layout Plain Layout

					
\backslash
If{$prec = arrival 
\backslash
, 
\backslash
wedge 
\backslash
, |Q| > 1$}{%
\end_layout

\begin_layout Plain Layout

						Poni $
\backslash
mathcal{Q}_{k} = 
\backslash
mathcal{Q}_{k} 
\backslash
cup Q$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					}
\end_layout

\begin_layout Plain Layout

					Poni $Q = Q 
\backslash
setminus i$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					Poni $prec = departure$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				} %
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
mathcal{Q}_{k}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Determinazione delle fermate interferenti compatibili con la piattaforma
 $k$}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{cliques_incompatibili_per_colore}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
Nella funzione obiettivo si considerano i colori (piattaforme) utilizzati,
 modellati da una variabile binaria
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u_{k}=\begin{cases}
1 & \text{se e solo se la piattaforma \ensuremath{k}}\text{ è assegnata ad almeno una sosta }\\
0 & \text{altrimenti}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
Per legare la variabile 
\begin_inset Formula $u_{k}$
\end_inset

 agli assegnamenti 
\begin_inset Formula $x_{ik}$
\end_inset

 occorre aggiungere le disuguaglianze
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u_{k}\geq x_{ik}\qquad\forall k\in C,\forall i\in L^{-1}(k)
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
I vincoli sopra esposti permettono di definire il domino delle 
\begin_inset Formula $u_{k}$
\end_inset

 come variabili continue, 
\begin_inset Formula $0\leq u_{k}\leq1\,\forall k\in C$
\end_inset

, e esse continueranno ad assumere valori nell'insieme 
\begin_inset Formula ${0,1}^{|C|}$
\end_inset

.
 Per ridurre il numero di disequazioni è possibile considerare tutti i vincoli
 che coinvolgono una stessa piattaforma 
\begin_inset Formula $k$
\end_inset

 giungendo a
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
|L^{-1}(k)|u_{k}\geq\sum_{i\in L^{-1}(k)}\, x_{ik}\qquad\forall k\in C
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Note Note
status open

\begin_layout Plain Layout
\noindent
I vincoli sono meno stringenti ma si presentano in numero minore.
 Prove sperimentali hanno mostrato che la risoluzione del modello con meno
 vincoli migliora i tempi di calcolo.
 
\end_layout

\end_inset

Il modello per la risoluzione del problema di minimizzazione del numero
 di piattaforme utilizzate è il seguente:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & z^{col}=\sum_{k\in C}c_{k}\, u_{k}\label{eq:min_gates_pesati}\\
\sum_{k\in L(i)}x_{ik}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0}\\
\sum_{i\in\mathcal{Q}}x_{ik}\leq1 &  & \forall k\in C,\,\forall\mathcal{Q}\in\mathcal{Q}_{k}\label{eq:vincolo_compatibilita_bus_0}\\
\sum_{i\in L^{-1}(k)}\, x_{ik}\leq|L^{-1}(k)|\, u_{k} &  & \forall k\in C\label{eq:uk_maggiore_xik}\\
\sum_{k\in C}\, u_{k}\geq s\label{eq:lower_bound_gates}\\
x_{ik}\in\{0,\,1\} &  & \forall i\in V,\,\forall k\in L(i)\label{eq:x_ik_dominio}\\
u_{k}\in\{0,\,1\} &  & \forall k\in C\label{eq:u_ik_dominio}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Il modello proposto impiega la variabile
\begin_inset space ~
\end_inset


\begin_inset Formula $u_{k}$
\end_inset

, che vale 1 se il gate 
\begin_inset Formula $k$
\end_inset

 è occupato da almeno una corsa, altrimenti vale 0.
 Il vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:vincolo_assegnamento_0"

\end_inset

 impone che ogni fermata sia assegnata ad una piattaforma.
 Il vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:vincolo_compatibilita_bus_0"

\end_inset

 dichiara che le fermate su uno stesso gate devono essere compatibili fra
 loro, ovvero devono occupare il gate in intervalli di tempo che non si
 sovrappongono.
 Le variabili 
\begin_inset Formula $x_{ik}$
\end_inset

 coinvolte in un gruppo di vincoli di questo tipo appartengono ad un insieme
 chiamato Special Order Set di tipo 1 (SOS1).
 La caratteristica degli SOS1 è che al più una di queste variabili può assumere
 un valore strettamente positivo mentre le altre devono essere nulle.
 L'utilizzo di variabili di questo tipo, in un algoritmo di Branch&Bound,
 permette di ridurre lo spazio di ricerca e quindi il tempo di calcolo.
 Le disequazioni espresse dal vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:uk_maggiore_xik"

\end_inset

 forzano la variabile
\begin_inset space ~
\end_inset


\begin_inset Formula $u_{k}$
\end_inset

 al valore 1 se almeno una fermata è assegnata alla piattaforma 
\begin_inset Formula $k$
\end_inset

.
 Il vincolo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lower_bound_gates"

\end_inset

 dichiara che il numero di piattaforme usate sarà maggiore o uguale ad un
 lower bound (che può essere calcolato in tempo polinomiale con l'algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "bp_lb"

\end_inset

).
 Il lower bound permette di certificare l'ottimalità della soluzione e riduce
 pertanto il numero di stati che devono essere esplorati dall'algoritmo
 di risoluzione del modello matematico.
 I domini delle variabili 
\begin_inset Formula $x_{ik}$
\end_inset

 e 
\begin_inset Formula $u_{k}$
\end_inset

 sono dichiarati dai vincoli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_ik_dominio"

\end_inset

 e
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:u_ik_dominio"

\end_inset

.
\end_layout

\begin_layout Standard
Il modello può essere reso ancora più compatto eliminando i vincoli 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:uk_maggiore_xik"

\end_inset

 e legando la variabile 
\begin_inset Formula $u_{k}$
\end_inset

 alle variabili 
\begin_inset Formula $x_{ik}$
\end_inset

 nelle disequazioni 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & z^{col}=\sum_{k\in C}c_{k}\, u_{k}\label{eq:min_gates_pesati-2}\\
\sum_{k\in L(i)}x_{ik}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0-2}\\
\sum_{i\in\mathcal{Q}}x_{ik}\leq u_{k} &  & \forall k\in C,\,\forall\mathcal{Q}\in\mathcal{Q}_{k}\label{eq:vincolo_compatibilita_bus_0-2}\\
\sum_{k\in C}\, u_{k}\geq s\label{eq:lower_bound_gates-1}\\
x_{ik}\in\{0,\,1\} &  & \forall i\in V,\,\forall k\in L(i)\label{eq:x_ik_dominio-2}\\
u_{k}\in\{0,\,1\} &  & \forall k\in C\label{eq:u_ik_dominio-2}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Per minimizzare il numero di piattaforme è sufficiente assegnare ai parametri
 
\begin_inset Formula $c_{k}$
\end_inset

 il valore 1, mentre se si hanno preferenze sulla scelta delle piattaforme
 da utilizzare occorre 
\begin_inset Quotes eld
\end_inset

pesarle
\begin_inset Quotes erd
\end_inset

 assegnando ai parametri 
\begin_inset Formula $c_{k}$
\end_inset

 un valore non negativo.
 La funzione obiettivo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:min_gates_pesati"

\end_inset

 nel primo caso esprime il numero di piattaforme occupate, mentre nel secondo
 caso fornisce un indice del costo di utilizzo delle piattaforme.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Pesare i gate permette di ridurre le simmetrie nelle soluzioni.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il modello è stato costruito a partire dal modello di PLI di Kantorovich
 per il Bin Packing, equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:min_gates_pesati"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_assegnamento_0"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:uk_maggiore_xik"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:x_ik_dominio"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:u_ik_dominio"

\end_inset

; a tale modello è stato aggiunto un limite inferiore esplicito (equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:lower_bound_gates"

\end_inset

) ed il vincolo di compatibilità (equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0"

\end_inset

).
\end_layout

\begin_layout Standard
Le prestazioni di un algoritmo di Branch&Bound, per risolvere un tale modello,
 si rivelano inefficienti quando il limite inferiore sul numero di piattaforme
 è minore dell'ottimo.
 Se si analizza il caso con le piattaforme compatibili con tutte le fermate
 si nota che per ogni soluzione che impiega 
\begin_inset Formula $m$
\end_inset

 piattaforme esistono 
\begin_inset Formula $m!$
\end_inset

 soluzioni equivalenti ottenute permutando le piattaforme tra loro.
 Essendo, inoltre, il numero di piattaforme disponibili generalmente maggiore
 di quante strettamente necessarie, si crea un'ulteriore generazione di
 soluzioni equivalenti ed il metodo del Branch&Bound non migliora di molto
 le prestazioni dell'enumerazione completa dovendo esplorare un albero pressoché
 completo.
\end_layout

\begin_layout Standard
Un modo per eliminare, almeno in parte, le simmetrie del modello è quello
 di preassegnare alcune piattaforme.
 È infatti possibile, se non auspicabile, chiedere al capostazione di allocare
 i servizi che interferiscono nella cricca massima e risolvere il nuovo
 problema con un numero ridotto di variabili.
\end_layout

\begin_layout Paragraph
Caso particolare: ogni fermata è assegnabile ad ogni piattaforma e non sono
 presenti altre restrizioni
\end_layout

\begin_layout Standard
In tale caso il problema è risolubile con algoritmi polinomiali, tempo lineare
 
\begin_inset Formula $O(|V|+|E|)$
\end_inset

, per la colorazione dei grafi d'intervallo (vedi 
\begin_inset CommandInset citation
LatexCommand cite
key "golumbic2004algorithmic"

\end_inset

 cap.
 8).
\end_layout

\begin_layout Standard
Un semplice algoritmo greedy, come il First-Fist, produce una soluzione
 ottima.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{Un'istanza $I = (V, C)$, dove $v_i=(a_i,
\backslash
 d_i)$ è fermata e $c_i$ piattaforma} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Una soluzione (ottima) per $I$, se $
\backslash
omega(G(V)) 
\backslash
leq |C|$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	Ordina le fermate per tempo di arrivo ($a_1 
\backslash
leq a_2 
\backslash
leq 
\backslash
ldots 
\backslash
leq a_m$)
\backslash
; %
\end_layout

\begin_layout Plain Layout

	Poni $j = 1$ e $w_0 = L$
\backslash
; %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
For{$i = 1$ 
\backslash
KwTo $m$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{k è la prima piattaforma libera che può essere occupata da $i$}%
\end_layout

\begin_layout Plain Layout

		Poni $k = 
\backslash
min(
\backslash
{h 
\backslash
colon 1 
\backslash
leq h 
\backslash
leq j, 
\backslash
, a_i 
\backslash
geq w_h
\backslash
} 
\backslash
cup 
\backslash
{j + 1
\backslash
})$
\backslash
; %
\end_layout

\begin_layout Plain Layout

		
\backslash
If{$k > |C|$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{Non esistono soluzioni ammissibili}%
\end_layout

\begin_layout Plain Layout

			termina
\backslash
;%
\end_layout

\begin_layout Plain Layout

		} 
\backslash
Else { %
\end_layout

\begin_layout Plain Layout

			
\backslash
If{$k = j + 1$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{Usa una nuova piattaforma}%
\end_layout

\begin_layout Plain Layout

				Poni $j = j+1$ e $w_j = 0$
\backslash
;%
\end_layout

\begin_layout Plain Layout

			} 
\backslash
Else { %
\end_layout

\begin_layout Plain Layout

				Poni $j = k$
\backslash
;
\end_layout

\begin_layout Plain Layout

			} %
\end_layout

\begin_layout Plain Layout

			Poni la fermata $i$ nella piattaforma $j$
\backslash
;%
\end_layout

\begin_layout Plain Layout

			Poni $w_j = d_i$
\backslash
; %
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return {gli assegnamenti
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Algoritmo "First-Fit" per la colorazione propria dei vertici di
 un grafo d'intervallo}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{ff-coloring}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In tal caso il grafo che rappresenta la relazione di compatibilità tra fermate
 e piattaforme è un grafo biparto completo 
\begin_inset Formula $K_{|V|,|C|}$
\end_inset

 e tutti i grafi 
\begin_inset Formula $G^{k}$
\end_inset

 sono uguali a 
\begin_inset Formula $G$
\end_inset

.
 Per mostrale le analogie con il modello sopra esposto proponiamo un modello
 matematico usato per la colorazione di un grafo qualsiasi (vedi
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "MendezDiaz2006826"

\end_inset

), che è il seguente:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min & \mbox{colours}=\sum_{k\in C}u_{k}\label{eq:min_gates_pesati-1}\\
\sum_{k\,:\,(i,\, k)\in E}x_{ik}=1 &  & \forall i\in V\label{eq:vincolo_assegnamento_0-1}\\
x_{ik}+x_{jk}\leq u_{k} &  & \forall k\in\left(L(i)\cap L(j)\right),\,\forall(i,\, j)\in\mathcal{E}^{k}\label{eq:vincolo_compatibilita_bus_0-1}\\
\sum_{(i,\, k)\in A}\, x_{ik}\geq u_{k} &  & \forall k\in C\label{eq:uk_maggiore_xik-1}\\
u_{k}\geq u_{k+1} &  & 1\leq k\leq|C|-1\label{eq:symmetry-breaking}\\
x_{ik}\in\{0,\,1\} &  & \forall i\in V,\,\forall k\in L(i)\label{eq:x_ik_dominio-1}\\
u_{k}\in\{0,\,1\} &  & \forall k\in C\label{eq:u_ik_dominio-1}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
La variabile binaria 
\begin_inset Formula $x_{ik}$
\end_inset

 indica l'assegnamento del colore 
\begin_inset Formula $k$
\end_inset

 al vertice 
\begin_inset Formula $i$
\end_inset

.
 La variabile binaria 
\begin_inset Formula $u_{k}$
\end_inset

 indica l'uso del colore 
\begin_inset Formula $k$
\end_inset

.
 L'equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_assegnamento_0-1"

\end_inset

 assegna esattamente un colore ad ogni vertice e le disequazioni
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:vincolo_compatibilita_bus_0-1"

\end_inset

 assicurano che i vertici adiacenti siano colorati diversamente.
 Allo scopo di evitare molte soluzioni equivalenti sono introdotte le disequazio
ni
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:uk_maggiore_xik-1"

\end_inset

 e 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:symmetry-breaking"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Altri modelli possono essere formulati considerando il solo grafo di compatibili
tà o il suo complemento ma sarebbero comunque necessarie le liste 
\begin_inset Formula $L(i)$
\end_inset

 che ad ogni fermata (vertice del grafo) 
\begin_inset Formula $i$
\end_inset

 associano i colori compatibili (gate) o incompatibili.
 Il problema nel che si ha considerando il solo grafo di compatibilità,
 che è appartiene alla classe dei grafi di comparabilità, è detto Minimum
 Clique Partition Problem o Clique Cover Problem e consiste nel partizionare
 il grafo nel numero minore possibile di clique.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Modello del problema di programmazione per vincoli
\end_layout

\begin_layout Standard
La Programmazione per Vincoli (Constraint Programming) è un paradigma di
 programmazione per risolvere problemi combinatorici espressi con un linguaggio
 di modellazione (descrittivo) espressivo mediante efficienti implementazioni
 di algoritmi di risoluzione.
\end_layout

\begin_layout Standard
I due concetti fondamentali della programmazione per vincoli sono la propagazion
e dei vincoli e la ricerca costruttiva.
 La propagazione dei vincoli è un efficiente sistema che ha lo scopo di
 ridurre il dominio delle variabili del problema sfruttando la semantica
 dei vincoli del problema.
 Il motore inferenziale è implementato attraverso algoritmi di filtraggio
 che 
\begin_inset Quotes eld
\end_inset

filtrano
\begin_inset Quotes erd
\end_inset

 valori dal dominio di ogni variabile.
 Quando la propagazione dei vincoli non riesce a rimuovere ulteriori valori
 dal dominio delle variabili, incomincia la fase di ricerca costruttiva.
 Quest'ultima esplora l'albero di ricerca restringendo il dominio di una
 variabile alla volta; in sostanza, si esegue una ricerca nello spazio di
 soluzioni parziali.
 La forma più semplice di ricerca costruttiva consiste nel selezionare una
 variabile non assegnata, ossia a cui non sia ancora assegnato un valore
 fra quelli del suo dominio, e procedere ad assegnarle uno dei valori disponibil
i.
 Questo modo di procedere nell'esplorazione dell'albero di ricerca è detto
 etichettatura.
 Iterando la propagazione dei vincoli e l'etichettatura, il risolutore dello
 strumento di programmazione per vincoli calcola la soluzione, o le soluzioni,
 di un problema o dimostra che l'insieme delle soluzioni è vuoto.
 La letteratura recente propone molti approcci che combinano le tecniche
 classiche della ricerca operativa con quelle della programmazione per vincoli.
\end_layout

\begin_layout Standard
I modelli di programmazione per vincoli del problema di colorazione propria
 di grafi si basano sul vincolo 
\emph on
alldifferent
\emph default
, introdotto da
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "regin1994filtering"

\end_inset

.
 Questo vincolo impone che un insieme di variabili intere assumano valori
 differenti tra loro e appartenenti ad uno stesso domino.
 Punto di forza del vincolo 
\emph on
alldifferent
\emph default
 è l'efficiente algoritmo di propagazione che è capace di ridurre il dominio
 di ogni variabile utilizzando i risultati della teoria dell'accoppiamento
 su grafi bipartiti.
 Dato un grafo 
\begin_inset Formula $G=(V,E)$
\end_inset

, siano 
\begin_inset Formula $\underbar{\chi}$
\end_inset

 e 
\begin_inset Formula $\bar{\chi}$
\end_inset

 una limitazione superiore ed inferiore sul numero.
 Sia 
\begin_inset Formula $K=\left\{ 1,2,\ldots,\bar{\chi}\right\} $
\end_inset

 l'insieme dei colori disponibili, assumendo che i numeri naturali rappresentino
 i colori (e quindi le piattaforme), e sia 
\begin_inset Formula $x_{i}\in K$
\end_inset

 per 
\begin_inset Formula $i\in V$
\end_inset

 il dominio intero e finito per le variabili del problema, dove il valore
 assegnato ad 
\begin_inset Formula $x_{i}$
\end_inset

 il colore assegnato al vertice 
\begin_inset Formula $i$
\end_inset

-esimo .
 Sia 
\begin_inset Formula $x_{0}$
\end_inset

 il dominio finito di interi che modella il numero totale di colori usati,
 ossia nella soluzione ottima 
\begin_inset Formula $x_{0}=\chi(G)$
\end_inset

.
 Sia inoltre 
\begin_inset Formula $\overline{x_{0}}$
\end_inset

 la migliore limitazione superiore nota per problema, eventualmente determinata
 inizialmente con un'euristica costruttiva e poi eventualmente aggiornata
 dall'algoritmo di risoluzione.
 Il modello di programmazione per vincoli è il seguente:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
variabile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
dominio
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $x_{0}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbar{\chi},\ldots,\bar{\chi}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ x_{i}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left\{ L_{i}\right\} $
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vincolo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
alldifferent
\begin_inset Formula $\left(\left\{ x_{i}:i\in\mathcal{Q}\right\} \right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $x_{0}$
\end_inset

= count
\begin_inset Formula $\left(x_{i}\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Limitazione superiore
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $x_{0}\leq\overline{x_{0}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Massimizzazione dello scarto minimo minimo
\end_layout

\begin_layout Standard
La formulazione precedente non considera una distanza temporale minima che
 deve intercorrere fra due fermate su uno stesso gate.
 Tale distanza minima, se piccola, potrebbe causare un effetto di propagazione
 a catena dei ritardi delle fermate assegnate allo stesso gate e potrebbe
 richiedere una riallocazione che coinvolge varie corse.
 La formulazione proposta in questo paragrafo considera l'intervallo temporale
 più piccolo che intercorre fra due fermate sullo stesso gate.
 Il modello del paragrafo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Massimizzazione-delle-distanze"

\end_inset

 viene modificato introducendo una variabile, indicata con 
\begin_inset Formula $m$
\end_inset

, che rappresenta la distanza temporale minima fra due fermate sullo stesso
 gate.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\max\, z^{dm}=m\label{eq:max_m}\\
\sum_{k\,:\,(i,\, k)\in E}x_{ik}=1 &  & \forall i\in B\label{eq:sosta_assegnata}\\
\sum_{i\in\mathcal{Q}_{\overline{F}_{k}}:|\mathcal{Q}_{\overline{F}_{k}}|\geq2}x_{ik}\leq1 &  & \forall k\in G\label{eq:incomp_bp}\\
x_{ik}+x_{jk}-y_{ij}\leq1 &  & \forall(i,\, j)\in F\,\forall k:(i,k),(j,k)\in E\label{eq:fine_linearizzazione}\\
m+M\, y_{ij}-c_{ij}\, y_{ij}\leq M &  & \forall(i,\, j)\in F\label{eq:m_minimo}\\
x_{ik}\in\{0,\,1\} &  & \forall(i,\, k)\in E\label{eq:dom_xik}\\
0\leq y_{ij}\leq1 &  & \forall(i,\, j)\in F\label{eq:lim_yij}\\
m\geq0\label{eq:m}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
I vincoli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:sosta_assegnata"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fine_linearizzazione"

\end_inset

 sono gli stessi di quelli adoperati nel modello proposto nel paragrafo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Massimizzazione-delle-distanze"

\end_inset

 così come i domini e i limiti espressi in
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:dom_xik"

\end_inset

 e
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:lim_yij"

\end_inset

.
 Le differenze rispetto al modello per la massimizzazione della somme delle
 distanze fra fermate sono nell'aggiunta della variabile continua e non
 negativa 
\begin_inset Formula $m$
\end_inset

 (equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m"

\end_inset

) che è minore di ogni distanza temporale 
\begin_inset Formula $c_{ij}$
\end_inset

 fra la la distanza di due fermate su uno stesso gate.
 L'equazione
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m_minimo"

\end_inset

 fa uso di una costante 
\begin_inset Formula $M$
\end_inset

 che fa si che la 
\begin_inset Formula $m$
\end_inset

 non sia vincolata quando i bus 
\begin_inset Formula $i$
\end_inset

 e 
\begin_inset Formula $j$
\end_inset

 partono da gate diversi.
 Il valore da assegnare a tale costante deve essere maggiore del tempo massimo
 che intercorre fra due fermate che possono occupare uno stesso gate.
 La funzione obiettivo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:max_m"

\end_inset

 assicura che 
\begin_inset Formula $m$
\end_inset

 assuma il valore dell'intervallo minimo di tempo fra due fermate su uno
 stesso gate.
\end_layout

\begin_layout Section
Minimizzazione della probabilità di conflitto
\end_layout

\begin_layout Standard
Il GAP può essere modellato anche come problema di minimizzazione della
 probabilità che fermate assegnate allo stesso gate possano essere 
\begin_inset Quotes eld
\end_inset

in conflitto
\begin_inset Quotes erd
\end_inset

.
 Siano 
\begin_inset Formula $D=\max_{F}c_{ij}$
\end_inset

 e 
\begin_inset Formula $d=\min_{F}c_{ij}$
\end_inset

.
 La probabilità di conflitto 
\begin_inset Formula $p_{ij}$
\end_inset

 fra due fermate 
\begin_inset Formula $i$
\end_inset

 e 
\begin_inset Formula $j$
\end_inset

 che possono occupare uno stesso gate si può definire come
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p_{ij}=\frac{D-c_{ij}}{D-d}
\]

\end_inset


\end_layout

\begin_layout Standard
La quantità 
\begin_inset Formula $p_{ij}$
\end_inset

 è un numero compreso fra zero, quando la distanza temporale fra due fermate
 che possono essere assegnate allo stesso gate è massima, e uno quando tale
 intervallo è minimo.
 Una misura del conflitto del piano di assegnamento è data da
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
z^{p}=\frac{1}{|F|}\sum_{(i,j)\in F}p_{ij}y_{ij}=\frac{1}{|F|\,(D-d)}\sum_{(i,j)\in F}(D-c_{ij})\, y_{ij}
\]

\end_inset


\end_layout

\begin_layout Standard
Il modello matematico del problema diventa quindi:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\min\, z^{p}=\frac{1}{|F|\,(D-d)}\sum_{(i,j)\in F}(D-c_{ij})\,\sum_{k\in G}y_{ij}\label{eq:min_conflitto}\\
\sum_{k\,:\,(i,\, k)\in E}x_{ik}=1 &  & \forall i\in B\label{eq:inizio_vincoli_4}\\
\sum_{i\in\mathcal{Q}_{\overline{F}_{k}}:|\mathcal{Q}_{\overline{F}_{k}}|\geq2}x_{ik}\leq1 &  & \forall k\in G\\
\sum_{k:(i,k)\in E\,\wedge(j,k)\in E}x_{ik}-y_{ij}\geq0 &  & \forall(i,\, j)\in F\\
\sum_{k:(i,k)\in E\,\wedge(j,k)\in E}x_{jk}-y_{ij}\geq0 &  & \forall(i,\, j)\in F\\
\sum_{k:(i,k)\in E\,\wedge(j,k)\in E}x_{ik}+x_{jk}-y_{ij}\leq1 &  & \forall(i,\, j)\in F\\
x_{ik}\in\{0,\,1\} &  & \forall(i,\, k)\in E\\
0\leq y_{ij}\leq1 &  & \forall(i,\, j)\in F\label{eq:fine_vincoli_4}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
La funzione obiettivo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:min_conflitto"

\end_inset

 rappresenta una misura, compresa tra zero ed uno, di quanto l'assegnamento
 è robusto rispetto alle variazioni dell'input.
 I vincoli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:inizio_vincoli_4"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:fine_vincoli_4"

\end_inset

 sono analoghi a quelli
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:vincolo_assegnamento"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:limiti_y"

\end_inset

.
\end_layout

\begin_layout Section
Vincoli addizionali
\end_layout

\begin_layout Subsection*
Corse bis assegnate a gate adiacenti
\end_layout

\begin_layout Standard
Per consentire agli utenti di un servizio di salire a bordo di un veicolo
 che effettua una corsa 
\begin_inset Quotes eld
\end_inset

bis
\begin_inset Quotes erd
\end_inset

 senza doversi spostare da una parte all'altra dell'autostazione è desiderabile
 che le fermate delle corse bis siano assegnate a gate adiacenti.
 Questo requisito può essere modellato con il seguente insieme di vincoli:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
x_{ik}\geq x_{j\, k-1} &  & k=\min_{k}\{k-1,\, k\in G\},\, j\in BIS(i)\label{eq:bis_primo_gate}\\
x_{ik}\geq x_{i\, k-1}+x_{j\, k+1} &  & \forall k\in G,\, j\in BIS(i)\label{eq:bis_gate_in_mezzo}\\
x_{ik}\geq x_{j\, k+1} &  & k=\max_{k}\{k+1,\, k\in G\},\, j\in BIS(i)\label{eq:bis_ultimo_gate}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Il modello presuppone che i gate adiacenti abbiano indici adiacenti.
 
\end_layout

\begin_layout Standard
Si fa notare che altre tipologie di vincolo come l'assegnamento delle corse
 coperte da mezzi snodati sono gestite in modo implicito nella generazione
 degli archi 
\begin_inset Formula $E$
\end_inset

.
 Gli stessi archi gestiscono il concetto di gate disabilitato in un intervallo
 temporale.
\end_layout

\begin_layout Subsection*
Esclusione degli assegnamenti
\end_layout

\begin_layout Standard
I modelli matematici presentati possono essere estesi per considerare i
 criteri di esclusione di assegnamenti fermata-gate ammissibili.
 Per penalizzare l'assegnamento indesiderato di una fermata su un gate si
 può aggiungere al modello una penalità (un vincolo 
\begin_inset Quotes eld
\end_inset

soft
\begin_inset Quotes erd
\end_inset

) in funzione obiettivo, che ha i termini:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{cases}
-\sum_{(i,k)\in E}p_{ik}x_{ik} & \text{{se\,\ il\,\ problema\,è\,\ di\,\ massimo}}\\
+\sum_{(i,k)\in E}p_{ik}x_{ik} & \text{{se\,\ il\,\ problema\,è\,\ di\,\ minimo}}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Se 
\begin_inset Formula $p_{ik}$
\end_inset

 è nullo esso non influisce sull'assegnamento, mentre un valore positivo
 grande permette di escludere l'assegnamento della fermata 
\begin_inset Formula $i$
\end_inset

 al gate 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Chapter
Algoritmi sviluppati
\begin_inset CommandInset label
LatexCommand label
name "chap:Algoritmi-sviluppati"

\end_inset


\end_layout

\begin_layout Section
Controllo a orizzonte recessivo
\end_layout

\begin_layout Standard
I modelli matematici proposti nel paragrafo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Formulazione-del-problema"

\end_inset

 si possono approcciare mediante l'uso di librerie software di ottimizzazione
 in grado di risolvere di problemi di programmazione lineare mista.
 Tra le librerie si è scelto LP_Solve
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand citep
key "lpsolve09website"

\end_inset

 perché è un software di pubblico dominio che può essere integrato in altre
 soluzioni senza restrizioni legali.
 L'impiego di un risolutori è da valutare in base alle dimensioni del problema,
 alle performance attese e al budget per l'acquisto della licenza dei risolutori
 commerciali.
 
\end_layout

\begin_layout Standard
Tutti i modelli proposti hanno sono definiti a partire dal grafo 
\begin_inset Formula $\mathcal{\bar{G}}=(\mathcal{V},\,\mathcal{\bar{E}})$
\end_inset

 e dalla famiglia di insiemi 
\begin_inset Formula $\left\{ L(v_{i})\right\} _{i\in V}$
\end_inset

.
 È quindi possibile costruire il grafo di interferenza fra le fermate mediante
 l'algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "alg:bcg"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb]%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}%
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{un'istanza $G = (V, E)$ e $
\backslash
{L(V_i)
\backslash
}$ di GA}%
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{il grafo $
\backslash
bar{
\backslash
mathcal{G}}$ complementare di $
\backslash
mathcal{G}$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	$
\backslash
mathcal{V} = 
\backslash
mathcal{E} = 
\backslash
emptyset$
\backslash
;%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{per ogni gate $k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$k 
\backslash
in V$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{per ogni fermata $i$ che può essere assegnata alla piattaforma $k$}%
\end_layout

\begin_layout Plain Layout

		$
\backslash
mathcal{V} = 
\backslash
mathcal{V} 
\backslash
cup 
\backslash
{(i, k)
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$i 
\backslash
in V : (i, k) 
\backslash
in E$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{per ogni fermata $j$ diversa da $i$ che può essere assegnata alla piattaform
a $k$}%
\end_layout

\begin_layout Plain Layout

			
\backslash
ForEach{$j 
\backslash
in V : (j, k) 
\backslash
in E 
\backslash
wedge j > i$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{se gli intervalli di occupazione delle fermate $i$ e $j$ sono disgiunte}%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$[a_i, d_i] 
\backslash
cap [a_j, d_j] = 
\backslash
emptyset$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{calcola il peso dell'arco $(i,j)$ }%
\end_layout

\begin_layout Plain Layout

					$c_{ij} = 
\backslash
max 
\backslash
{a_i - d_j,
\backslash
, a_j - d_i
\backslash
}$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{aggiungi l'arco $(i,j)$ all'insieme $
\backslash
bar{
\backslash
mathcal{E}}$}%
\end_layout

\begin_layout Plain Layout

					$
\backslash
bar{
\backslash
mathcal{E}} = 
\backslash
bar{
\backslash
mathcal{E}} 
\backslash
cup 
\backslash
{(i,
\backslash
,j)
\backslash
}$
\backslash
;%
\end_layout

\begin_layout Plain Layout

				}%
\end_layout

\begin_layout Plain Layout

			}%
\end_layout

\begin_layout Plain Layout

		}%
\end_layout

\begin_layout Plain Layout

	}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
bar{
\backslash
mathcal{G}} = (
\backslash
mathcal{V}, 
\backslash
bar{
\backslash
mathcal{E}})$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Costruzione del grafo $
\backslash
bar{
\backslash
mathcal{G}}$}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:bcg}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La pianificazione dell'assegnamento per una giornata può essere ottenuta
 risolvendo il modello matematico con i dati dell'intera giornata.
 Purtroppo il tempo di risoluzione aumenta esponenzialmente all'aumentare
 del numero di corse e di gate quindi può risultare più efficiente dividere
 l'intervallo di pianificazione in più fasce orarie all'interno della stessa
 giornata.
\end_layout

\begin_layout Standard
Al fine di generare una buona soluzione in tempi ridotti si propone un algoritmo
 euristico.
 L'algoritmo sviluppato sfrutta l'idea di risolvere problemi complessi dividendo
li in problemi più piccoli per poi ricostruire la soluzione completa.
 I problemi più piccoli sono generati partizionando l'orizzonte di pianificazion
e in intervalli di breve durata e quindi con poche fermate.
 Viene inoltre scelto un sottoinsieme di gate sufficiente a soddisfare la
 richiesta di tutte le fermate.
 Per far ciò si risolve il problema di minimizzazione dei gate impiegati
 nell'intero orizzonte di pianificazione utilizzando il modello descritto
 nel paragrafo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Minimizzazione-gate"

\end_inset

.
 Questo problema si risolve in tempi contenuti rispetto agli altri problemi
 descritti nei paragrafi precedenti.
 L'intervallo di pianificazione di una giornata è suddiviso in fasce di
 pianificazione (approccio 
\emph on
multiple time slot
\emph default
) di 120 minuti ed i modelli proposti sono risolti per ogni fascia oraria
 come illustrato in algoritmo 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:time_slice"

\end_inset

.
 La figura.
 mostra graficamente come siano legati fra loro i sottoproblemi, le soluzioni
 e le istanze dei problemi successivi al primo sottoproblema.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\backslash
input{img/iterative_horizon}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Controllo a orizzonte recessivo: sotto-istanze e soluzioni
\begin_inset CommandInset label
LatexCommand label
name "fig:Algoritmo-iterativo_legami_ist_sol"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In questo modo si semplifica notevolmente il problema e nel caso considerato
 il numero massimo di fermate presenti nei modelli di ottimizzazione si
 è ridotto da 229 a non più di 24.
 La fascia di punta massima, fra le 13.30 e le 14.00, dell'istanza considerata
 ha infatti 24 fermate.
 La riduzione delle dimensioni del problema permette una risoluzione esatta
 dei modelli matematici anche impiegando librerie gratuite e scaricabili
 dalla rete.
\end_layout

\begin_layout Subsection*
Parametri degli algoritmi
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb]%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKw{To}{to}%
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{un'istanza $H = (B, G, E)$ di GA e una lista di istanti $p_1, 
\backslash
ldots, p_P$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{gli assegnamenti fermate-gate nella giornata da pianificare}%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{per ogni intervallo $[p_{p-1}, p_p]$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$p = 1$ 
\backslash
To $P$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{considera solo le fermate $B_p$ che occuperanno un gate nell'intervallo
 $p$}%
\end_layout

\begin_layout Plain Layout

		$B_p = 
\backslash
{b 
\backslash
in B : d_b 
\backslash
geq p_{p-1} 
\backslash
wedge a_b 
\backslash
leq p_p 
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{considera solo i gate $G_p$ che sono abilitati nell'intervallo $p$}%
\end_layout

\begin_layout Plain Layout

		$G_p = 
\backslash
{g 
\backslash
in G : g$ è abilitato in $[p_{p-1}, p_p]$ e almeno una fermata $b 
\backslash
in B_p$ può essere assegnata a $g 
\backslash
}$
\backslash
;
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{sotto-grafi indotti}
\end_layout

\begin_layout Plain Layout

		genera $C_p = (B_p, F_b)$
\backslash
;
\end_layout

\begin_layout Plain Layout

		genera $H_p = (B_p, G_p, E_p)$
\backslash
;
\end_layout

\begin_layout Plain Layout

		genera il modello matematico del problema
\backslash
;
\end_layout

\begin_layout Plain Layout

		imposta gli upper bound delle $
\backslash
{x_{ik}
\backslash
}$ per forzare gli assegnamenti ottenuti con la precedente iterazione
\backslash
;
\end_layout

\begin_layout Plain Layout

		risolvi il modello
\backslash
;
\end_layout

\begin_layout Plain Layout

		imposta gli assegnamenti ottenuti nella soluzione complessiva
\backslash
;
\end_layout

\begin_layout Plain Layout

	}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return l'insieme di assegnamenti {$
\backslash
{x_{ik} : x_{ik}^* = 1
\backslash
}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Controllo a orizzonte recessivo}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:time_slice}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Calcolo della limitazione inferiore del numero di piattaforme
\end_layout

\begin_layout Standard
Al fine di certificare l'ottimalità di una soluzione trovata e dunque risparmiar
e tempo computazionale in un algoritmo di enumerazione delle soluzioni deve
 essere stimato il numero minimo di piattaforme necessarie ad accogliere
 tutte le fermate.
 Una stima per difetto del numero di piattaforme permette, inoltre, di capire
 immediatamente se un insieme di fermate è sicuramente non gestibile dall'autost
azione.
 Il numero minimo di piattaforme è il numero di colori soluzione del problema
 di restricted-coloring, il quale numero è maggiore o uguale al numero cromatico
 del problema di colorazione di grafi definito sullo stesso grafo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

.
 Il problema di determinare il numero cromatico è infatti un rilassamento
 del problema della formulazione di restricted-coloring, in cui sono stati
 eliminati i vincoli di compatibilità.
 Il grafo 
\begin_inset Formula $G=(V,\, E)$
\end_inset

 appartiene alla classe dei grafi perfetti quindi il numero cromatico è
 uguale al numero di cricca e determinare il numero di cricca di un grafo
 d'intervallo è risolubile in tempo polinomiale.
 
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
`E}
\end_layout

\end_inset

 sufficiente, ad esempio calcolare la cardinalità massima degli insiemi
 
\begin_inset Formula $Q_{r}$
\end_inset

 determinati in algoritmo
\begin_inset CommandInset ref
LatexCommand ref
reference "cliques_interferenti"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{La lista ordinata $T$ degli estremi temporali degli intervalli di
 fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{L'insieme delle lista di fermate che interferiscono $
\backslash
mathcal{Q}$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	Poni $r = 1$
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $
\backslash
mathcal{Q} = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $Q_{r} = 
\backslash
emptyset$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $prec = arrival$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni istante temporale
\backslash
ldots} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$t 
\backslash
in T$}{%
\end_layout

\begin_layout Plain Layout

		Poni $i = t.fermata$ 
\backslash
; %
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{se l'istante corrente rappresenta un arrivo}%
\end_layout

\begin_layout Plain Layout

			
\backslash
If{$t.type = arrival$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{la fermata 
\backslash
`e nel gruppo di interferenti}%
\end_layout

\begin_layout Plain Layout

				Poni $Q_r = Q_r 
\backslash
cup i$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

				Poni $prec = arrival$ 
\backslash
;%
\end_layout

\begin_layout Plain Layout

			} 
\backslash
Else {%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$prec = arrival 
\backslash
, 
\backslash
wedge 
\backslash
, |Q| > 1$}{%
\end_layout

\begin_layout Plain Layout

					Poni $
\backslash
mathcal{Q} = 
\backslash
mathcal{Q} 
\backslash
cup Q_r$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

				Poni $Q_{r+1} = Q_r 
\backslash
setminus i$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				Poni $r=r+1$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

				Poni $prec = departure$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

			} %
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

%	}
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$
\backslash
mathcal{Q}$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Algoritmo di ricerca delle fermate interferenti (clique massimali)}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{cliques_interferenti}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un altro modo di determinare tale valore consiste nel contare il numero
 massimo di intervalli temporali che si sovrappongono.
 L'algoritmo richiede la lista ordinata degli istanti temporali di arrivo
 e partenza delle fermate e deve poter determinare se si tratta di un arrivo
 o di una partenza ed è formalizzato in algoritmo
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "bp_lb"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb] %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input} %
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output} %
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{La lista ordinata $T$ degli estremi temporali degli intervalli di
 fermata} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{Il numero massimo di sovrapposizioni delle fermate $s$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	Poni $s = 0$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $s
\backslash
_correnti = 0$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	Poni $prec = arrival$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine %
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{Per ogni istante temporale} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$t 
\backslash
in T$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{se l'istante corrente rappresenta un arrivo}%
\end_layout

\begin_layout Plain Layout

		
\backslash
If{$t.type = arrival$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{si sovrappone un nuovo intervallo}%
\end_layout

\begin_layout Plain Layout

			Poni $s
\backslash
_correnti = s
\backslash
_correnti+1$
\backslash
;
\end_layout

\begin_layout Plain Layout

			Poni $prec = arrival$
\backslash
;%
\end_layout

\begin_layout Plain Layout

		} 
\backslash
Else { %
\end_layout

\begin_layout Plain Layout

			%
\backslash
If{$prec = arrival$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$s < s
\backslash
_correnti$} {Poni $s = s
\backslash
_correnti$ 
\backslash
; }
\end_layout

\begin_layout Plain Layout

			%}
\end_layout

\begin_layout Plain Layout

			Poni $s
\backslash
_correnti = s
\backslash
_correnti-1$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

			Poni $prec = departure$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

		} %
\end_layout

\begin_layout Plain Layout

	} %
\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$s$
\backslash
;}
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Calcolo del massimo numero di intervalli sovrapposti}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{bp_lb}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se la lista degli estremi degli intervalli è fornita in ordine non decrescente
 l'algoritmo ha complessità temporale lineare 
\begin_inset Formula $O(n)$
\end_inset

, altrimenti è la complessità e quella dell'algoritmo di ordinamento, in
 genere 
\begin_inset Formula $O(n\log n)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
linesnumbered%
\end_layout

\begin_layout Plain Layout


\backslash
begin{algorithm}[!htb]%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Input}{input}%
\end_layout

\begin_layout Plain Layout

	
\backslash
SetKwInOut{Output}{output}%
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

	
\backslash
Input{un'istanza $H = (B, G, E)$ di GA}%
\end_layout

\begin_layout Plain Layout

	
\backslash
Output{il grafo di compatibilità delle fermate $C = (B, F)$}%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	$F = 
\backslash
emptyset$
\backslash
;%
\end_layout

\begin_layout Plain Layout

	
\backslash
BlankLine%
\end_layout

\begin_layout Plain Layout

	
\backslash
tcc{per ogni gate $k$} %
\end_layout

\begin_layout Plain Layout

	
\backslash
ForEach{$k 
\backslash
in G$}{%
\end_layout

\begin_layout Plain Layout

		
\backslash
tcc{per ogni fermata $i$ che può essere assegnata al gate $k$}%
\end_layout

\begin_layout Plain Layout

		
\backslash
ForEach{$i 
\backslash
in B : (i, k) 
\backslash
in E$}{%
\end_layout

\begin_layout Plain Layout

			
\backslash
tcc{per ogni fermata $j$ diversa da $i$ che può essere assegnata al gate
 $k$}%
\end_layout

\begin_layout Plain Layout

			
\backslash
ForEach{$j 
\backslash
in B : (j, k) 
\backslash
in E 
\backslash
wedge j > i$}{%
\end_layout

\begin_layout Plain Layout

				
\backslash
tcc{se gli intervalli di occupazione delle fermate $i$ e $j$ sono disgiunte}%
\end_layout

\begin_layout Plain Layout

				
\backslash
If{$[a_i, d_i] 
\backslash
cap [a_j, d_j] = 
\backslash
emptyset$}{%
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{calcola il peso dell'arco $(i,j)$ }%
\end_layout

\begin_layout Plain Layout

					$c_{ij} = 
\backslash
max 
\backslash
{a_i - d_j,
\backslash
, a_j - d_i
\backslash
}$ 
\backslash
;
\end_layout

\begin_layout Plain Layout

					
\backslash
tcc{aggiungi l'arco $(i,j)$ all'insieme $F$}%
\end_layout

\begin_layout Plain Layout

					$F = F 
\backslash
cup 
\backslash
{(i,
\backslash
,j)
\backslash
}$
\backslash
;%
\end_layout

\begin_layout Plain Layout

				}%
\end_layout

\begin_layout Plain Layout

			}%
\end_layout

\begin_layout Plain Layout

		}%
\end_layout

\begin_layout Plain Layout

	}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
Return {$C = (B, F)$
\backslash
;} %
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
caption{Costruzione del grafo d'interferenza}
\end_layout

\begin_layout Plain Layout

	
\backslash
label{alg:bcg}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Metodo dei buffer temporali
\end_layout

\begin_layout Section
Pre-elaborazione delle istanze: riduzione della dimensione e rottura di
 alcune simmetrie
\end_layout

\begin_layout Section
Algoritmo di riallocazione
\end_layout

\begin_layout Standard
Per poter riassegnare i gate il sistema è necessario disporre in tempo reale
 delle informazioni relative allo stato delle fermate, ovvero degli orari
 effettivi di arrivo e partenza delle corse, e dello stato di occupazione
 dei gate.
\end_layout

\begin_layout Standard
La riallocazione è necessaria quando si verificano i seguenti casi: 
\end_layout

\begin_layout Itemize
creazione di nuove corse non contemplate nella pianificazione;
\end_layout

\begin_layout Itemize
aggiunta di veicoli ad una corsa (corse bis);
\end_layout

\begin_layout Itemize
ritardi o anticipi tali da determinare sovrapposizioni di fermate su uno
 stesso gate;
\end_layout

\begin_layout Standard
I problemi possono essere affrontati impiegando l'algoritmo di pianificazione
 statica con i dati modificati.
 Se il problema richiede la generazione di assegnamenti non considerati
 (nuove corse) al modello matematico vanno aggiungente dinamicamente nuove
 variabili e nuovi vincoli che rappresentano la situazione corrente, altrimenti
 occorre modificare i vincoli di compatibilità.
 Se si usa la tecnica detta 
\begin_inset Quotes eld
\end_inset

warm-start
\begin_inset Quotes erd
\end_inset

 (partenza a caldo) fornendo al risolutore il piano statico (ora inammissibile)
 e si termina alla prima soluzione ammissibile si dovrebbe giungere rapidamente
 ad una soluzione simile a quella data.
 Con partenza 
\begin_inset Quotes eld
\end_inset

a caldo
\begin_inset Quotes erd
\end_inset

 s'intende la procedura che permette di intraprendere il processo di ricerca
 di una soluzione ammissibile a partire da una soluzione fornita.
 Il processo di ricerca non fornisce, però, la garanzia di trovare una soluzione.
\end_layout

\begin_layout Standard
Una tecnica generale che permette di verificare l'esistenza di una soluzione
 ammissibile e, se esiste, di determinarla, è il backtracking.
 Tale tecnica considera tutti i possibili assegnamenti, scegliendo e disfacendo
 gli assegnamenti che non soddisfano i vincoli.
 Consiste nell'esplorazione di strutture ad albero in cui i nodi rappresentano
 delle soluzioni parziali (nodi non terminali) o complete (foglie) e tiene
 traccia di tutti i nodi e tutti i rami (scelta di un assegnamento) visitati
 in precedenza, in modo da poter tornare indietro al più vicino nodo che
 conteneva un cammino ancora inesplorato nel caso che la ricerca nel ramo
 attuale non abbia successo.
\end_layout

\begin_layout Subsubsection*
Conflitto dovuto a modifica dell'intervallo di fermata
\end_layout

\begin_layout Standard
Quando due fermate si trovano ad essere in conflitto perché gli intervalli
 di occupazione del gate si sovrappongono si può effettuare un riassegnamento
 con l'obiettivo di spostare la fermata su un gate che sia il più vicino
 possibile.
 Per far ciò è necessario stimare il tempo di occupazione del gate da parte
 delle nuove fermate e trovare il gate più vicino che sia libero in uno
 dei due intervalli, quindi si può assegnare la fermata dell'intervallo
 prescelto al gate individuato.
\end_layout

\begin_layout Standard
Se non è possibile individuare un gate libero negli intervalli di occupazione
 stimati occorre effettuare almeno due cambiamenti negli assegnamenti prodotti
 nella pianificazione statica.
 Un obiettivo perseguibile è quello di introdurre il minor numero di cambiamenti
 rispetto al piano.
 Per far ciò devono essere ricalcolate le compatibilità fra le fermate e
 si deve procedere a ritroso nella ricerca con l'algoritmo di backtracking.
 Occorre disfare iterativamente una delle scelte di assegnamento della pianifica
zione statica e tentare di costruire una soluzione ammissibile a partire
 dagli assegnamenti parziali.
 Se non si può generare una soluzione ammissibile a partire dagli assegnamenti
 dati si sale di un livello e disfacendo un assegnamento.
\end_layout

\begin_layout Subsubsection*
Creazione di nuovi servizi
\end_layout

\begin_layout Standard
Sono nuovi servizi le corse non contemplate nella pianificazione statica.
 Le nuove fermate possono essere assegnate immediatamente ai gate disponibili,
 stimando il tempo di occupazione dei gate da parte delle nuove fermate.
 Qualora non sia possibile assegnare le nuove fermate si deve procedere
 alla costruzione di nuove soluzioni con la tecnica del backtracking partendo
 dalla soluzione della pianificazione statica e modificando opportunamente
 il modello per tener conto delle nuove variabili (possibili assegnamenti)
 e dei nuovi vincoli di compatibilità.
 È possibile impiegare il metodo per la pianificazione statica generando
 il nuovo modello e partendo nella ricerca di una nuova soluzione da quella
 del piano statico in cui le nuove corse non sono assegnate.
\end_layout

\begin_layout Subsubsection*
Creazione di corse bis
\end_layout

\begin_layout Standard
Le corse bis sono nuove corse che vanno trattate con l'accorgimento di essere
 posizionate su gate adiacenti o, se ciò non è possibile, su gate prossimi
 a quello della corsa padre.
\end_layout

\begin_layout Chapter
Risultati computazionali
\begin_inset CommandInset label
LatexCommand label
name "chap:Risultati-computazionali"

\end_inset


\end_layout

\begin_layout Section
Il caso di studio
\end_layout

\begin_layout Standard
Le prove numeriche sono state effettuate estraendo un'istanza significativa
 dalle operazioni effettuate nell'Autostazione di Bologna.
 L'autostazione dispone di 24 piattaforme per le partenze, di cui 4 normalmente
 riservate ai servizi internazionali e gli altri 20 per i servizi di linea
 o come parcheggi temporanei.
 Le piattaforme riservate a servizi particolari vengono gestite manualmente
 e non entrano nella fase di pianificazione.
 L'istanza del problema considera i dati relative alle corse schedulate
 di un giorno tipo, ossia considera le corse schedulate in un certo periodo
 e che hanno validità su più giorni dell'anno.
\end_layout

\begin_layout Standard
Ad ogni corsa, che ha un ora di partenza 
\begin_inset Formula $t_{d}$
\end_inset

, vengono associati altri due tempi: il tempo di anticipo rispetto all'ora
 di partenza 
\begin_inset Formula $t_{1}$
\end_inset

 e il tempo di ritardo rispetto all'ora di partenza 
\begin_inset Formula $t_{2}$
\end_inset

.
 Siano 
\begin_inset Formula $a=t_{p}-t_{1}$
\end_inset

 e 
\begin_inset Formula $d=t_{p}+t_{2}$
\end_inset

.
 L'algoritmo di pianificazione impiegato nell'Autostazione considera occupata
 della piattaforma per tutto l'intervallo 
\begin_inset Formula $[a,d]$
\end_inset

, come rappresentato in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Tempo-di-occupazione"

\end_inset

.
\end_layout

\begin_layout Standard
L'istanza in considerazione include 229 corse non internazionali da pianificare,
 distinte in provinciali e regionali, che non includono né corse bis (da
 assegnare a piattaforme adiacenti) né corse servite da veicoli snodati
 (che sono servite solo da alcune piattaforme).
 Inoltre una piattaforma è stata considerata non disponibile.
 I tempi 
\begin_inset Formula $t_{1}$
\end_inset

 e 
\begin_inset Formula $t_{2}$
\end_inset

 non sono costanti ma variano al variare dell'ora di partenza della corsa
 alla quale si riferiscono.
 La tabella
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Parametri-t_1-e-t_2"

\end_inset

 mostra come siano stati impostati i tempi che determinano, in fase di pianifica
zione, l'intervallo di occupazione di una piattaforma.
 I tempi sono stati scelti dagli operatori che hanno considerato i parametri
 nelle ore di punta del mattino, del pomeriggio e della sera e per le fasce
 di morbida del mattino, del pomeriggio e della sera.
 L'ultima riga si riferisce ai tempi per le fasce di morbida, non elencate
 esplicitamente.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dalle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t_{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fascia oraria
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
07.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
08.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Punta Mattina
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
14.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dura
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
16.00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
19.30
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pomeridiana
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Morbida
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
I buffer temporali al variare della fascia oraria: 
\begin_inset Formula $t_{1}$
\end_inset

e 
\begin_inset Formula $t_{2}$
\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "tab:Parametri-t_1-e-t_2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La frequenza dei servizi, divisa per fasce orarie, è rappresentata in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Frequenza-delle-fermate"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\backslash
input{img/diagramma_carico}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Distribuzione delle fermate in fasce orarie di 30 minuti
\begin_inset CommandInset label
LatexCommand label
name "fig:Frequenza-delle-fermate"

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:carico"

\end_inset


\end_layout

\end_inset

L'istanza reale, contente dati relativi all'autostazione di Bologna, su
 cui sono stati effettuati i computazionali degli algoritmi per la soluzione
 dei modelli proposti presenta in una giornata tipo 229 fermate di corse
 in partenza da assegnare a 24 gate.
 Di questi quattro, disegnati in basso nelle immagini che seguono, sono
 destinati a linee internazionali e sono escluse dalla pianificazione automatica.
 La piattaforma n.
 10, disegnata per decima contando le piattaforme a partire dalla n.
 1 in alto, è stata disabilitata per tutta la giornata tipo.
 Le prime fermate iniziano ad impegnare una piattaforma alle 5.35 del mattino
 e l'ultima partenza rilascia la piattaforma alle 20.25, su un intervallo
 temporale esteso per 14 ore e 50 minuti.
 
\end_layout

\begin_layout Standard
La soluzione ottenuta dalla pianificazione con GatePlanner e probabilmente
 modificata dal capostazione è illustrata in figura.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Soluzione-legacy"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/actual_solution_m.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Soluzione-legacy"

\end_inset

Allocazioni predisposte dall'Autostazione
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Parametri degli algoritmi
\end_layout

\begin_layout Section
Soluzioni generate dagli algoritmi
\end_layout

\begin_layout Standard
Una soluzione con il minimo numero di piattaforme che rispetta gli stessi
 vincoli.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_MathModelColoring.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_coloring"

\end_inset

Allocazioni che minimizzano il numero di piattaforme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto"

\end_inset

Allocazioni che massimizzano lo scarto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto"

\end_inset

Allocazioni che minimizzano il conflitto
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/actual_solution_m.pdf
	width 48text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:real_legacy"

\end_inset

Allocazioni predisposte dall'Autostazione
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_MathModelColoring.pdf
	width 48text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:real_coloring"

\end_inset

Minimizzazione del numero di piattaforme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_IterativeTimeHorizonMathMD.pdf
	width 48text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:real_scarto"

\end_inset

Massimizzazione dello scarto
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/real_IterativeTimeHorizonMath.pdf
	width 48text%

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "subfig:real_confitto"

\end_inset

Minimizzazione del conflitto
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Allocazioni predisposte dall'Autostazione e soluzioni proposte
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Soluzioni alternative al variare del numero di piattaforme
\end_layout

\begin_layout Standard
Vengono presentate le soluzioni ottenute facendo variare il numero di piattaform
e presenti nel problema fra 16 e 19.
 La piattaforma n.
 10 rimane esclusa da quelle presenti nelle liste di compatibilità in modo
 da avere un limite inferiore 
\begin_inset Formula $\chi=15$
\end_inset

 che non corrisponde al minimo numero di piattaforme.
\end_layout

\begin_layout Subsection*
Soluzioni ottenute con 16 piattaforme
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/istanza_reale_feasible_no10_15/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-15"

\end_inset

Allocazioni che massimizzano lo scarto (15 piattaforme)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/istanza_reale_feasible_no10_15/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-15"

\end_inset

Allocazioni che minimizzano il conflitto (15 piattaforme)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Soluzioni ottenute con 17 piattaforme
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/istanza_reale_feasible_no10_16/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-1-16"

\end_inset

Allocazioni che massimizzano lo scarto (16 piattaforme)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/istanza_reale_feasible_no10_16/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-16"

\end_inset

Allocazioni che minimizzano il conflitto (16 piattaforme)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Soluzioni ottenute con 18 piattaforme
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/istanza_reale_feasible_no10_17/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-17"

\end_inset

Allocazioni che massimizzano lo scarto (17 piattaforme)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/istanza_reale_feasible_no10_17/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-17"

\end_inset

Allocazioni che minimizzano il conflitto (17 piattaforme)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Soluzioni alternative al variare delle finestre temporali
\end_layout

\begin_layout Standard
Vengono presentate le soluzioni mediante l'algoritmo di minimizzazione del
 numero di piattaforme utilizzate quando il grafo delle interferenze 
\begin_inset Formula $G$
\end_inset

 è costruito aggiungendo un buffer temporale simmetrico di 10, 8, 6, 4 e
 2 minuti.
 I test con valori di buffer maggiori o uguali a 12 minuti non hanno prodotto
 soluzioni ammissibili.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m1/MathModelColoring.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_coloring-b2"

\end_inset

Allocazioni che minimizzano le piattaforme (buffer di 2 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m1/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-b2"

\end_inset

Allocazioni che massimizzano lo scarto (buffer di 2 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m1/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-b2"

\end_inset

Allocazioni che minimizzano il conflitto (buffer di 2 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m2/MathModelColoring.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_coloring-b4"

\end_inset

Allocazioni che minimizzano le piattaforme (buffer di 4 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m2/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-b4"

\end_inset

Allocazioni che massimizzano lo scarto (buffer di 4 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m2/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-b4"

\end_inset

Allocazioni che minimizzano il conflitto (buffer di 4 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m3/MathModelColoring.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_coloring-b6"

\end_inset

Allocazioni che minimizzano le piattaforme (buffer di 6 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m3/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-b6"

\end_inset

Allocazioni che massimizzano lo scarto (buffer di 6 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m3/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-b6"

\end_inset

Allocazioni che minimizzano il conflitto (buffer di 6 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m4/MathModelColoring.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_coloring-b8"

\end_inset

Allocazioni che minimizzano le piattaforme (buffer di 8 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m4/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-b8"

\end_inset

Allocazioni che massimizzano lo scarto (buffer di 8 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m4/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-b8"

\end_inset

Allocazioni che minimizzano il conflitto (buffer di 8 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m5/MathModelColoring.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_coloring-b10"

\end_inset

Allocazioni che minimizzano le piattaforme (buffer di 10 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m5/IterativeTimeHorizonMathMD.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_scarto-b10"

\end_inset

Allocazioni che massimizzano lo scarto (buffer di 10 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
x
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fbox{
\end_layout

\end_inset


\begin_inset Graphics
	filename img/time_buffer/m5/IterativeTimeHorizonMath.pdf
	scale 70

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:real_conflitto-b10"

\end_inset

Allocazioni che minimizzano il conflitto (buffer di 10 minuti)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Conclusioni e sviluppi futuri
\begin_inset CommandInset label
LatexCommand label
name "chap:Conclusioni-e-sviluppi"

\end_inset


\end_layout

\begin_layout Section
Conclusioni
\end_layout

\begin_layout Section
Sviluppi futuri
\end_layout

\begin_layout Subsection*
Modello di Set Covering
\end_layout

\begin_layout Standard
Per ridurre le simmetrie si potrebbe riformulare il problema utilizzando
 una formulazione in cui i gate sia considerati in modo pressoché indistinto.
 Il problema della colorazione di grafi è infatti affrontato con successo
 impiegando formulazioni di set partitioning o set covering risolte con
 tecniche di generazione di colonne integrate ad altri metodi per la determinazi
one di soluzioni intere.
\end_layout

\begin_layout Standard
Il problema sarebbe da riformulare come segue:
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
Dati
\end_layout

\begin_layout Itemize
un grafo d'intervallo 
\begin_inset Formula $G=(V,E)$
\end_inset

,
\end_layout

\begin_layout Itemize
un insieme di colori 
\begin_inset Formula $C$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $|V|$
\end_inset

 liste di compatibilità 
\begin_inset Formula $L(i)$
\end_inset

 e
\end_layout

\begin_layout Itemize
un numero positivo 
\begin_inset Formula $\chi_{r}$
\end_inset


\end_layout

\begin_layout Plain Layout
determinare una partizione 
\begin_inset Formula $\mathcal{P}=\left\{ P_{1},P_{2},\ldots,P_{\chi^{\prime}}\right\} $
\end_inset

 dei vertici 
\begin_inset Formula $V$
\end_inset

 tale che
\end_layout

\begin_layout Itemize
nessuna coppia di vertici adiacenti appartenga ad uno stesso gruppo (colorazione
 propria),
\end_layout

\begin_layout Itemize
le partizioni siano scelte in modo da rispettare il vincolo che ogni colore
 assegnato ad ogni nodo 
\begin_inset Formula $i$
\end_inset

 sia presente nella lista di compatibilità 
\begin_inset Formula $L(i)$
\end_inset

 e
\end_layout

\begin_layout Itemize
il numero di partizioni usate 
\begin_inset Formula $\chi^{\prime}$
\end_inset

 sia minore o uguale a 
\begin_inset Formula $\chi_{r}$
\end_inset

 .
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Il problema di list-coloring può essere formulato come un problema di max
 weighted partition (si veda
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "bjorklund2009set"

\end_inset

) e tale problema può essere risolto con tecniche di Branch&Price.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
backmatter{}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "IEEEabrv,bib/gate_assignment"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
